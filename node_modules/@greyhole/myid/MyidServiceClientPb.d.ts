/**
 * @fileoverview gRPC-Web generated client stub for greyhole.myid
 * @enhanceable
 * @public
 */
import * as grpcWeb from 'grpc-web';
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';
import * as myid_api_myid_pb from './myid_pb';
export declare class MyIDClient {
    client_: grpcWeb.AbstractClientBase;
    hostname_: string;
    credentials_: null | {
        [index: string]: string;
    };
    options_: null | {
        [index: string]: any;
    };
    constructor(hostname: string, credentials?: null | {
        [index: string]: string;
    }, options?: null | {
        [index: string]: any;
    });
    methodInfoSignUp: any;
    signUp(request: myid_api_myid_pb.SignUpRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.SignUpReply>;
    signUp(request: myid_api_myid_pb.SignUpRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.SignUpReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.SignUpReply>;
    methodInfoSignIn: any;
    signIn(request: myid_api_myid_pb.SignInRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.SignInReply>;
    signIn(request: myid_api_myid_pb.SignInRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.SignInReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.SignInReply>;
    methodInfoSignUpV2: any;
    signUpV2(request: myid_api_myid_pb.SignUpV2Request, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.SignUpReply>;
    signUpV2(request: myid_api_myid_pb.SignUpV2Request, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.SignUpReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.SignUpReply>;
    methodInfoSignInV2: any;
    signInV2(request: myid_api_myid_pb.SignInV2Request, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.SignInReply>;
    signInV2(request: myid_api_myid_pb.SignInV2Request, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.SignInReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.SignInReply>;
    methodInfoAddCredential: any;
    addCredential(request: myid_api_myid_pb.AddCredentialRequest, metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;
    addCredential(request: myid_api_myid_pb.AddCredentialRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;
    methodInfoResendSignInOTP: any;
    resendSignInOTP(request: myid_api_myid_pb.ResendSignInOTPRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.ResendSignInOTPReply>;
    resendSignInOTP(request: myid_api_myid_pb.ResendSignInOTPRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.ResendSignInOTPReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.ResendSignInOTPReply>;
    methodInfoConfirmSignIn: any;
    confirmSignIn(request: myid_api_myid_pb.ConfirmSignInRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.ConfirmSignInReply>;
    confirmSignIn(request: myid_api_myid_pb.ConfirmSignInRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.ConfirmSignInReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.ConfirmSignInReply>;
    methodInfoSignOut: any;
    signOut(request: google_protobuf_empty_pb.Empty, metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;
    signOut(request: google_protobuf_empty_pb.Empty, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;
    methodInfoCreatePassword: any;
    createPassword(request: myid_api_myid_pb.CreatePasswordRequest, metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;
    createPassword(request: myid_api_myid_pb.CreatePasswordRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;
    methodInfoCreateAccessToken: any;
    createAccessToken(request: myid_api_myid_pb.CreateAccessTokenRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.CreateAccessTokenReply>;
    createAccessToken(request: myid_api_myid_pb.CreateAccessTokenRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.CreateAccessTokenReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.CreateAccessTokenReply>;
    methodInfoMe: any;
    me(request: google_protobuf_empty_pb.Empty, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.MeReply>;
    me(request: google_protobuf_empty_pb.Empty, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.MeReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.MeReply>;
    methodInfoChangePassword: any;
    changePassword(request: myid_api_myid_pb.ChangePasswordRequest, metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;
    changePassword(request: myid_api_myid_pb.ChangePasswordRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;
    methodInfoUpdateMetadata: any;
    updateMetadata(request: myid_api_myid_pb.UpdateMetadataRequest, metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;
    updateMetadata(request: myid_api_myid_pb.UpdateMetadataRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;
    methodInfoUpdateEmail: any;
    updateEmail(request: myid_api_myid_pb.UpdateEmailRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.UpdateEmailReply>;
    updateEmail(request: myid_api_myid_pb.UpdateEmailRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.UpdateEmailReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.UpdateEmailReply>;
    methodInfoVerifyEmail: any;
    verifyEmail(request: myid_api_myid_pb.VerifyEmailRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.VerifyEmailReply>;
    verifyEmail(request: myid_api_myid_pb.VerifyEmailRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.VerifyEmailReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.VerifyEmailReply>;
    methodInfoUpdatePhoneNumber: any;
    updatePhoneNumber(request: myid_api_myid_pb.UpdatePhoneNumberRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.UpdatePhoneNumberReply>;
    updatePhoneNumber(request: myid_api_myid_pb.UpdatePhoneNumberRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.UpdatePhoneNumberReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.UpdatePhoneNumberReply>;
    methodInfoUpdatePhoneNumberV2: any;
    updatePhoneNumberV2(request: myid_api_myid_pb.UpdatePhoneNumberV2Request, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.UpdatePhoneNumberReply>;
    updatePhoneNumberV2(request: myid_api_myid_pb.UpdatePhoneNumberV2Request, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.UpdatePhoneNumberReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.UpdatePhoneNumberReply>;
    methodInfoVerifyPhoneNumber: any;
    verifyPhoneNumber(request: myid_api_myid_pb.VerifyPhoneNumberRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.VerifyPhoneNumberReply>;
    verifyPhoneNumber(request: myid_api_myid_pb.VerifyPhoneNumberRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.VerifyPhoneNumberReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.VerifyPhoneNumberReply>;
    methodInfoResetPassword: any;
    resetPassword(request: myid_api_myid_pb.ResetPasswordRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.ResetPasswordReply>;
    resetPassword(request: myid_api_myid_pb.ResetPasswordRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.ResetPasswordReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.ResetPasswordReply>;
    methodInfoResetPasswordV2: any;
    resetPasswordV2(request: myid_api_myid_pb.ResetPasswordV2Request, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.ResetPasswordReply>;
    resetPasswordV2(request: myid_api_myid_pb.ResetPasswordV2Request, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.ResetPasswordReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.ResetPasswordReply>;
    methodInfoVerifyResetPassword: any;
    verifyResetPassword(request: myid_api_myid_pb.VerifyResetPasswordRequest, metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;
    verifyResetPassword(request: myid_api_myid_pb.VerifyResetPasswordRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;
    methodInfoSubmitResetPassword: any;
    submitResetPassword(request: myid_api_myid_pb.SubmitResetPasswordRequest, metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;
    submitResetPassword(request: myid_api_myid_pb.SubmitResetPasswordRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;
}
export declare class TheCoffeeHouseClient {
    client_: grpcWeb.AbstractClientBase;
    hostname_: string;
    credentials_: null | {
        [index: string]: string;
    };
    options_: null | {
        [index: string]: any;
    };
    constructor(hostname: string, credentials?: null | {
        [index: string]: string;
    }, options?: null | {
        [index: string]: any;
    });
    methodInfoCreateUser: any;
    createUser(request: myid_api_myid_pb.CreateUserRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.CreateUserReply>;
    createUser(request: myid_api_myid_pb.CreateUserRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.CreateUserReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.CreateUserReply>;
    methodInfoListUsers: any;
    listUsers(request: myid_api_myid_pb.ListUsersRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.ListUsersReply>;
    listUsers(request: myid_api_myid_pb.ListUsersRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.ListUsersReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.ListUsersReply>;
    methodInfoUpdateUser: any;
    updateUser(request: myid_api_myid_pb.UpdateUserRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.UpdateUserReply>;
    updateUser(request: myid_api_myid_pb.UpdateUserRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.UpdateUserReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.UpdateUserReply>;
    methodInfoLockUser: any;
    lockUser(request: myid_api_myid_pb.LockUserRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.LockUserReply>;
    lockUser(request: myid_api_myid_pb.LockUserRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.LockUserReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.LockUserReply>;
    methodInfoUnlockUser: any;
    unlockUser(request: myid_api_myid_pb.UnlockUserRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.UnlockUserReply>;
    unlockUser(request: myid_api_myid_pb.UnlockUserRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.UnlockUserReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.UnlockUserReply>;
    methodInfoBanUser: any;
    banUser(request: myid_api_myid_pb.BanUserRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.BanUserReply>;
    banUser(request: myid_api_myid_pb.BanUserRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.BanUserReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.BanUserReply>;
    methodInfoUnbanUser: any;
    unbanUser(request: myid_api_myid_pb.UnbanUserRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.UnbanUserReply>;
    unbanUser(request: myid_api_myid_pb.UnbanUserRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.UnbanUserReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.UnbanUserReply>;
    methodInfoGetUser: any;
    getUser(request: myid_api_myid_pb.GetUserRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.GetUserReply>;
    getUser(request: myid_api_myid_pb.GetUserRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.GetUserReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.GetUserReply>;
    methodInfoResendCreatePasswordOTP: any;
    resendCreatePasswordOTP(request: myid_api_myid_pb.ResendCreatePasswordOTPRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.ResendCreatePasswordOTPReply>;
    resendCreatePasswordOTP(request: myid_api_myid_pb.ResendCreatePasswordOTPRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.ResendCreatePasswordOTPReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.ResendCreatePasswordOTPReply>;
    methodInfoGetUsers: any;
    getUsers(request: myid_api_myid_pb.GetUsersRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.GetUsersReply>;
    getUsers(request: myid_api_myid_pb.GetUsersRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.GetUsersReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.GetUsersReply>;
    methodInfoResetResendOTP: any;
    resetResendOTP(request: myid_api_myid_pb.ResetResendOTPRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.ResetResendOTPReply>;
    resetResendOTP(request: myid_api_myid_pb.ResetResendOTPRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.ResetResendOTPReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.ResetResendOTPReply>;
}
export declare class WaitressClient {
    client_: grpcWeb.AbstractClientBase;
    hostname_: string;
    credentials_: null | {
        [index: string]: string;
    };
    options_: null | {
        [index: string]: any;
    };
    constructor(hostname: string, credentials?: null | {
        [index: string]: string;
    }, options?: null | {
        [index: string]: any;
    });
    methodInfoGetUsers: any;
    getUsers(request: myid_api_myid_pb.GetUsersRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.GetUsersReply>;
    getUsers(request: myid_api_myid_pb.GetUsersRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.GetUsersReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.GetUsersReply>;
    methodInfoGetUserIDs: any;
    getUserIDs(request: myid_api_myid_pb.GetUserIDsRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.GetUserIDsReply>;
    getUserIDs(request: myid_api_myid_pb.GetUserIDsRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.GetUserIDsReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.GetUserIDsReply>;
    methodInfoGetUsersByUsername: any;
    getUsersByUsername(request: myid_api_myid_pb.GetUsersByUsernameRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.GetUsersByUsernameReply>;
    getUsersByUsername(request: myid_api_myid_pb.GetUsersByUsernameRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.GetUsersByUsernameReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.GetUsersByUsernameReply>;
}
export declare class ColdBrewClient {
    client_: grpcWeb.AbstractClientBase;
    hostname_: string;
    credentials_: null | {
        [index: string]: string;
    };
    options_: null | {
        [index: string]: any;
    };
    constructor(hostname: string, credentials?: null | {
        [index: string]: string;
    }, options?: null | {
        [index: string]: any;
    });
    methodInfoListSignInEvents: any;
    listSignInEvents(request: myid_api_myid_pb.ListSignInEventsRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.ListSignInEventsReply>;
    listSignInEvents(request: myid_api_myid_pb.ListSignInEventsRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.ListSignInEventsReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.ListSignInEventsReply>;
    methodInfoListSignUpEvents: any;
    listSignUpEvents(request: myid_api_myid_pb.ListSignUpEventsRequest, metadata: grpcWeb.Metadata | null): Promise<myid_api_myid_pb.ListSignUpEventsReply>;
    listSignUpEvents(request: myid_api_myid_pb.ListSignUpEventsRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myid_api_myid_pb.ListSignUpEventsReply) => void): grpcWeb.ClientReadableStream<myid_api_myid_pb.ListSignUpEventsReply>;
}
