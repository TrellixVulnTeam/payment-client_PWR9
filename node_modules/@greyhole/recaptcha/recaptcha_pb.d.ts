import * as jspb from 'google-protobuf'

import * as validate_validate_pb from '@crypto-game-portal/validate/validate_pb';


export class GetCaptchaRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GetCaptchaRequest.AsObject;
  static toObject(includeInstance: boolean, msg: GetCaptchaRequest): GetCaptchaRequest.AsObject;
  static serializeBinaryToWriter(message: GetCaptchaRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GetCaptchaRequest;
  static deserializeBinaryFromReader(message: GetCaptchaRequest, reader: jspb.BinaryReader): GetCaptchaRequest;
}

export namespace GetCaptchaRequest {
  export type AsObject = {
  }
}

export class GetCaptchaReply extends jspb.Message {
  getId(): string;
  setId(value: string): GetCaptchaReply;

  getData(): string;
  setData(value: string): GetCaptchaReply;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GetCaptchaReply.AsObject;
  static toObject(includeInstance: boolean, msg: GetCaptchaReply): GetCaptchaReply.AsObject;
  static serializeBinaryToWriter(message: GetCaptchaReply, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GetCaptchaReply;
  static deserializeBinaryFromReader(message: GetCaptchaReply, reader: jspb.BinaryReader): GetCaptchaReply;
}

export namespace GetCaptchaReply {
  export type AsObject = {
    id: string,
    data: string,
  }
}

export class VerifyCaptchaRequest extends jspb.Message {
  getId(): string;
  setId(value: string): VerifyCaptchaRequest;

  getCode(): string;
  setCode(value: string): VerifyCaptchaRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): VerifyCaptchaRequest.AsObject;
  static toObject(includeInstance: boolean, msg: VerifyCaptchaRequest): VerifyCaptchaRequest.AsObject;
  static serializeBinaryToWriter(message: VerifyCaptchaRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): VerifyCaptchaRequest;
  static deserializeBinaryFromReader(message: VerifyCaptchaRequest, reader: jspb.BinaryReader): VerifyCaptchaRequest;
}

export namespace VerifyCaptchaRequest {
  export type AsObject = {
    id: string,
    code: string,
  }
}

export class VerifyCaptchaReply extends jspb.Message {
  getSuccess(): boolean;
  setSuccess(value: boolean): VerifyCaptchaReply;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): VerifyCaptchaReply.AsObject;
  static toObject(includeInstance: boolean, msg: VerifyCaptchaReply): VerifyCaptchaReply.AsObject;
  static serializeBinaryToWriter(message: VerifyCaptchaReply, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): VerifyCaptchaReply;
  static deserializeBinaryFromReader(message: VerifyCaptchaReply, reader: jspb.BinaryReader): VerifyCaptchaReply;
}

export namespace VerifyCaptchaReply {
  export type AsObject = {
    success: boolean,
  }
}

