import * as jspb from 'google-protobuf'

import * as google_protobuf_timestamp_pb from 'google-protobuf/google/protobuf/timestamp_pb';


export class CreateResourceRequest extends jspb.Message {
  getName(): string;
  setName(value: string): CreateResourceRequest;

  getDescription(): string;
  setDescription(value: string): CreateResourceRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CreateResourceRequest.AsObject;
  static toObject(includeInstance: boolean, msg: CreateResourceRequest): CreateResourceRequest.AsObject;
  static serializeBinaryToWriter(message: CreateResourceRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CreateResourceRequest;
  static deserializeBinaryFromReader(message: CreateResourceRequest, reader: jspb.BinaryReader): CreateResourceRequest;
}

export namespace CreateResourceRequest {
  export type AsObject = {
    name: string,
    description: string,
  }
}

export class ListResourcesRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListResourcesRequest.AsObject;
  static toObject(includeInstance: boolean, msg: ListResourcesRequest): ListResourcesRequest.AsObject;
  static serializeBinaryToWriter(message: ListResourcesRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListResourcesRequest;
  static deserializeBinaryFromReader(message: ListResourcesRequest, reader: jspb.BinaryReader): ListResourcesRequest;
}

export namespace ListResourcesRequest {
  export type AsObject = {
  }
}

export class ListResourcesReply extends jspb.Message {
  getResourcesList(): Array<Resource>;
  setResourcesList(value: Array<Resource>): ListResourcesReply;
  clearResourcesList(): ListResourcesReply;
  addResources(value?: Resource, index?: number): Resource;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListResourcesReply.AsObject;
  static toObject(includeInstance: boolean, msg: ListResourcesReply): ListResourcesReply.AsObject;
  static serializeBinaryToWriter(message: ListResourcesReply, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListResourcesReply;
  static deserializeBinaryFromReader(message: ListResourcesReply, reader: jspb.BinaryReader): ListResourcesReply;
}

export namespace ListResourcesReply {
  export type AsObject = {
    resourcesList: Array<Resource.AsObject>,
  }
}

export class GetResourceRequest extends jspb.Message {
  getId(): number;
  setId(value: number): GetResourceRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GetResourceRequest.AsObject;
  static toObject(includeInstance: boolean, msg: GetResourceRequest): GetResourceRequest.AsObject;
  static serializeBinaryToWriter(message: GetResourceRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GetResourceRequest;
  static deserializeBinaryFromReader(message: GetResourceRequest, reader: jspb.BinaryReader): GetResourceRequest;
}

export namespace GetResourceRequest {
  export type AsObject = {
    id: number,
  }
}

export class UpdateResourceRequest extends jspb.Message {
  getId(): number;
  setId(value: number): UpdateResourceRequest;

  getName(): string;
  setName(value: string): UpdateResourceRequest;

  getDescription(): string;
  setDescription(value: string): UpdateResourceRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): UpdateResourceRequest.AsObject;
  static toObject(includeInstance: boolean, msg: UpdateResourceRequest): UpdateResourceRequest.AsObject;
  static serializeBinaryToWriter(message: UpdateResourceRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): UpdateResourceRequest;
  static deserializeBinaryFromReader(message: UpdateResourceRequest, reader: jspb.BinaryReader): UpdateResourceRequest;
}

export namespace UpdateResourceRequest {
  export type AsObject = {
    id: number,
    name: string,
    description: string,
  }
}

export class CreateActionRequest extends jspb.Message {
  getName(): string;
  setName(value: string): CreateActionRequest;

  getDescription(): string;
  setDescription(value: string): CreateActionRequest;

  getResourceId(): number;
  setResourceId(value: number): CreateActionRequest;

  getPath(): string;
  setPath(value: string): CreateActionRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CreateActionRequest.AsObject;
  static toObject(includeInstance: boolean, msg: CreateActionRequest): CreateActionRequest.AsObject;
  static serializeBinaryToWriter(message: CreateActionRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CreateActionRequest;
  static deserializeBinaryFromReader(message: CreateActionRequest, reader: jspb.BinaryReader): CreateActionRequest;
}

export namespace CreateActionRequest {
  export type AsObject = {
    name: string,
    description: string,
    resourceId: number,
    path: string,
  }
}

export class ListActionsRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListActionsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: ListActionsRequest): ListActionsRequest.AsObject;
  static serializeBinaryToWriter(message: ListActionsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListActionsRequest;
  static deserializeBinaryFromReader(message: ListActionsRequest, reader: jspb.BinaryReader): ListActionsRequest;
}

export namespace ListActionsRequest {
  export type AsObject = {
  }
}

export class ListActionsReply extends jspb.Message {
  getActionsList(): Array<Action>;
  setActionsList(value: Array<Action>): ListActionsReply;
  clearActionsList(): ListActionsReply;
  addActions(value?: Action, index?: number): Action;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListActionsReply.AsObject;
  static toObject(includeInstance: boolean, msg: ListActionsReply): ListActionsReply.AsObject;
  static serializeBinaryToWriter(message: ListActionsReply, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListActionsReply;
  static deserializeBinaryFromReader(message: ListActionsReply, reader: jspb.BinaryReader): ListActionsReply;
}

export namespace ListActionsReply {
  export type AsObject = {
    actionsList: Array<Action.AsObject>,
  }
}

export class GetActionRequest extends jspb.Message {
  getId(): number;
  setId(value: number): GetActionRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GetActionRequest.AsObject;
  static toObject(includeInstance: boolean, msg: GetActionRequest): GetActionRequest.AsObject;
  static serializeBinaryToWriter(message: GetActionRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GetActionRequest;
  static deserializeBinaryFromReader(message: GetActionRequest, reader: jspb.BinaryReader): GetActionRequest;
}

export namespace GetActionRequest {
  export type AsObject = {
    id: number,
  }
}

export class UpdateActionRequest extends jspb.Message {
  getId(): number;
  setId(value: number): UpdateActionRequest;

  getName(): string;
  setName(value: string): UpdateActionRequest;

  getDescription(): string;
  setDescription(value: string): UpdateActionRequest;

  getResourceId(): number;
  setResourceId(value: number): UpdateActionRequest;

  getPath(): string;
  setPath(value: string): UpdateActionRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): UpdateActionRequest.AsObject;
  static toObject(includeInstance: boolean, msg: UpdateActionRequest): UpdateActionRequest.AsObject;
  static serializeBinaryToWriter(message: UpdateActionRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): UpdateActionRequest;
  static deserializeBinaryFromReader(message: UpdateActionRequest, reader: jspb.BinaryReader): UpdateActionRequest;
}

export namespace UpdateActionRequest {
  export type AsObject = {
    id: number,
    name: string,
    description: string,
    resourceId: number,
    path: string,
  }
}

export class CreateRoleRequest extends jspb.Message {
  getGroupId(): number;
  setGroupId(value: number): CreateRoleRequest;

  getName(): string;
  setName(value: string): CreateRoleRequest;

  getDescription(): string;
  setDescription(value: string): CreateRoleRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CreateRoleRequest.AsObject;
  static toObject(includeInstance: boolean, msg: CreateRoleRequest): CreateRoleRequest.AsObject;
  static serializeBinaryToWriter(message: CreateRoleRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CreateRoleRequest;
  static deserializeBinaryFromReader(message: CreateRoleRequest, reader: jspb.BinaryReader): CreateRoleRequest;
}

export namespace CreateRoleRequest {
  export type AsObject = {
    groupId: number,
    name: string,
    description: string,
  }
}

export class UpdateRoleRequest extends jspb.Message {
  getId(): number;
  setId(value: number): UpdateRoleRequest;

  getGroupId(): number;
  setGroupId(value: number): UpdateRoleRequest;

  getName(): string;
  setName(value: string): UpdateRoleRequest;

  getDescription(): string;
  setDescription(value: string): UpdateRoleRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): UpdateRoleRequest.AsObject;
  static toObject(includeInstance: boolean, msg: UpdateRoleRequest): UpdateRoleRequest.AsObject;
  static serializeBinaryToWriter(message: UpdateRoleRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): UpdateRoleRequest;
  static deserializeBinaryFromReader(message: UpdateRoleRequest, reader: jspb.BinaryReader): UpdateRoleRequest;
}

export namespace UpdateRoleRequest {
  export type AsObject = {
    id: number,
    groupId: number,
    name: string,
    description: string,
  }
}

export class ListRolesRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListRolesRequest.AsObject;
  static toObject(includeInstance: boolean, msg: ListRolesRequest): ListRolesRequest.AsObject;
  static serializeBinaryToWriter(message: ListRolesRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListRolesRequest;
  static deserializeBinaryFromReader(message: ListRolesRequest, reader: jspb.BinaryReader): ListRolesRequest;
}

export namespace ListRolesRequest {
  export type AsObject = {
  }
}

export class ListRolesReply extends jspb.Message {
  getRecordsList(): Array<Role>;
  setRecordsList(value: Array<Role>): ListRolesReply;
  clearRecordsList(): ListRolesReply;
  addRecords(value?: Role, index?: number): Role;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListRolesReply.AsObject;
  static toObject(includeInstance: boolean, msg: ListRolesReply): ListRolesReply.AsObject;
  static serializeBinaryToWriter(message: ListRolesReply, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListRolesReply;
  static deserializeBinaryFromReader(message: ListRolesReply, reader: jspb.BinaryReader): ListRolesReply;
}

export namespace ListRolesReply {
  export type AsObject = {
    recordsList: Array<Role.AsObject>,
  }
}

export class GetRoleRequest extends jspb.Message {
  getId(): number;
  setId(value: number): GetRoleRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GetRoleRequest.AsObject;
  static toObject(includeInstance: boolean, msg: GetRoleRequest): GetRoleRequest.AsObject;
  static serializeBinaryToWriter(message: GetRoleRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GetRoleRequest;
  static deserializeBinaryFromReader(message: GetRoleRequest, reader: jspb.BinaryReader): GetRoleRequest;
}

export namespace GetRoleRequest {
  export type AsObject = {
    id: number,
  }
}

export class CreateGroupRequest extends jspb.Message {
  getModuleIdsList(): Array<number>;
  setModuleIdsList(value: Array<number>): CreateGroupRequest;
  clearModuleIdsList(): CreateGroupRequest;
  addModuleIds(value: number, index?: number): CreateGroupRequest;

  getName(): string;
  setName(value: string): CreateGroupRequest;

  getDescription(): string;
  setDescription(value: string): CreateGroupRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CreateGroupRequest.AsObject;
  static toObject(includeInstance: boolean, msg: CreateGroupRequest): CreateGroupRequest.AsObject;
  static serializeBinaryToWriter(message: CreateGroupRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CreateGroupRequest;
  static deserializeBinaryFromReader(message: CreateGroupRequest, reader: jspb.BinaryReader): CreateGroupRequest;
}

export namespace CreateGroupRequest {
  export type AsObject = {
    moduleIdsList: Array<number>,
    name: string,
    description: string,
  }
}

export class ListGroupsRequest extends jspb.Message {
  getModuleIdsList(): Array<number>;
  setModuleIdsList(value: Array<number>): ListGroupsRequest;
  clearModuleIdsList(): ListGroupsRequest;
  addModuleIds(value: number, index?: number): ListGroupsRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListGroupsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: ListGroupsRequest): ListGroupsRequest.AsObject;
  static serializeBinaryToWriter(message: ListGroupsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListGroupsRequest;
  static deserializeBinaryFromReader(message: ListGroupsRequest, reader: jspb.BinaryReader): ListGroupsRequest;
}

export namespace ListGroupsRequest {
  export type AsObject = {
    moduleIdsList: Array<number>,
  }
}

export class ListGroupsReply extends jspb.Message {
  getGroupsList(): Array<Group>;
  setGroupsList(value: Array<Group>): ListGroupsReply;
  clearGroupsList(): ListGroupsReply;
  addGroups(value?: Group, index?: number): Group;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListGroupsReply.AsObject;
  static toObject(includeInstance: boolean, msg: ListGroupsReply): ListGroupsReply.AsObject;
  static serializeBinaryToWriter(message: ListGroupsReply, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListGroupsReply;
  static deserializeBinaryFromReader(message: ListGroupsReply, reader: jspb.BinaryReader): ListGroupsReply;
}

export namespace ListGroupsReply {
  export type AsObject = {
    groupsList: Array<Group.AsObject>,
  }
}

export class GetGroupRequest extends jspb.Message {
  getId(): number;
  setId(value: number): GetGroupRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GetGroupRequest.AsObject;
  static toObject(includeInstance: boolean, msg: GetGroupRequest): GetGroupRequest.AsObject;
  static serializeBinaryToWriter(message: GetGroupRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GetGroupRequest;
  static deserializeBinaryFromReader(message: GetGroupRequest, reader: jspb.BinaryReader): GetGroupRequest;
}

export namespace GetGroupRequest {
  export type AsObject = {
    id: number,
  }
}

export class UpdateGroupRequest extends jspb.Message {
  getId(): number;
  setId(value: number): UpdateGroupRequest;

  getName(): string;
  setName(value: string): UpdateGroupRequest;

  getDescription(): string;
  setDescription(value: string): UpdateGroupRequest;

  getModuleIdsList(): Array<number>;
  setModuleIdsList(value: Array<number>): UpdateGroupRequest;
  clearModuleIdsList(): UpdateGroupRequest;
  addModuleIds(value: number, index?: number): UpdateGroupRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): UpdateGroupRequest.AsObject;
  static toObject(includeInstance: boolean, msg: UpdateGroupRequest): UpdateGroupRequest.AsObject;
  static serializeBinaryToWriter(message: UpdateGroupRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): UpdateGroupRequest;
  static deserializeBinaryFromReader(message: UpdateGroupRequest, reader: jspb.BinaryReader): UpdateGroupRequest;
}

export namespace UpdateGroupRequest {
  export type AsObject = {
    id: number,
    name: string,
    description: string,
    moduleIdsList: Array<number>,
  }
}

export class UpdateRolePermissionRequest extends jspb.Message {
  getGroupId(): number;
  setGroupId(value: number): UpdateRolePermissionRequest;

  getRoleId(): number;
  setRoleId(value: number): UpdateRolePermissionRequest;

  getPermissionsList(): Array<UpdateRolePermissionRequest.Permission>;
  setPermissionsList(value: Array<UpdateRolePermissionRequest.Permission>): UpdateRolePermissionRequest;
  clearPermissionsList(): UpdateRolePermissionRequest;
  addPermissions(value?: UpdateRolePermissionRequest.Permission, index?: number): UpdateRolePermissionRequest.Permission;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): UpdateRolePermissionRequest.AsObject;
  static toObject(includeInstance: boolean, msg: UpdateRolePermissionRequest): UpdateRolePermissionRequest.AsObject;
  static serializeBinaryToWriter(message: UpdateRolePermissionRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): UpdateRolePermissionRequest;
  static deserializeBinaryFromReader(message: UpdateRolePermissionRequest, reader: jspb.BinaryReader): UpdateRolePermissionRequest;
}

export namespace UpdateRolePermissionRequest {
  export type AsObject = {
    groupId: number,
    roleId: number,
    permissionsList: Array<UpdateRolePermissionRequest.Permission.AsObject>,
  }

  export class Permission extends jspb.Message {
    getResourceId(): number;
    setResourceId(value: number): Permission;

    getActionIdsList(): Array<number>;
    setActionIdsList(value: Array<number>): Permission;
    clearActionIdsList(): Permission;
    addActionIds(value: number, index?: number): Permission;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): Permission.AsObject;
    static toObject(includeInstance: boolean, msg: Permission): Permission.AsObject;
    static serializeBinaryToWriter(message: Permission, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): Permission;
    static deserializeBinaryFromReader(message: Permission, reader: jspb.BinaryReader): Permission;
  }

  export namespace Permission {
    export type AsObject = {
      resourceId: number,
      actionIdsList: Array<number>,
    }
  }

}

export class CreateModuleRequest extends jspb.Message {
  getName(): string;
  setName(value: string): CreateModuleRequest;

  getDescription(): string;
  setDescription(value: string): CreateModuleRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CreateModuleRequest.AsObject;
  static toObject(includeInstance: boolean, msg: CreateModuleRequest): CreateModuleRequest.AsObject;
  static serializeBinaryToWriter(message: CreateModuleRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CreateModuleRequest;
  static deserializeBinaryFromReader(message: CreateModuleRequest, reader: jspb.BinaryReader): CreateModuleRequest;
}

export namespace CreateModuleRequest {
  export type AsObject = {
    name: string,
    description: string,
  }
}

export class ListModulesRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListModulesRequest.AsObject;
  static toObject(includeInstance: boolean, msg: ListModulesRequest): ListModulesRequest.AsObject;
  static serializeBinaryToWriter(message: ListModulesRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListModulesRequest;
  static deserializeBinaryFromReader(message: ListModulesRequest, reader: jspb.BinaryReader): ListModulesRequest;
}

export namespace ListModulesRequest {
  export type AsObject = {
  }
}

export class ListModulesReply extends jspb.Message {
  getModulesList(): Array<Module>;
  setModulesList(value: Array<Module>): ListModulesReply;
  clearModulesList(): ListModulesReply;
  addModules(value?: Module, index?: number): Module;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ListModulesReply.AsObject;
  static toObject(includeInstance: boolean, msg: ListModulesReply): ListModulesReply.AsObject;
  static serializeBinaryToWriter(message: ListModulesReply, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ListModulesReply;
  static deserializeBinaryFromReader(message: ListModulesReply, reader: jspb.BinaryReader): ListModulesReply;
}

export namespace ListModulesReply {
  export type AsObject = {
    modulesList: Array<Module.AsObject>,
  }
}

export class GetModuleRequest extends jspb.Message {
  getId(): number;
  setId(value: number): GetModuleRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GetModuleRequest.AsObject;
  static toObject(includeInstance: boolean, msg: GetModuleRequest): GetModuleRequest.AsObject;
  static serializeBinaryToWriter(message: GetModuleRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GetModuleRequest;
  static deserializeBinaryFromReader(message: GetModuleRequest, reader: jspb.BinaryReader): GetModuleRequest;
}

export namespace GetModuleRequest {
  export type AsObject = {
    id: number,
  }
}

export class UpdateModuleRequest extends jspb.Message {
  getId(): number;
  setId(value: number): UpdateModuleRequest;

  getName(): string;
  setName(value: string): UpdateModuleRequest;

  getDescription(): string;
  setDescription(value: string): UpdateModuleRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): UpdateModuleRequest.AsObject;
  static toObject(includeInstance: boolean, msg: UpdateModuleRequest): UpdateModuleRequest.AsObject;
  static serializeBinaryToWriter(message: UpdateModuleRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): UpdateModuleRequest;
  static deserializeBinaryFromReader(message: UpdateModuleRequest, reader: jspb.BinaryReader): UpdateModuleRequest;
}

export namespace UpdateModuleRequest {
  export type AsObject = {
    id: number,
    name: string,
    description: string,
  }
}

export class Resource extends jspb.Message {
  getId(): number;
  setId(value: number): Resource;

  getName(): string;
  setName(value: string): Resource;

  getDescription(): string;
  setDescription(value: string): Resource;

  getActionsList(): Array<Action>;
  setActionsList(value: Array<Action>): Resource;
  clearActionsList(): Resource;
  addActions(value?: Action, index?: number): Action;

  getCreatedAt(): google_protobuf_timestamp_pb.Timestamp | undefined;
  setCreatedAt(value?: google_protobuf_timestamp_pb.Timestamp): Resource;
  hasCreatedAt(): boolean;
  clearCreatedAt(): Resource;

  getUpdatedAt(): google_protobuf_timestamp_pb.Timestamp | undefined;
  setUpdatedAt(value?: google_protobuf_timestamp_pb.Timestamp): Resource;
  hasUpdatedAt(): boolean;
  clearUpdatedAt(): Resource;

  getCreatedBy(): string;
  setCreatedBy(value: string): Resource;

  getUpdatedBy(): string;
  setUpdatedBy(value: string): Resource;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): Resource.AsObject;
  static toObject(includeInstance: boolean, msg: Resource): Resource.AsObject;
  static serializeBinaryToWriter(message: Resource, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): Resource;
  static deserializeBinaryFromReader(message: Resource, reader: jspb.BinaryReader): Resource;
}

export namespace Resource {
  export type AsObject = {
    id: number,
    name: string,
    description: string,
    actionsList: Array<Action.AsObject>,
    createdAt?: google_protobuf_timestamp_pb.Timestamp.AsObject,
    updatedAt?: google_protobuf_timestamp_pb.Timestamp.AsObject,
    createdBy: string,
    updatedBy: string,
  }
}

export class Action extends jspb.Message {
  getId(): number;
  setId(value: number): Action;

  getName(): string;
  setName(value: string): Action;

  getDescription(): string;
  setDescription(value: string): Action;

  getResource(): Resource | undefined;
  setResource(value?: Resource): Action;
  hasResource(): boolean;
  clearResource(): Action;

  getPath(): string;
  setPath(value: string): Action;

  getCreatedAt(): google_protobuf_timestamp_pb.Timestamp | undefined;
  setCreatedAt(value?: google_protobuf_timestamp_pb.Timestamp): Action;
  hasCreatedAt(): boolean;
  clearCreatedAt(): Action;

  getUpdatedAt(): google_protobuf_timestamp_pb.Timestamp | undefined;
  setUpdatedAt(value?: google_protobuf_timestamp_pb.Timestamp): Action;
  hasUpdatedAt(): boolean;
  clearUpdatedAt(): Action;

  getCreatedBy(): string;
  setCreatedBy(value: string): Action;

  getUpdatedBy(): string;
  setUpdatedBy(value: string): Action;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): Action.AsObject;
  static toObject(includeInstance: boolean, msg: Action): Action.AsObject;
  static serializeBinaryToWriter(message: Action, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): Action;
  static deserializeBinaryFromReader(message: Action, reader: jspb.BinaryReader): Action;
}

export namespace Action {
  export type AsObject = {
    id: number,
    name: string,
    description: string,
    resource?: Resource.AsObject,
    path: string,
    createdAt?: google_protobuf_timestamp_pb.Timestamp.AsObject,
    updatedAt?: google_protobuf_timestamp_pb.Timestamp.AsObject,
    createdBy: string,
    updatedBy: string,
  }
}

export class Role extends jspb.Message {
  getId(): number;
  setId(value: number): Role;

  getGroup(): Group | undefined;
  setGroup(value?: Group): Role;
  hasGroup(): boolean;
  clearGroup(): Role;

  getName(): string;
  setName(value: string): Role;

  getDescription(): string;
  setDescription(value: string): Role;

  getPermissionsList(): Array<Permission>;
  setPermissionsList(value: Array<Permission>): Role;
  clearPermissionsList(): Role;
  addPermissions(value?: Permission, index?: number): Permission;

  getCreatedAt(): google_protobuf_timestamp_pb.Timestamp | undefined;
  setCreatedAt(value?: google_protobuf_timestamp_pb.Timestamp): Role;
  hasCreatedAt(): boolean;
  clearCreatedAt(): Role;

  getUpdatedAt(): google_protobuf_timestamp_pb.Timestamp | undefined;
  setUpdatedAt(value?: google_protobuf_timestamp_pb.Timestamp): Role;
  hasUpdatedAt(): boolean;
  clearUpdatedAt(): Role;

  getCreatedBy(): string;
  setCreatedBy(value: string): Role;

  getUpdatedBy(): string;
  setUpdatedBy(value: string): Role;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): Role.AsObject;
  static toObject(includeInstance: boolean, msg: Role): Role.AsObject;
  static serializeBinaryToWriter(message: Role, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): Role;
  static deserializeBinaryFromReader(message: Role, reader: jspb.BinaryReader): Role;
}

export namespace Role {
  export type AsObject = {
    id: number,
    group?: Group.AsObject,
    name: string,
    description: string,
    permissionsList: Array<Permission.AsObject>,
    createdAt?: google_protobuf_timestamp_pb.Timestamp.AsObject,
    updatedAt?: google_protobuf_timestamp_pb.Timestamp.AsObject,
    createdBy: string,
    updatedBy: string,
  }
}

export class Permission extends jspb.Message {
  getResource(): Resource | undefined;
  setResource(value?: Resource): Permission;
  hasResource(): boolean;
  clearResource(): Permission;

  getActionsList(): Array<Action>;
  setActionsList(value: Array<Action>): Permission;
  clearActionsList(): Permission;
  addActions(value?: Action, index?: number): Action;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): Permission.AsObject;
  static toObject(includeInstance: boolean, msg: Permission): Permission.AsObject;
  static serializeBinaryToWriter(message: Permission, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): Permission;
  static deserializeBinaryFromReader(message: Permission, reader: jspb.BinaryReader): Permission;
}

export namespace Permission {
  export type AsObject = {
    resource?: Resource.AsObject,
    actionsList: Array<Action.AsObject>,
  }
}

export class Group extends jspb.Message {
  getId(): number;
  setId(value: number): Group;

  getName(): string;
  setName(value: string): Group;

  getDescription(): string;
  setDescription(value: string): Group;

  getModulesList(): Array<Module>;
  setModulesList(value: Array<Module>): Group;
  clearModulesList(): Group;
  addModules(value?: Module, index?: number): Module;

  getCreatedAt(): google_protobuf_timestamp_pb.Timestamp | undefined;
  setCreatedAt(value?: google_protobuf_timestamp_pb.Timestamp): Group;
  hasCreatedAt(): boolean;
  clearCreatedAt(): Group;

  getUpdatedAt(): google_protobuf_timestamp_pb.Timestamp | undefined;
  setUpdatedAt(value?: google_protobuf_timestamp_pb.Timestamp): Group;
  hasUpdatedAt(): boolean;
  clearUpdatedAt(): Group;

  getCreatedBy(): string;
  setCreatedBy(value: string): Group;

  getUpdatedBy(): string;
  setUpdatedBy(value: string): Group;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): Group.AsObject;
  static toObject(includeInstance: boolean, msg: Group): Group.AsObject;
  static serializeBinaryToWriter(message: Group, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): Group;
  static deserializeBinaryFromReader(message: Group, reader: jspb.BinaryReader): Group;
}

export namespace Group {
  export type AsObject = {
    id: number,
    name: string,
    description: string,
    modulesList: Array<Module.AsObject>,
    createdAt?: google_protobuf_timestamp_pb.Timestamp.AsObject,
    updatedAt?: google_protobuf_timestamp_pb.Timestamp.AsObject,
    createdBy: string,
    updatedBy: string,
  }
}

export class Module extends jspb.Message {
  getId(): number;
  setId(value: number): Module;

  getName(): string;
  setName(value: string): Module;

  getDescription(): string;
  setDescription(value: string): Module;

  getCreatedAt(): google_protobuf_timestamp_pb.Timestamp | undefined;
  setCreatedAt(value?: google_protobuf_timestamp_pb.Timestamp): Module;
  hasCreatedAt(): boolean;
  clearCreatedAt(): Module;

  getUpdatedAt(): google_protobuf_timestamp_pb.Timestamp | undefined;
  setUpdatedAt(value?: google_protobuf_timestamp_pb.Timestamp): Module;
  hasUpdatedAt(): boolean;
  clearUpdatedAt(): Module;

  getCreatedBy(): string;
  setCreatedBy(value: string): Module;

  getUpdatedBy(): string;
  setUpdatedBy(value: string): Module;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): Module.AsObject;
  static toObject(includeInstance: boolean, msg: Module): Module.AsObject;
  static serializeBinaryToWriter(message: Module, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): Module;
  static deserializeBinaryFromReader(message: Module, reader: jspb.BinaryReader): Module;
}

export namespace Module {
  export type AsObject = {
    id: number,
    name: string,
    description: string,
    createdAt?: google_protobuf_timestamp_pb.Timestamp.AsObject,
    updatedAt?: google_protobuf_timestamp_pb.Timestamp.AsObject,
    createdBy: string,
    updatedBy: string,
  }
}

export class UpdateRolesRequest extends jspb.Message {
  getUserId(): number;
  setUserId(value: number): UpdateRolesRequest;

  getGroupRolesList(): Array<UpdateRolesRequest.GroupRole>;
  setGroupRolesList(value: Array<UpdateRolesRequest.GroupRole>): UpdateRolesRequest;
  clearGroupRolesList(): UpdateRolesRequest;
  addGroupRoles(value?: UpdateRolesRequest.GroupRole, index?: number): UpdateRolesRequest.GroupRole;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): UpdateRolesRequest.AsObject;
  static toObject(includeInstance: boolean, msg: UpdateRolesRequest): UpdateRolesRequest.AsObject;
  static serializeBinaryToWriter(message: UpdateRolesRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): UpdateRolesRequest;
  static deserializeBinaryFromReader(message: UpdateRolesRequest, reader: jspb.BinaryReader): UpdateRolesRequest;
}

export namespace UpdateRolesRequest {
  export type AsObject = {
    userId: number,
    groupRolesList: Array<UpdateRolesRequest.GroupRole.AsObject>,
  }

  export class GroupRole extends jspb.Message {
    getGroupId(): number;
    setGroupId(value: number): GroupRole;

    getRoleIdsList(): Array<number>;
    setRoleIdsList(value: Array<number>): GroupRole;
    clearRoleIdsList(): GroupRole;
    addRoleIds(value: number, index?: number): GroupRole;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): GroupRole.AsObject;
    static toObject(includeInstance: boolean, msg: GroupRole): GroupRole.AsObject;
    static serializeBinaryToWriter(message: GroupRole, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): GroupRole;
    static deserializeBinaryFromReader(message: GroupRole, reader: jspb.BinaryReader): GroupRole;
  }

  export namespace GroupRole {
    export type AsObject = {
      groupId: number,
      roleIdsList: Array<number>,
    }
  }

}

export class UpdateRolesReply extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): UpdateRolesReply.AsObject;
  static toObject(includeInstance: boolean, msg: UpdateRolesReply): UpdateRolesReply.AsObject;
  static serializeBinaryToWriter(message: UpdateRolesReply, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): UpdateRolesReply;
  static deserializeBinaryFromReader(message: UpdateRolesReply, reader: jspb.BinaryReader): UpdateRolesReply;
}

export namespace UpdateRolesReply {
  export type AsObject = {
  }
}

export class GetPermissionsRequest extends jspb.Message {
  getUserId(): number;
  setUserId(value: number): GetPermissionsRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GetPermissionsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: GetPermissionsRequest): GetPermissionsRequest.AsObject;
  static serializeBinaryToWriter(message: GetPermissionsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GetPermissionsRequest;
  static deserializeBinaryFromReader(message: GetPermissionsRequest, reader: jspb.BinaryReader): GetPermissionsRequest;
}

export namespace GetPermissionsRequest {
  export type AsObject = {
    userId: number,
  }
}

export class GetPermissionsReply extends jspb.Message {
  getRecordsList(): Array<Permission>;
  setRecordsList(value: Array<Permission>): GetPermissionsReply;
  clearRecordsList(): GetPermissionsReply;
  addRecords(value?: Permission, index?: number): Permission;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GetPermissionsReply.AsObject;
  static toObject(includeInstance: boolean, msg: GetPermissionsReply): GetPermissionsReply.AsObject;
  static serializeBinaryToWriter(message: GetPermissionsReply, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GetPermissionsReply;
  static deserializeBinaryFromReader(message: GetPermissionsReply, reader: jspb.BinaryReader): GetPermissionsReply;
}

export namespace GetPermissionsReply {
  export type AsObject = {
    recordsList: Array<Permission.AsObject>,
  }
}

export class GetModulesRequest extends jspb.Message {
  getUserId(): number;
  setUserId(value: number): GetModulesRequest;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GetModulesRequest.AsObject;
  static toObject(includeInstance: boolean, msg: GetModulesRequest): GetModulesRequest.AsObject;
  static serializeBinaryToWriter(message: GetModulesRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GetModulesRequest;
  static deserializeBinaryFromReader(message: GetModulesRequest, reader: jspb.BinaryReader): GetModulesRequest;
}

export namespace GetModulesRequest {
  export type AsObject = {
    userId: number,
  }
}

export class GetModulesReply extends jspb.Message {
  getRecordsList(): Array<Module>;
  setRecordsList(value: Array<Module>): GetModulesReply;
  clearRecordsList(): GetModulesReply;
  addRecords(value?: Module, index?: number): Module;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GetModulesReply.AsObject;
  static toObject(includeInstance: boolean, msg: GetModulesReply): GetModulesReply.AsObject;
  static serializeBinaryToWriter(message: GetModulesReply, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GetModulesReply;
  static deserializeBinaryFromReader(message: GetModulesReply, reader: jspb.BinaryReader): GetModulesReply;
}

export namespace GetModulesReply {
  export type AsObject = {
    recordsList: Array<Module.AsObject>,
  }
}

export enum ActionType { 
  ACTION_UNSPECIFIED = 0,
  ALLOW_ALL = 1,
}
