"use strict";
/**
 * @fileoverview gRPC-Web generated client stub for greyhole.myrole
 * @enhanceable
 * @public
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MyMemberClient = exports.MyRoleClient = void 0;
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
var grpcWeb = __importStar(require("grpc-web"));
var myrole_api_myrole_pb = __importStar(require("./myrole_pb"));
var MyRoleClient = /** @class */ (function () {
    function MyRoleClient(hostname, credentials, options) {
        this.methodInfoCreateResource = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.Resource, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.Resource.deserializeBinary);
        this.methodInfoListResources = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.ListResourcesReply, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.ListResourcesReply.deserializeBinary);
        this.methodInfoGetResource = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.Resource, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.Resource.deserializeBinary);
        this.methodInfoUpdateResource = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.Resource, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.Resource.deserializeBinary);
        this.methodInfoCreateAction = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.Action, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.Action.deserializeBinary);
        this.methodInfoListActions = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.ListActionsReply, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.ListActionsReply.deserializeBinary);
        this.methodInfoGetAction = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.Action, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.Action.deserializeBinary);
        this.methodInfoUpdateAction = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.Action, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.Action.deserializeBinary);
        this.methodInfoCreateGroup = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.Group, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.Group.deserializeBinary);
        this.methodInfoGetGroup = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.Group, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.Group.deserializeBinary);
        this.methodInfoUpdateGroup = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.Group, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.Group.deserializeBinary);
        this.methodInfoListGroups = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.ListGroupsReply, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.ListGroupsReply.deserializeBinary);
        this.methodInfoCreateRole = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.Role, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.Role.deserializeBinary);
        this.methodInfoUpdateRole = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.Role, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.Role.deserializeBinary);
        this.methodInfoGetRole = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.Role, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.Role.deserializeBinary);
        this.methodInfoListRoles = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.ListRolesReply, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.ListRolesReply.deserializeBinary);
        this.methodInfoUpdateRolePermission = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.Role, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.Role.deserializeBinary);
        this.methodInfoCreateModule = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.Module, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.Module.deserializeBinary);
        this.methodInfoListModules = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.ListModulesReply, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.ListModulesReply.deserializeBinary);
        this.methodInfoGetModule = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.Module, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.Module.deserializeBinary);
        this.methodInfoUpdateModule = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.Module, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.Module.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'text';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname;
        this.credentials_ = credentials;
        this.options_ = options;
    }
    MyRoleClient.prototype.createResource = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/CreateResource', request, metadata || {}, this.methodInfoCreateResource, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/CreateResource', request, metadata || {}, this.methodInfoCreateResource);
    };
    MyRoleClient.prototype.listResources = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/ListResources', request, metadata || {}, this.methodInfoListResources, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/ListResources', request, metadata || {}, this.methodInfoListResources);
    };
    MyRoleClient.prototype.getResource = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/GetResource', request, metadata || {}, this.methodInfoGetResource, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/GetResource', request, metadata || {}, this.methodInfoGetResource);
    };
    MyRoleClient.prototype.updateResource = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/UpdateResource', request, metadata || {}, this.methodInfoUpdateResource, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/UpdateResource', request, metadata || {}, this.methodInfoUpdateResource);
    };
    MyRoleClient.prototype.createAction = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/CreateAction', request, metadata || {}, this.methodInfoCreateAction, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/CreateAction', request, metadata || {}, this.methodInfoCreateAction);
    };
    MyRoleClient.prototype.listActions = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/ListActions', request, metadata || {}, this.methodInfoListActions, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/ListActions', request, metadata || {}, this.methodInfoListActions);
    };
    MyRoleClient.prototype.getAction = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/GetAction', request, metadata || {}, this.methodInfoGetAction, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/GetAction', request, metadata || {}, this.methodInfoGetAction);
    };
    MyRoleClient.prototype.updateAction = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/UpdateAction', request, metadata || {}, this.methodInfoUpdateAction, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/UpdateAction', request, metadata || {}, this.methodInfoUpdateAction);
    };
    MyRoleClient.prototype.createGroup = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/CreateGroup', request, metadata || {}, this.methodInfoCreateGroup, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/CreateGroup', request, metadata || {}, this.methodInfoCreateGroup);
    };
    MyRoleClient.prototype.getGroup = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/GetGroup', request, metadata || {}, this.methodInfoGetGroup, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/GetGroup', request, metadata || {}, this.methodInfoGetGroup);
    };
    MyRoleClient.prototype.updateGroup = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/UpdateGroup', request, metadata || {}, this.methodInfoUpdateGroup, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/UpdateGroup', request, metadata || {}, this.methodInfoUpdateGroup);
    };
    MyRoleClient.prototype.listGroups = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/ListGroups', request, metadata || {}, this.methodInfoListGroups, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/ListGroups', request, metadata || {}, this.methodInfoListGroups);
    };
    MyRoleClient.prototype.createRole = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/CreateRole', request, metadata || {}, this.methodInfoCreateRole, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/CreateRole', request, metadata || {}, this.methodInfoCreateRole);
    };
    MyRoleClient.prototype.updateRole = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/UpdateRole', request, metadata || {}, this.methodInfoUpdateRole, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/UpdateRole', request, metadata || {}, this.methodInfoUpdateRole);
    };
    MyRoleClient.prototype.getRole = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/GetRole', request, metadata || {}, this.methodInfoGetRole, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/GetRole', request, metadata || {}, this.methodInfoGetRole);
    };
    MyRoleClient.prototype.listRoles = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/ListRoles', request, metadata || {}, this.methodInfoListRoles, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/ListRoles', request, metadata || {}, this.methodInfoListRoles);
    };
    MyRoleClient.prototype.updateRolePermission = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/UpdateRolePermission', request, metadata || {}, this.methodInfoUpdateRolePermission, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/UpdateRolePermission', request, metadata || {}, this.methodInfoUpdateRolePermission);
    };
    MyRoleClient.prototype.createModule = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/CreateModule', request, metadata || {}, this.methodInfoCreateModule, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/CreateModule', request, metadata || {}, this.methodInfoCreateModule);
    };
    MyRoleClient.prototype.listModules = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/ListModules', request, metadata || {}, this.methodInfoListModules, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/ListModules', request, metadata || {}, this.methodInfoListModules);
    };
    MyRoleClient.prototype.getModule = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/GetModule', request, metadata || {}, this.methodInfoGetModule, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/GetModule', request, metadata || {}, this.methodInfoGetModule);
    };
    MyRoleClient.prototype.updateModule = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyRole/UpdateModule', request, metadata || {}, this.methodInfoUpdateModule, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyRole/UpdateModule', request, metadata || {}, this.methodInfoUpdateModule);
    };
    return MyRoleClient;
}());
exports.MyRoleClient = MyRoleClient;
var MyMemberClient = /** @class */ (function () {
    function MyMemberClient(hostname, credentials, options) {
        this.methodInfoUpdateRoles = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.UpdateRolesReply, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.UpdateRolesReply.deserializeBinary);
        this.methodInfoGetPermissions = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.GetPermissionsReply, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.GetPermissionsReply.deserializeBinary);
        this.methodInfoGetModules = new grpcWeb.AbstractClientBase.MethodInfo(myrole_api_myrole_pb.GetModulesReply, function (request) {
            return request.serializeBinary();
        }, myrole_api_myrole_pb.GetModulesReply.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'text';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname;
        this.credentials_ = credentials;
        this.options_ = options;
    }
    MyMemberClient.prototype.updateRoles = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyMember/UpdateRoles', request, metadata || {}, this.methodInfoUpdateRoles, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyMember/UpdateRoles', request, metadata || {}, this.methodInfoUpdateRoles);
    };
    MyMemberClient.prototype.getPermissions = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyMember/GetPermissions', request, metadata || {}, this.methodInfoGetPermissions, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyMember/GetPermissions', request, metadata || {}, this.methodInfoGetPermissions);
    };
    MyMemberClient.prototype.getModules = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/greyhole.myrole.MyMember/GetModules', request, metadata || {}, this.methodInfoGetModules, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/greyhole.myrole.MyMember/GetModules', request, metadata || {}, this.methodInfoGetModules);
    };
    return MyMemberClient;
}());
exports.MyMemberClient = MyMemberClient;
