/**
 * @fileoverview gRPC-Web generated client stub for greyhole.myrole
 * @enhanceable
 * @public
 */
import * as grpcWeb from 'grpc-web';
import * as myrole_api_myrole_pb from './myrole_pb';
export declare class MyRoleClient {
    client_: grpcWeb.AbstractClientBase;
    hostname_: string;
    credentials_: null | {
        [index: string]: string;
    };
    options_: null | {
        [index: string]: any;
    };
    constructor(hostname: string, credentials?: null | {
        [index: string]: string;
    }, options?: null | {
        [index: string]: any;
    });
    methodInfoCreateResource: any;
    createResource(request: myrole_api_myrole_pb.CreateResourceRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.Resource>;
    createResource(request: myrole_api_myrole_pb.CreateResourceRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.Resource) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.Resource>;
    methodInfoListResources: any;
    listResources(request: myrole_api_myrole_pb.ListResourcesRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.ListResourcesReply>;
    listResources(request: myrole_api_myrole_pb.ListResourcesRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.ListResourcesReply) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.ListResourcesReply>;
    methodInfoGetResource: any;
    getResource(request: myrole_api_myrole_pb.GetResourceRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.Resource>;
    getResource(request: myrole_api_myrole_pb.GetResourceRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.Resource) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.Resource>;
    methodInfoUpdateResource: any;
    updateResource(request: myrole_api_myrole_pb.UpdateResourceRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.Resource>;
    updateResource(request: myrole_api_myrole_pb.UpdateResourceRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.Resource) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.Resource>;
    methodInfoCreateAction: any;
    createAction(request: myrole_api_myrole_pb.CreateActionRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.Action>;
    createAction(request: myrole_api_myrole_pb.CreateActionRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.Action) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.Action>;
    methodInfoListActions: any;
    listActions(request: myrole_api_myrole_pb.ListActionsRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.ListActionsReply>;
    listActions(request: myrole_api_myrole_pb.ListActionsRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.ListActionsReply) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.ListActionsReply>;
    methodInfoGetAction: any;
    getAction(request: myrole_api_myrole_pb.GetActionRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.Action>;
    getAction(request: myrole_api_myrole_pb.GetActionRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.Action) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.Action>;
    methodInfoUpdateAction: any;
    updateAction(request: myrole_api_myrole_pb.UpdateActionRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.Action>;
    updateAction(request: myrole_api_myrole_pb.UpdateActionRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.Action) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.Action>;
    methodInfoCreateGroup: any;
    createGroup(request: myrole_api_myrole_pb.CreateGroupRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.Group>;
    createGroup(request: myrole_api_myrole_pb.CreateGroupRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.Group) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.Group>;
    methodInfoGetGroup: any;
    getGroup(request: myrole_api_myrole_pb.GetGroupRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.Group>;
    getGroup(request: myrole_api_myrole_pb.GetGroupRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.Group) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.Group>;
    methodInfoUpdateGroup: any;
    updateGroup(request: myrole_api_myrole_pb.UpdateGroupRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.Group>;
    updateGroup(request: myrole_api_myrole_pb.UpdateGroupRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.Group) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.Group>;
    methodInfoListGroups: any;
    listGroups(request: myrole_api_myrole_pb.ListGroupsRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.ListGroupsReply>;
    listGroups(request: myrole_api_myrole_pb.ListGroupsRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.ListGroupsReply) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.ListGroupsReply>;
    methodInfoCreateRole: any;
    createRole(request: myrole_api_myrole_pb.CreateRoleRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.Role>;
    createRole(request: myrole_api_myrole_pb.CreateRoleRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.Role) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.Role>;
    methodInfoUpdateRole: any;
    updateRole(request: myrole_api_myrole_pb.UpdateRoleRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.Role>;
    updateRole(request: myrole_api_myrole_pb.UpdateRoleRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.Role) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.Role>;
    methodInfoGetRole: any;
    getRole(request: myrole_api_myrole_pb.GetRoleRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.Role>;
    getRole(request: myrole_api_myrole_pb.GetRoleRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.Role) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.Role>;
    methodInfoListRoles: any;
    listRoles(request: myrole_api_myrole_pb.ListRolesRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.ListRolesReply>;
    listRoles(request: myrole_api_myrole_pb.ListRolesRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.ListRolesReply) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.ListRolesReply>;
    methodInfoUpdateRolePermission: any;
    updateRolePermission(request: myrole_api_myrole_pb.UpdateRolePermissionRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.Role>;
    updateRolePermission(request: myrole_api_myrole_pb.UpdateRolePermissionRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.Role) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.Role>;
    methodInfoCreateModule: any;
    createModule(request: myrole_api_myrole_pb.CreateModuleRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.Module>;
    createModule(request: myrole_api_myrole_pb.CreateModuleRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.Module) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.Module>;
    methodInfoListModules: any;
    listModules(request: myrole_api_myrole_pb.ListModulesRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.ListModulesReply>;
    listModules(request: myrole_api_myrole_pb.ListModulesRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.ListModulesReply) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.ListModulesReply>;
    methodInfoGetModule: any;
    getModule(request: myrole_api_myrole_pb.GetModuleRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.Module>;
    getModule(request: myrole_api_myrole_pb.GetModuleRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.Module) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.Module>;
    methodInfoUpdateModule: any;
    updateModule(request: myrole_api_myrole_pb.UpdateModuleRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.Module>;
    updateModule(request: myrole_api_myrole_pb.UpdateModuleRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.Module) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.Module>;
}
export declare class MyMemberClient {
    client_: grpcWeb.AbstractClientBase;
    hostname_: string;
    credentials_: null | {
        [index: string]: string;
    };
    options_: null | {
        [index: string]: any;
    };
    constructor(hostname: string, credentials?: null | {
        [index: string]: string;
    }, options?: null | {
        [index: string]: any;
    });
    methodInfoUpdateRoles: any;
    updateRoles(request: myrole_api_myrole_pb.UpdateRolesRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.UpdateRolesReply>;
    updateRoles(request: myrole_api_myrole_pb.UpdateRolesRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.UpdateRolesReply) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.UpdateRolesReply>;
    methodInfoGetPermissions: any;
    getPermissions(request: myrole_api_myrole_pb.GetPermissionsRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.GetPermissionsReply>;
    getPermissions(request: myrole_api_myrole_pb.GetPermissionsRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.GetPermissionsReply) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.GetPermissionsReply>;
    methodInfoGetModules: any;
    getModules(request: myrole_api_myrole_pb.GetModulesRequest, metadata: grpcWeb.Metadata | null): Promise<myrole_api_myrole_pb.GetModulesReply>;
    getModules(request: myrole_api_myrole_pb.GetModulesRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: myrole_api_myrole_pb.GetModulesReply) => void): grpcWeb.ClientReadableStream<myrole_api_myrole_pb.GetModulesReply>;
}
