"use strict";
/**
 * @fileoverview gRPC-Web generated client stub for mcuc.stark.morgan
 * @enhanceable
 * @public
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MorganClient = void 0;
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
var grpcWeb = __importStar(require("grpc-web"));
var stark_api_morgan_pb = __importStar(require("./morgan_pb"));
var MorganClient = /** @class */ (function () {
    function MorganClient(hostname, credentials, options) {
        this.methodInfoCreateTelcoWithdraw = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_morgan_pb.CreateTelcoWithdrawReply, function (request) {
            return request.serializeBinary();
        }, stark_api_morgan_pb.CreateTelcoWithdrawReply.deserializeBinary);
        this.methodInfoCreateTelcoTopUp = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_morgan_pb.CreateTelcoTopUpReply, function (request) {
            return request.serializeBinary();
        }, stark_api_morgan_pb.CreateTelcoTopUpReply.deserializeBinary);
        this.methodInfoCancelTelcoWithdraw = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_morgan_pb.CancelTelcoWithdrawReply, function (request) {
            return request.serializeBinary();
        }, stark_api_morgan_pb.CancelTelcoWithdrawReply.deserializeBinary);
        this.methodInfoCompleteTelcoTopUp = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_morgan_pb.CompleteTelcoTopUpReply, function (request) {
            return request.serializeBinary();
        }, stark_api_morgan_pb.CompleteTelcoTopUpReply.deserializeBinary);
        this.methodInfoApproveTelcoTopUp = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_morgan_pb.ApproveTelcoTopUpReply, function (request) {
            return request.serializeBinary();
        }, stark_api_morgan_pb.ApproveTelcoTopUpReply.deserializeBinary);
        this.methodInfoApproveTelcoWithdraw = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_morgan_pb.ApproveTelcoWithdrawReply, function (request) {
            return request.serializeBinary();
        }, stark_api_morgan_pb.ApproveTelcoWithdrawReply.deserializeBinary);
        this.methodInfoRejectTelcoTopUp = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_morgan_pb.RejectTelcoTopUpReply, function (request) {
            return request.serializeBinary();
        }, stark_api_morgan_pb.RejectTelcoTopUpReply.deserializeBinary);
        this.methodInfoRejectTelcoWithdraw = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_morgan_pb.RejectTelcoWithdrawReply, function (request) {
            return request.serializeBinary();
        }, stark_api_morgan_pb.RejectTelcoWithdrawReply.deserializeBinary);
        this.methodInfoGetSettings = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_morgan_pb.GetSettingsReply, function (request) {
            return request.serializeBinary();
        }, stark_api_morgan_pb.GetSettingsReply.deserializeBinary);
        this.methodInfoUpdateTopUpAutoApprovalSetting = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_morgan_pb.UpdateTopUpAutoApprovalSettingReply, function (request) {
            return request.serializeBinary();
        }, stark_api_morgan_pb.UpdateTopUpAutoApprovalSettingReply.deserializeBinary);
        this.methodInfoUpdateUsingThirdPartySetting = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_morgan_pb.UpdateUsingThirdPartySettingReply, function (request) {
            return request.serializeBinary();
        }, stark_api_morgan_pb.UpdateUsingThirdPartySettingReply.deserializeBinary);
        this.methodInfoUpdateChargeCardProvidersSetting = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_morgan_pb.UpdateChargeCardProvidersSettingReply, function (request) {
            return request.serializeBinary();
        }, stark_api_morgan_pb.UpdateChargeCardProvidersSettingReply.deserializeBinary);
        this.methodInfoUpdateGetCardProvidersSetting = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_morgan_pb.UpdateGetCardProvidersSettingReply, function (request) {
            return request.serializeBinary();
        }, stark_api_morgan_pb.UpdateGetCardProvidersSettingReply.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'text';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname;
        this.credentials_ = credentials;
        this.options_ = options;
    }
    MorganClient.prototype.createTelcoWithdraw = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.morgan.Morgan/CreateTelcoWithdraw', request, metadata || {}, this.methodInfoCreateTelcoWithdraw, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.morgan.Morgan/CreateTelcoWithdraw', request, metadata || {}, this.methodInfoCreateTelcoWithdraw);
    };
    MorganClient.prototype.createTelcoTopUp = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.morgan.Morgan/CreateTelcoTopUp', request, metadata || {}, this.methodInfoCreateTelcoTopUp, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.morgan.Morgan/CreateTelcoTopUp', request, metadata || {}, this.methodInfoCreateTelcoTopUp);
    };
    MorganClient.prototype.cancelTelcoWithdraw = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.morgan.Morgan/CancelTelcoWithdraw', request, metadata || {}, this.methodInfoCancelTelcoWithdraw, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.morgan.Morgan/CancelTelcoWithdraw', request, metadata || {}, this.methodInfoCancelTelcoWithdraw);
    };
    MorganClient.prototype.completeTelcoTopUp = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.morgan.Morgan/CompleteTelcoTopUp', request, metadata || {}, this.methodInfoCompleteTelcoTopUp, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.morgan.Morgan/CompleteTelcoTopUp', request, metadata || {}, this.methodInfoCompleteTelcoTopUp);
    };
    MorganClient.prototype.approveTelcoTopUp = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.morgan.Morgan/ApproveTelcoTopUp', request, metadata || {}, this.methodInfoApproveTelcoTopUp, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.morgan.Morgan/ApproveTelcoTopUp', request, metadata || {}, this.methodInfoApproveTelcoTopUp);
    };
    MorganClient.prototype.approveTelcoWithdraw = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.morgan.Morgan/ApproveTelcoWithdraw', request, metadata || {}, this.methodInfoApproveTelcoWithdraw, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.morgan.Morgan/ApproveTelcoWithdraw', request, metadata || {}, this.methodInfoApproveTelcoWithdraw);
    };
    MorganClient.prototype.rejectTelcoTopUp = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.morgan.Morgan/RejectTelcoTopUp', request, metadata || {}, this.methodInfoRejectTelcoTopUp, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.morgan.Morgan/RejectTelcoTopUp', request, metadata || {}, this.methodInfoRejectTelcoTopUp);
    };
    MorganClient.prototype.rejectTelcoWithdraw = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.morgan.Morgan/RejectTelcoWithdraw', request, metadata || {}, this.methodInfoRejectTelcoWithdraw, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.morgan.Morgan/RejectTelcoWithdraw', request, metadata || {}, this.methodInfoRejectTelcoWithdraw);
    };
    MorganClient.prototype.getSettings = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.morgan.Morgan/GetSettings', request, metadata || {}, this.methodInfoGetSettings, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.morgan.Morgan/GetSettings', request, metadata || {}, this.methodInfoGetSettings);
    };
    MorganClient.prototype.updateTopUpAutoApprovalSetting = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.morgan.Morgan/UpdateTopUpAutoApprovalSetting', request, metadata || {}, this.methodInfoUpdateTopUpAutoApprovalSetting, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.morgan.Morgan/UpdateTopUpAutoApprovalSetting', request, metadata || {}, this.methodInfoUpdateTopUpAutoApprovalSetting);
    };
    MorganClient.prototype.updateUsingThirdPartySetting = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.morgan.Morgan/UpdateUsingThirdPartySetting', request, metadata || {}, this.methodInfoUpdateUsingThirdPartySetting, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.morgan.Morgan/UpdateUsingThirdPartySetting', request, metadata || {}, this.methodInfoUpdateUsingThirdPartySetting);
    };
    MorganClient.prototype.updateChargeCardProvidersSetting = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.morgan.Morgan/UpdateChargeCardProvidersSetting', request, metadata || {}, this.methodInfoUpdateChargeCardProvidersSetting, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.morgan.Morgan/UpdateChargeCardProvidersSetting', request, metadata || {}, this.methodInfoUpdateChargeCardProvidersSetting);
    };
    MorganClient.prototype.updateGetCardProvidersSetting = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.morgan.Morgan/UpdateGetCardProvidersSetting', request, metadata || {}, this.methodInfoUpdateGetCardProvidersSetting, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.morgan.Morgan/UpdateGetCardProvidersSetting', request, metadata || {}, this.methodInfoUpdateGetCardProvidersSetting);
    };
    return MorganClient;
}());
exports.MorganClient = MorganClient;
