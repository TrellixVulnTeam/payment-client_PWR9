/**
 * @fileoverview gRPC-Web generated client stub for mcuc.stark.vision
 * @enhanceable
 * @public
 */
import * as grpcWeb from 'grpc-web';
import * as stark_api_vision_pb from './vision_pb';
export declare class VisionClient {
    client_: grpcWeb.AbstractClientBase;
    hostname_: string;
    credentials_: null | {
        [index: string]: string;
    };
    options_: null | {
        [index: string]: any;
    };
    constructor(hostname: string, credentials?: null | {
        [index: string]: string;
    }, options?: null | {
        [index: string]: any;
    });
    methodInfoGetPaymentDetail: any;
    getPaymentDetail(request: stark_api_vision_pb.GetPaymentDetailRequest, metadata: grpcWeb.Metadata | null): Promise<stark_api_vision_pb.GetPaymentDetailReply>;
    getPaymentDetail(request: stark_api_vision_pb.GetPaymentDetailRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: stark_api_vision_pb.GetPaymentDetailReply) => void): grpcWeb.ClientReadableStream<stark_api_vision_pb.GetPaymentDetailReply>;
    methodInfoListPayments: any;
    listPayments(request: stark_api_vision_pb.ListPaymentsRequest, metadata: grpcWeb.Metadata | null): Promise<stark_api_vision_pb.ListPaymentsReply>;
    listPayments(request: stark_api_vision_pb.ListPaymentsRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: stark_api_vision_pb.ListPaymentsReply) => void): grpcWeb.ClientReadableStream<stark_api_vision_pb.ListPaymentsReply>;
    methodInfoGetPaymentInfoByPaymentCode: any;
    getPaymentInfoByPaymentCode(request: stark_api_vision_pb.GetPaymentInfoByPaymentCodeRequest, metadata: grpcWeb.Metadata | null): Promise<stark_api_vision_pb.GetPaymentInfoByPaymentCodeReply>;
    getPaymentInfoByPaymentCode(request: stark_api_vision_pb.GetPaymentInfoByPaymentCodeRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: stark_api_vision_pb.GetPaymentInfoByPaymentCodeReply) => void): grpcWeb.ClientReadableStream<stark_api_vision_pb.GetPaymentInfoByPaymentCodeReply>;
}
