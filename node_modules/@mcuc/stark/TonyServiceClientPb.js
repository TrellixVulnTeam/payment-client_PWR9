"use strict";
/**
 * @fileoverview gRPC-Web generated client stub for mcuc.stark.tony
 * @enhanceable
 * @public
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TonyClient = void 0;
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
var grpcWeb = __importStar(require("grpc-web"));
var stark_api_tony_pb = __importStar(require("./tony_pb"));
var TonyClient = /** @class */ (function () {
    function TonyClient(hostname, credentials, options) {
        this.methodInfoGetEWalletPaymentCode = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_tony_pb.GetEWalletPaymentCodeReply, function (request) {
            return request.serializeBinary();
        }, stark_api_tony_pb.GetEWalletPaymentCodeReply.deserializeBinary);
        this.methodInfoCancelEWalletTopUp = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_tony_pb.CancelEWalletTopUpReply, function (request) {
            return request.serializeBinary();
        }, stark_api_tony_pb.CancelEWalletTopUpReply.deserializeBinary);
        this.methodInfoCreateEWalletTopUp = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_tony_pb.CreateEWalletTopUpReply, function (request) {
            return request.serializeBinary();
        }, stark_api_tony_pb.CreateEWalletTopUpReply.deserializeBinary);
        this.methodInfoApproveEWalletTopUp = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_tony_pb.ApproveEWalletTopUpReply, function (request) {
            return request.serializeBinary();
        }, stark_api_tony_pb.ApproveEWalletTopUpReply.deserializeBinary);
        this.methodInfoRejectEWalletTopUp = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_tony_pb.RejectEWalletTopUpReply, function (request) {
            return request.serializeBinary();
        }, stark_api_tony_pb.RejectEWalletTopUpReply.deserializeBinary);
        this.methodInfoGetSystemEWallets = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_tony_pb.GetSystemEWalletsReply, function (request) {
            return request.serializeBinary();
        }, stark_api_tony_pb.GetSystemEWalletsReply.deserializeBinary);
        this.methodInfoCreateSystemEWallet = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_tony_pb.CreateSystemEWalletReply, function (request) {
            return request.serializeBinary();
        }, stark_api_tony_pb.CreateSystemEWalletReply.deserializeBinary);
        this.methodInfoUpdateSystemEWalletStatus = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_tony_pb.UpdateSystemEWalletStatusReply, function (request) {
            return request.serializeBinary();
        }, stark_api_tony_pb.UpdateSystemEWalletStatusReply.deserializeBinary);
        this.methodInfoListSystemEWallets = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_tony_pb.ListSystemEWalletsReply, function (request) {
            return request.serializeBinary();
        }, stark_api_tony_pb.ListSystemEWalletsReply.deserializeBinary);
        this.methodInfoValidateSystemEWallets = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_tony_pb.ValidateSystemEWalletsReply, function (request) {
            return request.serializeBinary();
        }, stark_api_tony_pb.ValidateSystemEWalletsReply.deserializeBinary);
        this.methodInfoImportSystemEWallets = new grpcWeb.AbstractClientBase.MethodInfo(stark_api_tony_pb.ImportSystemEWalletsReply, function (request) {
            return request.serializeBinary();
        }, stark_api_tony_pb.ImportSystemEWalletsReply.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'text';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname;
        this.credentials_ = credentials;
        this.options_ = options;
    }
    TonyClient.prototype.getEWalletPaymentCode = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.tony.Tony/GetEWalletPaymentCode', request, metadata || {}, this.methodInfoGetEWalletPaymentCode, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.tony.Tony/GetEWalletPaymentCode', request, metadata || {}, this.methodInfoGetEWalletPaymentCode);
    };
    TonyClient.prototype.cancelEWalletTopUp = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.tony.Tony/CancelEWalletTopUp', request, metadata || {}, this.methodInfoCancelEWalletTopUp, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.tony.Tony/CancelEWalletTopUp', request, metadata || {}, this.methodInfoCancelEWalletTopUp);
    };
    TonyClient.prototype.createEWalletTopUp = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.tony.Tony/CreateEWalletTopUp', request, metadata || {}, this.methodInfoCreateEWalletTopUp, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.tony.Tony/CreateEWalletTopUp', request, metadata || {}, this.methodInfoCreateEWalletTopUp);
    };
    TonyClient.prototype.approveEWalletTopUp = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.tony.Tony/ApproveEWalletTopUp', request, metadata || {}, this.methodInfoApproveEWalletTopUp, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.tony.Tony/ApproveEWalletTopUp', request, metadata || {}, this.methodInfoApproveEWalletTopUp);
    };
    TonyClient.prototype.rejectEWalletTopUp = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.tony.Tony/RejectEWalletTopUp', request, metadata || {}, this.methodInfoRejectEWalletTopUp, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.tony.Tony/RejectEWalletTopUp', request, metadata || {}, this.methodInfoRejectEWalletTopUp);
    };
    TonyClient.prototype.getSystemEWallets = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.tony.Tony/GetSystemEWallets', request, metadata || {}, this.methodInfoGetSystemEWallets, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.tony.Tony/GetSystemEWallets', request, metadata || {}, this.methodInfoGetSystemEWallets);
    };
    TonyClient.prototype.createSystemEWallet = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.tony.Tony/CreateSystemEWallet', request, metadata || {}, this.methodInfoCreateSystemEWallet, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.tony.Tony/CreateSystemEWallet', request, metadata || {}, this.methodInfoCreateSystemEWallet);
    };
    TonyClient.prototype.updateSystemEWalletStatus = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.tony.Tony/UpdateSystemEWalletStatus', request, metadata || {}, this.methodInfoUpdateSystemEWalletStatus, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.tony.Tony/UpdateSystemEWalletStatus', request, metadata || {}, this.methodInfoUpdateSystemEWalletStatus);
    };
    TonyClient.prototype.listSystemEWallets = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.tony.Tony/ListSystemEWallets', request, metadata || {}, this.methodInfoListSystemEWallets, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.tony.Tony/ListSystemEWallets', request, metadata || {}, this.methodInfoListSystemEWallets);
    };
    TonyClient.prototype.validateSystemEWallets = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.tony.Tony/ValidateSystemEWallets', request, metadata || {}, this.methodInfoValidateSystemEWallets, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.tony.Tony/ValidateSystemEWallets', request, metadata || {}, this.methodInfoValidateSystemEWallets);
    };
    TonyClient.prototype.importSystemEWallets = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/mcuc.stark.tony.Tony/ImportSystemEWallets', request, metadata || {}, this.methodInfoImportSystemEWallets, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/mcuc.stark.tony.Tony/ImportSystemEWallets', request, metadata || {}, this.methodInfoImportSystemEWallets);
    };
    return TonyClient;
}());
exports.TonyClient = TonyClient;
