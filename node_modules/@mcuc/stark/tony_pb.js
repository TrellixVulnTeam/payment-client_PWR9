// source: stark/tony.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var validate_validate_pb = require('@greyhole/validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
goog.exportSymbol('proto.mcuc.stark.tony.ApproveEWalletTopUpReply', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.ApproveEWalletTopUpRequest', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.CancelEWalletTopUpReply', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.CancelEWalletTopUpRequest', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.CreateEWalletTopUpReply', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.CreateEWalletTopUpRequest', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.CreateSystemEWalletReply', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.CreateSystemEWalletRequest', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.EWalletName', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.EWalletPaymentDetail', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.EWalletStatus', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.GetEWalletPaymentCodeReply', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.GetSystemEWalletsReply', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.GetSystemEWalletsRequest', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.ImportSystemEWalletsReply', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.ImportSystemEWalletsRequest', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.ListSystemEWalletsReply', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.ListSystemEWalletsRequest', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.RejectEWalletTopUpReply', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.RejectEWalletTopUpRequest', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.SystemEWallet', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.ValidateSystemEWalletsReply', null, global);
goog.exportSymbol('proto.mcuc.stark.tony.ValidateSystemEWalletsRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest.displayName = 'proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.GetEWalletPaymentCodeReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.displayName = 'proto.mcuc.stark.tony.GetEWalletPaymentCodeReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.CancelEWalletTopUpRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.CancelEWalletTopUpRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.CancelEWalletTopUpRequest.displayName = 'proto.mcuc.stark.tony.CancelEWalletTopUpRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.CancelEWalletTopUpReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.CancelEWalletTopUpReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.CancelEWalletTopUpReply.displayName = 'proto.mcuc.stark.tony.CancelEWalletTopUpReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.CreateEWalletTopUpRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.CreateEWalletTopUpRequest.displayName = 'proto.mcuc.stark.tony.CreateEWalletTopUpRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.CreateEWalletTopUpReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.CreateEWalletTopUpReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.CreateEWalletTopUpReply.displayName = 'proto.mcuc.stark.tony.CreateEWalletTopUpReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.ApproveEWalletTopUpRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.displayName = 'proto.mcuc.stark.tony.ApproveEWalletTopUpRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.ApproveEWalletTopUpReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.ApproveEWalletTopUpReply.displayName = 'proto.mcuc.stark.tony.ApproveEWalletTopUpReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.RejectEWalletTopUpRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.RejectEWalletTopUpRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.RejectEWalletTopUpRequest.displayName = 'proto.mcuc.stark.tony.RejectEWalletTopUpRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.RejectEWalletTopUpReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.RejectEWalletTopUpReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.RejectEWalletTopUpReply.displayName = 'proto.mcuc.stark.tony.RejectEWalletTopUpReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.CreateSystemEWalletRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.CreateSystemEWalletRequest.displayName = 'proto.mcuc.stark.tony.CreateSystemEWalletRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.CreateSystemEWalletReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.CreateSystemEWalletReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.CreateSystemEWalletReply.displayName = 'proto.mcuc.stark.tony.CreateSystemEWalletReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest.displayName = 'proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply.displayName = 'proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcuc.stark.tony.ListSystemEWalletsRequest.repeatedFields_, null);
};
goog.inherits(proto.mcuc.stark.tony.ListSystemEWalletsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.ListSystemEWalletsRequest.displayName = 'proto.mcuc.stark.tony.ListSystemEWalletsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.ListSystemEWalletsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcuc.stark.tony.ListSystemEWalletsReply.repeatedFields_, null);
};
goog.inherits(proto.mcuc.stark.tony.ListSystemEWalletsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.ListSystemEWalletsReply.displayName = 'proto.mcuc.stark.tony.ListSystemEWalletsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcuc.stark.tony.ValidateSystemEWalletsRequest.repeatedFields_, null);
};
goog.inherits(proto.mcuc.stark.tony.ValidateSystemEWalletsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.ValidateSystemEWalletsRequest.displayName = 'proto.mcuc.stark.tony.ValidateSystemEWalletsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcuc.stark.tony.ValidateSystemEWalletsReply.repeatedFields_, null);
};
goog.inherits(proto.mcuc.stark.tony.ValidateSystemEWalletsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.ValidateSystemEWalletsReply.displayName = 'proto.mcuc.stark.tony.ValidateSystemEWalletsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.ImportSystemEWalletsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcuc.stark.tony.ImportSystemEWalletsRequest.repeatedFields_, null);
};
goog.inherits(proto.mcuc.stark.tony.ImportSystemEWalletsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.ImportSystemEWalletsRequest.displayName = 'proto.mcuc.stark.tony.ImportSystemEWalletsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.ImportSystemEWalletsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.ImportSystemEWalletsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.ImportSystemEWalletsReply.displayName = 'proto.mcuc.stark.tony.ImportSystemEWalletsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.GetSystemEWalletsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.GetSystemEWalletsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.GetSystemEWalletsRequest.displayName = 'proto.mcuc.stark.tony.GetSystemEWalletsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.GetSystemEWalletsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mcuc.stark.tony.GetSystemEWalletsReply.repeatedFields_, null);
};
goog.inherits(proto.mcuc.stark.tony.GetSystemEWalletsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.GetSystemEWalletsReply.displayName = 'proto.mcuc.stark.tony.GetSystemEWalletsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.EWalletPaymentDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.EWalletPaymentDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.EWalletPaymentDetail.displayName = 'proto.mcuc.stark.tony.EWalletPaymentDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.tony.SystemEWallet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.tony.SystemEWallet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.tony.SystemEWallet.displayName = 'proto.mcuc.stark.tony.SystemEWallet';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eWalletName: jspb.Message.getFieldWithDefault(msg, 1, 0),
    merchantUserId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest}
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest;
  return proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest}
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mcuc.stark.tony.EWalletName} */ (reader.readEnum());
      msg.setEWalletName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMerchantUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEWalletName();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMerchantUserId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional EWalletName e_wallet_name = 1;
 * @return {!proto.mcuc.stark.tony.EWalletName}
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest.prototype.getEWalletName = function() {
  return /** @type {!proto.mcuc.stark.tony.EWalletName} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mcuc.stark.tony.EWalletName} value
 * @return {!proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest} returns this
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest.prototype.setEWalletName = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 merchant_user_id = 2;
 * @return {number}
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest.prototype.getMerchantUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest} returns this
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeRequest.prototype.setMerchantUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.GetEWalletPaymentCodeReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, ""),
    eWalletName: jspb.Message.getFieldWithDefault(msg, 2, 0),
    accountPhoneNumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    accountName: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.GetEWalletPaymentCodeReply}
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.GetEWalletPaymentCodeReply;
  return proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.GetEWalletPaymentCodeReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.GetEWalletPaymentCodeReply}
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {!proto.mcuc.stark.tony.EWalletName} */ (reader.readEnum());
      msg.setEWalletName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountPhoneNumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.GetEWalletPaymentCodeReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEWalletName();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAccountPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAccountName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.GetEWalletPaymentCodeReply} returns this
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EWalletName e_wallet_name = 2;
 * @return {!proto.mcuc.stark.tony.EWalletName}
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.prototype.getEWalletName = function() {
  return /** @type {!proto.mcuc.stark.tony.EWalletName} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mcuc.stark.tony.EWalletName} value
 * @return {!proto.mcuc.stark.tony.GetEWalletPaymentCodeReply} returns this
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.prototype.setEWalletName = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string account_phone_number = 3;
 * @return {string}
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.prototype.getAccountPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.GetEWalletPaymentCodeReply} returns this
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.prototype.setAccountPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string account_name = 4;
 * @return {string}
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.prototype.getAccountName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.GetEWalletPaymentCodeReply} returns this
 */
proto.mcuc.stark.tony.GetEWalletPaymentCodeReply.prototype.setAccountName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.CancelEWalletTopUpRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.CancelEWalletTopUpRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.CancelEWalletTopUpRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.CancelEWalletTopUpRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    note: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.CancelEWalletTopUpRequest}
 */
proto.mcuc.stark.tony.CancelEWalletTopUpRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.CancelEWalletTopUpRequest;
  return proto.mcuc.stark.tony.CancelEWalletTopUpRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.CancelEWalletTopUpRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.CancelEWalletTopUpRequest}
 */
proto.mcuc.stark.tony.CancelEWalletTopUpRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPaymentId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.CancelEWalletTopUpRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.CancelEWalletTopUpRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.CancelEWalletTopUpRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.CancelEWalletTopUpRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 payment_id = 1;
 * @return {number}
 */
proto.mcuc.stark.tony.CancelEWalletTopUpRequest.prototype.getPaymentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.CancelEWalletTopUpRequest} returns this
 */
proto.mcuc.stark.tony.CancelEWalletTopUpRequest.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string note = 2;
 * @return {string}
 */
proto.mcuc.stark.tony.CancelEWalletTopUpRequest.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.CancelEWalletTopUpRequest} returns this
 */
proto.mcuc.stark.tony.CancelEWalletTopUpRequest.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.CancelEWalletTopUpReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.CancelEWalletTopUpReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.CancelEWalletTopUpReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.CancelEWalletTopUpReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.CancelEWalletTopUpReply}
 */
proto.mcuc.stark.tony.CancelEWalletTopUpReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.CancelEWalletTopUpReply;
  return proto.mcuc.stark.tony.CancelEWalletTopUpReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.CancelEWalletTopUpReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.CancelEWalletTopUpReply}
 */
proto.mcuc.stark.tony.CancelEWalletTopUpReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.CancelEWalletTopUpReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.CancelEWalletTopUpReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.CancelEWalletTopUpReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.CancelEWalletTopUpReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.CreateEWalletTopUpRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.CreateEWalletTopUpRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    paymentCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    merchantUserAccountPhoneNumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    merchantUserAccountName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    systemAccountPhoneNumber: jspb.Message.getFieldWithDefault(msg, 5, ""),
    systemAccountName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    note: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.CreateEWalletTopUpRequest}
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.CreateEWalletTopUpRequest;
  return proto.mcuc.stark.tony.CreateEWalletTopUpRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.CreateEWalletTopUpRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.CreateEWalletTopUpRequest}
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantUserAccountPhoneNumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantUserAccountName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemAccountPhoneNumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemAccountName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.CreateEWalletTopUpRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.CreateEWalletTopUpRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPaymentCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMerchantUserAccountPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMerchantUserAccountName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSystemAccountPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSystemAccountName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional uint64 amount = 1;
 * @return {number}
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.CreateEWalletTopUpRequest} returns this
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string payment_code = 2;
 * @return {string}
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.prototype.getPaymentCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.CreateEWalletTopUpRequest} returns this
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.prototype.setPaymentCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string merchant_user_account_phone_number = 3;
 * @return {string}
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.prototype.getMerchantUserAccountPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.CreateEWalletTopUpRequest} returns this
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.prototype.setMerchantUserAccountPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string merchant_user_account_name = 4;
 * @return {string}
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.prototype.getMerchantUserAccountName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.CreateEWalletTopUpRequest} returns this
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.prototype.setMerchantUserAccountName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string system_account_phone_number = 5;
 * @return {string}
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.prototype.getSystemAccountPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.CreateEWalletTopUpRequest} returns this
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.prototype.setSystemAccountPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string system_account_name = 6;
 * @return {string}
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.prototype.getSystemAccountName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.CreateEWalletTopUpRequest} returns this
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.prototype.setSystemAccountName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string note = 7;
 * @return {string}
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.CreateEWalletTopUpRequest} returns this
 */
proto.mcuc.stark.tony.CreateEWalletTopUpRequest.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.CreateEWalletTopUpReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.CreateEWalletTopUpReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.CreateEWalletTopUpReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.CreateEWalletTopUpReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.CreateEWalletTopUpReply}
 */
proto.mcuc.stark.tony.CreateEWalletTopUpReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.CreateEWalletTopUpReply;
  return proto.mcuc.stark.tony.CreateEWalletTopUpReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.CreateEWalletTopUpReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.CreateEWalletTopUpReply}
 */
proto.mcuc.stark.tony.CreateEWalletTopUpReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPaymentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.CreateEWalletTopUpReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.CreateEWalletTopUpReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.CreateEWalletTopUpReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.CreateEWalletTopUpReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 payment_id = 1;
 * @return {number}
 */
proto.mcuc.stark.tony.CreateEWalletTopUpReply.prototype.getPaymentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.CreateEWalletTopUpReply} returns this
 */
proto.mcuc.stark.tony.CreateEWalletTopUpReply.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.ApproveEWalletTopUpRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    imageUrl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    txId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    note: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.ApproveEWalletTopUpRequest}
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.ApproveEWalletTopUpRequest;
  return proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.ApproveEWalletTopUpRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.ApproveEWalletTopUpRequest}
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPaymentId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.ApproveEWalletTopUpRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTxId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int64 payment_id = 1;
 * @return {number}
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.prototype.getPaymentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.ApproveEWalletTopUpRequest} returns this
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string image_url = 2;
 * @return {string}
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.prototype.getImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.ApproveEWalletTopUpRequest} returns this
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.prototype.setImageUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string tx_id = 3;
 * @return {string}
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.prototype.getTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.ApproveEWalletTopUpRequest} returns this
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.prototype.setTxId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string note = 4;
 * @return {string}
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.ApproveEWalletTopUpRequest} returns this
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpRequest.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.ApproveEWalletTopUpReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.ApproveEWalletTopUpReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.ApproveEWalletTopUpReply}
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.ApproveEWalletTopUpReply;
  return proto.mcuc.stark.tony.ApproveEWalletTopUpReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.ApproveEWalletTopUpReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.ApproveEWalletTopUpReply}
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPaymentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.ApproveEWalletTopUpReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.ApproveEWalletTopUpReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 payment_id = 1;
 * @return {number}
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpReply.prototype.getPaymentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.ApproveEWalletTopUpReply} returns this
 */
proto.mcuc.stark.tony.ApproveEWalletTopUpReply.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.RejectEWalletTopUpRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.RejectEWalletTopUpRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.RejectEWalletTopUpRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.RejectEWalletTopUpRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    note: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isMerchantCall: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.RejectEWalletTopUpRequest}
 */
proto.mcuc.stark.tony.RejectEWalletTopUpRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.RejectEWalletTopUpRequest;
  return proto.mcuc.stark.tony.RejectEWalletTopUpRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.RejectEWalletTopUpRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.RejectEWalletTopUpRequest}
 */
proto.mcuc.stark.tony.RejectEWalletTopUpRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPaymentId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsMerchantCall(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.RejectEWalletTopUpRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.RejectEWalletTopUpRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.RejectEWalletTopUpRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.RejectEWalletTopUpRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsMerchantCall();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int64 payment_id = 1;
 * @return {number}
 */
proto.mcuc.stark.tony.RejectEWalletTopUpRequest.prototype.getPaymentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.RejectEWalletTopUpRequest} returns this
 */
proto.mcuc.stark.tony.RejectEWalletTopUpRequest.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string note = 2;
 * @return {string}
 */
proto.mcuc.stark.tony.RejectEWalletTopUpRequest.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.RejectEWalletTopUpRequest} returns this
 */
proto.mcuc.stark.tony.RejectEWalletTopUpRequest.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool is_merchant_call = 3;
 * @return {boolean}
 */
proto.mcuc.stark.tony.RejectEWalletTopUpRequest.prototype.getIsMerchantCall = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mcuc.stark.tony.RejectEWalletTopUpRequest} returns this
 */
proto.mcuc.stark.tony.RejectEWalletTopUpRequest.prototype.setIsMerchantCall = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.RejectEWalletTopUpReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.RejectEWalletTopUpReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.RejectEWalletTopUpReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.RejectEWalletTopUpReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.RejectEWalletTopUpReply}
 */
proto.mcuc.stark.tony.RejectEWalletTopUpReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.RejectEWalletTopUpReply;
  return proto.mcuc.stark.tony.RejectEWalletTopUpReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.RejectEWalletTopUpReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.RejectEWalletTopUpReply}
 */
proto.mcuc.stark.tony.RejectEWalletTopUpReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.RejectEWalletTopUpReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.RejectEWalletTopUpReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.RejectEWalletTopUpReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.RejectEWalletTopUpReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.CreateSystemEWalletRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.CreateSystemEWalletRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountWalletName: jspb.Message.getFieldWithDefault(msg, 2, 0),
    accountPhoneNumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    accountName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    balance: jspb.Message.getFieldWithDefault(msg, 5, 0),
    dailyBalance: jspb.Message.getFieldWithDefault(msg, 6, 0),
    dailyBalanceLimit: jspb.Message.getFieldWithDefault(msg, 7, 0),
    dailyUsedAmount: jspb.Message.getFieldWithDefault(msg, 8, 0),
    merchantId: jspb.Message.getFieldWithDefault(msg, 9, 0),
    errorCode: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest}
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.CreateSystemEWalletRequest;
  return proto.mcuc.stark.tony.CreateSystemEWalletRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.CreateSystemEWalletRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest}
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccountId(value);
      break;
    case 2:
      var value = /** @type {!proto.mcuc.stark.tony.EWalletName} */ (reader.readEnum());
      msg.setAccountWalletName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountPhoneNumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBalance(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDailyBalance(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDailyBalanceLimit(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDailyUsedAmount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMerchantId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.CreateSystemEWalletRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.CreateSystemEWalletRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getAccountWalletName();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAccountPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAccountName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBalance();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getDailyBalance();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getDailyBalanceLimit();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getDailyUsedAmount();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getMerchantId();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getErrorCode();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional int64 account_id = 1;
 * @return {number}
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest} returns this
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional EWalletName account_wallet_name = 2;
 * @return {!proto.mcuc.stark.tony.EWalletName}
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.getAccountWalletName = function() {
  return /** @type {!proto.mcuc.stark.tony.EWalletName} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mcuc.stark.tony.EWalletName} value
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest} returns this
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.setAccountWalletName = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string account_phone_number = 3;
 * @return {string}
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.getAccountPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest} returns this
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.setAccountPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string account_name = 4;
 * @return {string}
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.getAccountName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest} returns this
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.setAccountName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 balance = 5;
 * @return {number}
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest} returns this
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.setBalance = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 daily_balance = 6;
 * @return {number}
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.getDailyBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest} returns this
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.setDailyBalance = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 daily_balance_limit = 7;
 * @return {number}
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.getDailyBalanceLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest} returns this
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.setDailyBalanceLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 daily_used_amount = 8;
 * @return {number}
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.getDailyUsedAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest} returns this
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.setDailyUsedAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 merchant_id = 9;
 * @return {number}
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.getMerchantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest} returns this
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.setMerchantId = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string error_code = 10;
 * @return {string}
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.getErrorCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest} returns this
 */
proto.mcuc.stark.tony.CreateSystemEWalletRequest.prototype.setErrorCode = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.CreateSystemEWalletReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.CreateSystemEWalletReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.CreateSystemEWalletReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.CreateSystemEWalletReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletReply}
 */
proto.mcuc.stark.tony.CreateSystemEWalletReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.CreateSystemEWalletReply;
  return proto.mcuc.stark.tony.CreateSystemEWalletReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.CreateSystemEWalletReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletReply}
 */
proto.mcuc.stark.tony.CreateSystemEWalletReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.CreateSystemEWalletReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.CreateSystemEWalletReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.CreateSystemEWalletReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.CreateSystemEWalletReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest}
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest;
  return proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest}
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.mcuc.stark.tony.EWalletStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest} returns this
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional EWalletStatus status = 2;
 * @return {!proto.mcuc.stark.tony.EWalletStatus}
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest.prototype.getStatus = function() {
  return /** @type {!proto.mcuc.stark.tony.EWalletStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mcuc.stark.tony.EWalletStatus} value
 * @return {!proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest} returns this
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    eWallet: (f = msg.getEWallet()) && proto.mcuc.stark.tony.SystemEWallet.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply}
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply;
  return proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply}
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mcuc.stark.tony.SystemEWallet;
      reader.readMessage(value,proto.mcuc.stark.tony.SystemEWallet.deserializeBinaryFromReader);
      msg.setEWallet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEWallet();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mcuc.stark.tony.SystemEWallet.serializeBinaryToWriter
    );
  }
};


/**
 * optional SystemEWallet e_wallet = 1;
 * @return {?proto.mcuc.stark.tony.SystemEWallet}
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply.prototype.getEWallet = function() {
  return /** @type{?proto.mcuc.stark.tony.SystemEWallet} */ (
    jspb.Message.getWrapperField(this, proto.mcuc.stark.tony.SystemEWallet, 1));
};


/**
 * @param {?proto.mcuc.stark.tony.SystemEWallet|undefined} value
 * @return {!proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply} returns this
*/
proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply.prototype.setEWallet = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply} returns this
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply.prototype.clearEWallet = function() {
  return this.setEWallet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcuc.stark.tony.UpdateSystemEWalletStatusReply.prototype.hasEWallet = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.repeatedFields_ = [3,4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.ListSystemEWalletsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    page: jspb.Message.getFieldWithDefault(msg, 1, 0),
    size: jspb.Message.getFieldWithDefault(msg, 2, 0),
    idsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    merchantIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    statusesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    eWalletNamesList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsRequest}
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.ListSystemEWalletsRequest;
  return proto.mcuc.stark.tony.ListSystemEWalletsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsRequest}
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setIdsList(value);
      break;
    case 4:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setMerchantIdsList(value);
      break;
    case 5:
      var value = /** @type {!Array<!proto.mcuc.stark.tony.EWalletStatus>} */ (reader.readPackedEnum());
      msg.setStatusesList(value);
      break;
    case 6:
      var value = /** @type {!Array<!proto.mcuc.stark.tony.EWalletName>} */ (reader.readPackedEnum());
      msg.setEWalletNamesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.ListSystemEWalletsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPage();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      3,
      f
    );
  }
  f = message.getMerchantIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      4,
      f
    );
  }
  f = message.getStatusesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
  f = message.getEWalletNamesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
};


/**
 * optional uint32 page = 1;
 * @return {number}
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 size = 2;
 * @return {number}
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated int64 ids = 3;
 * @return {!Array<number>}
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.getIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};


/**
 * repeated int64 merchant_ids = 4;
 * @return {!Array<number>}
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.getMerchantIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.setMerchantIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.addMerchantIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.clearMerchantIdsList = function() {
  return this.setMerchantIdsList([]);
};


/**
 * repeated EWalletStatus statuses = 5;
 * @return {!Array<!proto.mcuc.stark.tony.EWalletStatus>}
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.getStatusesList = function() {
  return /** @type {!Array<!proto.mcuc.stark.tony.EWalletStatus>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<!proto.mcuc.stark.tony.EWalletStatus>} value
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.setStatusesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.mcuc.stark.tony.EWalletStatus} value
 * @param {number=} opt_index
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.addStatuses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.clearStatusesList = function() {
  return this.setStatusesList([]);
};


/**
 * repeated EWalletName e_wallet_names = 6;
 * @return {!Array<!proto.mcuc.stark.tony.EWalletName>}
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.getEWalletNamesList = function() {
  return /** @type {!Array<!proto.mcuc.stark.tony.EWalletName>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<!proto.mcuc.stark.tony.EWalletName>} value
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.setEWalletNamesList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.mcuc.stark.tony.EWalletName} value
 * @param {number=} opt_index
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.addEWalletNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsRequest.prototype.clearEWalletNamesList = function() {
  return this.setEWalletNamesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcuc.stark.tony.ListSystemEWalletsReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.ListSystemEWalletsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.ListSystemEWalletsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.ListSystemEWalletsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.ListSystemEWalletsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.mcuc.stark.tony.SystemEWallet.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    currentPage: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsReply}
 */
proto.mcuc.stark.tony.ListSystemEWalletsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.ListSystemEWalletsReply;
  return proto.mcuc.stark.tony.ListSystemEWalletsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.ListSystemEWalletsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsReply}
 */
proto.mcuc.stark.tony.ListSystemEWalletsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mcuc.stark.tony.SystemEWallet;
      reader.readMessage(value,proto.mcuc.stark.tony.SystemEWallet.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.ListSystemEWalletsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.ListSystemEWalletsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.ListSystemEWalletsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.ListSystemEWalletsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mcuc.stark.tony.SystemEWallet.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCurrentPage();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * repeated SystemEWallet records = 1;
 * @return {!Array<!proto.mcuc.stark.tony.SystemEWallet>}
 */
proto.mcuc.stark.tony.ListSystemEWalletsReply.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.mcuc.stark.tony.SystemEWallet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mcuc.stark.tony.SystemEWallet, 1));
};


/**
 * @param {!Array<!proto.mcuc.stark.tony.SystemEWallet>} value
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsReply} returns this
*/
proto.mcuc.stark.tony.ListSystemEWalletsReply.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mcuc.stark.tony.SystemEWallet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mcuc.stark.tony.SystemEWallet}
 */
proto.mcuc.stark.tony.ListSystemEWalletsReply.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mcuc.stark.tony.SystemEWallet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsReply} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsReply.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};


/**
 * optional uint64 total = 2;
 * @return {number}
 */
proto.mcuc.stark.tony.ListSystemEWalletsReply.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsReply} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsReply.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 current_page = 3;
 * @return {number}
 */
proto.mcuc.stark.tony.ListSystemEWalletsReply.prototype.getCurrentPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.ListSystemEWalletsReply} returns this
 */
proto.mcuc.stark.tony.ListSystemEWalletsReply.prototype.setCurrentPage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.ValidateSystemEWalletsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.ValidateSystemEWalletsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.mcuc.stark.tony.CreateSystemEWalletRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.ValidateSystemEWalletsRequest}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.ValidateSystemEWalletsRequest;
  return proto.mcuc.stark.tony.ValidateSystemEWalletsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.ValidateSystemEWalletsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.ValidateSystemEWalletsRequest}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mcuc.stark.tony.CreateSystemEWalletRequest;
      reader.readMessage(value,proto.mcuc.stark.tony.CreateSystemEWalletRequest.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.ValidateSystemEWalletsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.ValidateSystemEWalletsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mcuc.stark.tony.CreateSystemEWalletRequest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CreateSystemEWalletRequest records = 1;
 * @return {!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsRequest.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mcuc.stark.tony.CreateSystemEWalletRequest, 1));
};


/**
 * @param {!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>} value
 * @return {!proto.mcuc.stark.tony.ValidateSystemEWalletsRequest} returns this
*/
proto.mcuc.stark.tony.ValidateSystemEWalletsRequest.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mcuc.stark.tony.CreateSystemEWalletRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsRequest.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mcuc.stark.tony.CreateSystemEWalletRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcuc.stark.tony.ValidateSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsRequest.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.ValidateSystemEWalletsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.ValidateSystemEWalletsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    validRecordsList: jspb.Message.toObjectList(msg.getValidRecordsList(),
    proto.mcuc.stark.tony.CreateSystemEWalletRequest.toObject, includeInstance),
    duplicatedRecordsList: jspb.Message.toObjectList(msg.getDuplicatedRecordsList(),
    proto.mcuc.stark.tony.CreateSystemEWalletRequest.toObject, includeInstance),
    invalidRecordsList: jspb.Message.toObjectList(msg.getInvalidRecordsList(),
    proto.mcuc.stark.tony.CreateSystemEWalletRequest.toObject, includeInstance),
    duplicatedIdRecordsList: jspb.Message.toObjectList(msg.getDuplicatedIdRecordsList(),
    proto.mcuc.stark.tony.CreateSystemEWalletRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.ValidateSystemEWalletsReply}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.ValidateSystemEWalletsReply;
  return proto.mcuc.stark.tony.ValidateSystemEWalletsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.ValidateSystemEWalletsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.ValidateSystemEWalletsReply}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mcuc.stark.tony.CreateSystemEWalletRequest;
      reader.readMessage(value,proto.mcuc.stark.tony.CreateSystemEWalletRequest.deserializeBinaryFromReader);
      msg.addValidRecords(value);
      break;
    case 2:
      var value = new proto.mcuc.stark.tony.CreateSystemEWalletRequest;
      reader.readMessage(value,proto.mcuc.stark.tony.CreateSystemEWalletRequest.deserializeBinaryFromReader);
      msg.addDuplicatedRecords(value);
      break;
    case 3:
      var value = new proto.mcuc.stark.tony.CreateSystemEWalletRequest;
      reader.readMessage(value,proto.mcuc.stark.tony.CreateSystemEWalletRequest.deserializeBinaryFromReader);
      msg.addInvalidRecords(value);
      break;
    case 4:
      var value = new proto.mcuc.stark.tony.CreateSystemEWalletRequest;
      reader.readMessage(value,proto.mcuc.stark.tony.CreateSystemEWalletRequest.deserializeBinaryFromReader);
      msg.addDuplicatedIdRecords(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.ValidateSystemEWalletsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.ValidateSystemEWalletsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mcuc.stark.tony.CreateSystemEWalletRequest.serializeBinaryToWriter
    );
  }
  f = message.getDuplicatedRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.mcuc.stark.tony.CreateSystemEWalletRequest.serializeBinaryToWriter
    );
  }
  f = message.getInvalidRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.mcuc.stark.tony.CreateSystemEWalletRequest.serializeBinaryToWriter
    );
  }
  f = message.getDuplicatedIdRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.mcuc.stark.tony.CreateSystemEWalletRequest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CreateSystemEWalletRequest valid_records = 1;
 * @return {!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.getValidRecordsList = function() {
  return /** @type{!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mcuc.stark.tony.CreateSystemEWalletRequest, 1));
};


/**
 * @param {!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>} value
 * @return {!proto.mcuc.stark.tony.ValidateSystemEWalletsReply} returns this
*/
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.setValidRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mcuc.stark.tony.CreateSystemEWalletRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.addValidRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mcuc.stark.tony.CreateSystemEWalletRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcuc.stark.tony.ValidateSystemEWalletsReply} returns this
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.clearValidRecordsList = function() {
  return this.setValidRecordsList([]);
};


/**
 * repeated CreateSystemEWalletRequest duplicated_records = 2;
 * @return {!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.getDuplicatedRecordsList = function() {
  return /** @type{!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mcuc.stark.tony.CreateSystemEWalletRequest, 2));
};


/**
 * @param {!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>} value
 * @return {!proto.mcuc.stark.tony.ValidateSystemEWalletsReply} returns this
*/
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.setDuplicatedRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.mcuc.stark.tony.CreateSystemEWalletRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.addDuplicatedRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.mcuc.stark.tony.CreateSystemEWalletRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcuc.stark.tony.ValidateSystemEWalletsReply} returns this
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.clearDuplicatedRecordsList = function() {
  return this.setDuplicatedRecordsList([]);
};


/**
 * repeated CreateSystemEWalletRequest invalid_records = 3;
 * @return {!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.getInvalidRecordsList = function() {
  return /** @type{!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mcuc.stark.tony.CreateSystemEWalletRequest, 3));
};


/**
 * @param {!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>} value
 * @return {!proto.mcuc.stark.tony.ValidateSystemEWalletsReply} returns this
*/
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.setInvalidRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.mcuc.stark.tony.CreateSystemEWalletRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.addInvalidRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.mcuc.stark.tony.CreateSystemEWalletRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcuc.stark.tony.ValidateSystemEWalletsReply} returns this
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.clearInvalidRecordsList = function() {
  return this.setInvalidRecordsList([]);
};


/**
 * repeated CreateSystemEWalletRequest duplicated_id_records = 4;
 * @return {!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.getDuplicatedIdRecordsList = function() {
  return /** @type{!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mcuc.stark.tony.CreateSystemEWalletRequest, 4));
};


/**
 * @param {!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>} value
 * @return {!proto.mcuc.stark.tony.ValidateSystemEWalletsReply} returns this
*/
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.setDuplicatedIdRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.mcuc.stark.tony.CreateSystemEWalletRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest}
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.addDuplicatedIdRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.mcuc.stark.tony.CreateSystemEWalletRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcuc.stark.tony.ValidateSystemEWalletsReply} returns this
 */
proto.mcuc.stark.tony.ValidateSystemEWalletsReply.prototype.clearDuplicatedIdRecordsList = function() {
  return this.setDuplicatedIdRecordsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcuc.stark.tony.ImportSystemEWalletsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.ImportSystemEWalletsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.ImportSystemEWalletsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.ImportSystemEWalletsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.ImportSystemEWalletsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.mcuc.stark.tony.CreateSystemEWalletRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.ImportSystemEWalletsRequest}
 */
proto.mcuc.stark.tony.ImportSystemEWalletsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.ImportSystemEWalletsRequest;
  return proto.mcuc.stark.tony.ImportSystemEWalletsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.ImportSystemEWalletsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.ImportSystemEWalletsRequest}
 */
proto.mcuc.stark.tony.ImportSystemEWalletsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mcuc.stark.tony.CreateSystemEWalletRequest;
      reader.readMessage(value,proto.mcuc.stark.tony.CreateSystemEWalletRequest.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.ImportSystemEWalletsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.ImportSystemEWalletsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.ImportSystemEWalletsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.ImportSystemEWalletsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mcuc.stark.tony.CreateSystemEWalletRequest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CreateSystemEWalletRequest records = 1;
 * @return {!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>}
 */
proto.mcuc.stark.tony.ImportSystemEWalletsRequest.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mcuc.stark.tony.CreateSystemEWalletRequest, 1));
};


/**
 * @param {!Array<!proto.mcuc.stark.tony.CreateSystemEWalletRequest>} value
 * @return {!proto.mcuc.stark.tony.ImportSystemEWalletsRequest} returns this
*/
proto.mcuc.stark.tony.ImportSystemEWalletsRequest.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mcuc.stark.tony.CreateSystemEWalletRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mcuc.stark.tony.CreateSystemEWalletRequest}
 */
proto.mcuc.stark.tony.ImportSystemEWalletsRequest.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mcuc.stark.tony.CreateSystemEWalletRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcuc.stark.tony.ImportSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.ImportSystemEWalletsRequest.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.ImportSystemEWalletsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.ImportSystemEWalletsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.ImportSystemEWalletsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.ImportSystemEWalletsReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.ImportSystemEWalletsReply}
 */
proto.mcuc.stark.tony.ImportSystemEWalletsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.ImportSystemEWalletsReply;
  return proto.mcuc.stark.tony.ImportSystemEWalletsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.ImportSystemEWalletsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.ImportSystemEWalletsReply}
 */
proto.mcuc.stark.tony.ImportSystemEWalletsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.ImportSystemEWalletsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.ImportSystemEWalletsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.ImportSystemEWalletsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.ImportSystemEWalletsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.GetSystemEWalletsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.GetSystemEWalletsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.GetSystemEWalletsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.GetSystemEWalletsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eWalletName: jspb.Message.getFieldWithDefault(msg, 1, 0),
    merchantId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.GetSystemEWalletsRequest}
 */
proto.mcuc.stark.tony.GetSystemEWalletsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.GetSystemEWalletsRequest;
  return proto.mcuc.stark.tony.GetSystemEWalletsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.GetSystemEWalletsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.GetSystemEWalletsRequest}
 */
proto.mcuc.stark.tony.GetSystemEWalletsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mcuc.stark.tony.EWalletName} */ (reader.readEnum());
      msg.setEWalletName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMerchantId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.GetSystemEWalletsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.GetSystemEWalletsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.GetSystemEWalletsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.GetSystemEWalletsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEWalletName();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMerchantId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional EWalletName e_wallet_name = 1;
 * @return {!proto.mcuc.stark.tony.EWalletName}
 */
proto.mcuc.stark.tony.GetSystemEWalletsRequest.prototype.getEWalletName = function() {
  return /** @type {!proto.mcuc.stark.tony.EWalletName} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mcuc.stark.tony.EWalletName} value
 * @return {!proto.mcuc.stark.tony.GetSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.GetSystemEWalletsRequest.prototype.setEWalletName = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 merchant_id = 2;
 * @return {number}
 */
proto.mcuc.stark.tony.GetSystemEWalletsRequest.prototype.getMerchantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.GetSystemEWalletsRequest} returns this
 */
proto.mcuc.stark.tony.GetSystemEWalletsRequest.prototype.setMerchantId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mcuc.stark.tony.GetSystemEWalletsReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.GetSystemEWalletsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.GetSystemEWalletsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.GetSystemEWalletsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.GetSystemEWalletsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    systemEWalletsList: jspb.Message.toObjectList(msg.getSystemEWalletsList(),
    proto.mcuc.stark.tony.SystemEWallet.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.GetSystemEWalletsReply}
 */
proto.mcuc.stark.tony.GetSystemEWalletsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.GetSystemEWalletsReply;
  return proto.mcuc.stark.tony.GetSystemEWalletsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.GetSystemEWalletsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.GetSystemEWalletsReply}
 */
proto.mcuc.stark.tony.GetSystemEWalletsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mcuc.stark.tony.SystemEWallet;
      reader.readMessage(value,proto.mcuc.stark.tony.SystemEWallet.deserializeBinaryFromReader);
      msg.addSystemEWallets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.GetSystemEWalletsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.GetSystemEWalletsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.GetSystemEWalletsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.GetSystemEWalletsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSystemEWalletsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mcuc.stark.tony.SystemEWallet.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SystemEWallet system_e_wallets = 1;
 * @return {!Array<!proto.mcuc.stark.tony.SystemEWallet>}
 */
proto.mcuc.stark.tony.GetSystemEWalletsReply.prototype.getSystemEWalletsList = function() {
  return /** @type{!Array<!proto.mcuc.stark.tony.SystemEWallet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mcuc.stark.tony.SystemEWallet, 1));
};


/**
 * @param {!Array<!proto.mcuc.stark.tony.SystemEWallet>} value
 * @return {!proto.mcuc.stark.tony.GetSystemEWalletsReply} returns this
*/
proto.mcuc.stark.tony.GetSystemEWalletsReply.prototype.setSystemEWalletsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mcuc.stark.tony.SystemEWallet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mcuc.stark.tony.SystemEWallet}
 */
proto.mcuc.stark.tony.GetSystemEWalletsReply.prototype.addSystemEWallets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mcuc.stark.tony.SystemEWallet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mcuc.stark.tony.GetSystemEWalletsReply} returns this
 */
proto.mcuc.stark.tony.GetSystemEWalletsReply.prototype.clearSystemEWalletsList = function() {
  return this.setSystemEWalletsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.EWalletPaymentDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.EWalletPaymentDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    eWalletName: jspb.Message.getFieldWithDefault(msg, 2, 0),
    merchantUserAccountPhoneNumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    merchantUserAccountName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    systemAccountPhoneNumber: jspb.Message.getFieldWithDefault(msg, 5, ""),
    systemAccountName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    fee: jspb.Message.getFieldWithDefault(msg, 8, 0),
    merchantUserId: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.EWalletPaymentDetail}
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.EWalletPaymentDetail;
  return proto.mcuc.stark.tony.EWalletPaymentDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.EWalletPaymentDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.EWalletPaymentDetail}
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentCode(value);
      break;
    case 2:
      var value = /** @type {!proto.mcuc.stark.tony.EWalletName} */ (reader.readEnum());
      msg.setEWalletName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantUserAccountPhoneNumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantUserAccountName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemAccountPhoneNumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemAccountName(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFee(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMerchantUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.EWalletPaymentDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.EWalletPaymentDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEWalletName();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMerchantUserAccountPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMerchantUserAccountName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSystemAccountPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSystemAccountName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getFee();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getMerchantUserId();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
};


/**
 * optional string payment_code = 1;
 * @return {string}
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.getPaymentCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.EWalletPaymentDetail} returns this
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.setPaymentCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EWalletName e_wallet_name = 2;
 * @return {!proto.mcuc.stark.tony.EWalletName}
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.getEWalletName = function() {
  return /** @type {!proto.mcuc.stark.tony.EWalletName} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mcuc.stark.tony.EWalletName} value
 * @return {!proto.mcuc.stark.tony.EWalletPaymentDetail} returns this
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.setEWalletName = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string merchant_user_account_phone_number = 3;
 * @return {string}
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.getMerchantUserAccountPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.EWalletPaymentDetail} returns this
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.setMerchantUserAccountPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string merchant_user_account_name = 4;
 * @return {string}
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.getMerchantUserAccountName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.EWalletPaymentDetail} returns this
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.setMerchantUserAccountName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string system_account_phone_number = 5;
 * @return {string}
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.getSystemAccountPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.EWalletPaymentDetail} returns this
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.setSystemAccountPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string system_account_name = 6;
 * @return {string}
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.getSystemAccountName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.EWalletPaymentDetail} returns this
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.setSystemAccountName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint64 amount = 7;
 * @return {number}
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.EWalletPaymentDetail} returns this
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 fee = 8;
 * @return {number}
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.EWalletPaymentDetail} returns this
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.setFee = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 merchant_user_id = 9;
 * @return {number}
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.getMerchantUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.EWalletPaymentDetail} returns this
 */
proto.mcuc.stark.tony.EWalletPaymentDetail.prototype.setMerchantUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.tony.SystemEWallet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.tony.SystemEWallet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.SystemEWallet.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdBy: jspb.Message.getFieldWithDefault(msg, 4, ""),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 5, ""),
    eWalletName: jspb.Message.getFieldWithDefault(msg, 6, 0),
    status: jspb.Message.getFieldWithDefault(msg, 7, 0),
    merchantId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    accountPhoneNumber: jspb.Message.getFieldWithDefault(msg, 9, ""),
    accountName: jspb.Message.getFieldWithDefault(msg, 10, ""),
    balance: jspb.Message.getFieldWithDefault(msg, 11, 0),
    dailyBalance: jspb.Message.getFieldWithDefault(msg, 12, 0),
    dailyBalanceLimit: jspb.Message.getFieldWithDefault(msg, 13, 0),
    dailyUsedAmount: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.tony.SystemEWallet}
 */
proto.mcuc.stark.tony.SystemEWallet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.tony.SystemEWallet;
  return proto.mcuc.stark.tony.SystemEWallet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.tony.SystemEWallet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.tony.SystemEWallet}
 */
proto.mcuc.stark.tony.SystemEWallet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    case 6:
      var value = /** @type {!proto.mcuc.stark.tony.EWalletName} */ (reader.readEnum());
      msg.setEWalletName(value);
      break;
    case 7:
      var value = /** @type {!proto.mcuc.stark.tony.EWalletStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMerchantId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountPhoneNumber(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountName(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBalance(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDailyBalance(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDailyBalanceLimit(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDailyUsedAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.tony.SystemEWallet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.tony.SystemEWallet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.tony.SystemEWallet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUpdatedBy();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEWalletName();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getMerchantId();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getAccountPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getAccountName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getBalance();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getDailyBalance();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getDailyBalanceLimit();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getDailyUsedAmount();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.SystemEWallet} returns this
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.mcuc.stark.tony.SystemEWallet} returns this
*/
proto.mcuc.stark.tony.SystemEWallet.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcuc.stark.tony.SystemEWallet} returns this
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.mcuc.stark.tony.SystemEWallet} returns this
*/
proto.mcuc.stark.tony.SystemEWallet.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcuc.stark.tony.SystemEWallet} returns this
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string created_by = 4;
 * @return {string}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.SystemEWallet} returns this
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string updated_by = 5;
 * @return {string}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.SystemEWallet} returns this
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional EWalletName e_wallet_name = 6;
 * @return {!proto.mcuc.stark.tony.EWalletName}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.getEWalletName = function() {
  return /** @type {!proto.mcuc.stark.tony.EWalletName} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.mcuc.stark.tony.EWalletName} value
 * @return {!proto.mcuc.stark.tony.SystemEWallet} returns this
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.setEWalletName = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional EWalletStatus status = 7;
 * @return {!proto.mcuc.stark.tony.EWalletStatus}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.getStatus = function() {
  return /** @type {!proto.mcuc.stark.tony.EWalletStatus} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.mcuc.stark.tony.EWalletStatus} value
 * @return {!proto.mcuc.stark.tony.SystemEWallet} returns this
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional int64 merchant_id = 8;
 * @return {number}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.getMerchantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.SystemEWallet} returns this
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.setMerchantId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string account_phone_number = 9;
 * @return {string}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.getAccountPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.SystemEWallet} returns this
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.setAccountPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string account_name = 10;
 * @return {string}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.getAccountName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.tony.SystemEWallet} returns this
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.setAccountName = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional uint64 balance = 11;
 * @return {number}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.SystemEWallet} returns this
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.setBalance = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 daily_balance = 12;
 * @return {number}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.getDailyBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.SystemEWallet} returns this
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.setDailyBalance = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional uint64 daily_balance_limit = 13;
 * @return {number}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.getDailyBalanceLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.SystemEWallet} returns this
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.setDailyBalanceLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 daily_used_amount = 14;
 * @return {number}
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.getDailyUsedAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.tony.SystemEWallet} returns this
 */
proto.mcuc.stark.tony.SystemEWallet.prototype.setDailyUsedAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * @enum {number}
 */
proto.mcuc.stark.tony.EWalletName = {
  EWALLET_NAME_UNSPECIFIED: 0,
  MOMO: 1,
  ZALOPAY: 2
};

/**
 * @enum {number}
 */
proto.mcuc.stark.tony.EWalletStatus = {
  EWALLET_STATUS_UNSPECIFIED: 0,
  EWALLET_ACTIVE: 1,
  EWALLET_IN_ACTIVE: 2
};

goog.object.extend(exports, proto.mcuc.stark.tony);
