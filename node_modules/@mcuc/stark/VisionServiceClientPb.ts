/**
 * @fileoverview gRPC-Web generated client stub for mcuc.stark.vision
 * @enhanceable
 * @public
 */

// GENERATED CODE -- DO NOT EDIT!


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as stark_api_vision_pb from './vision_pb';


export class VisionClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname;
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodInfoGetPaymentDetail = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_vision_pb.GetPaymentDetailReply,
    (request: stark_api_vision_pb.GetPaymentDetailRequest) => {
      return request.serializeBinary();
    },
    stark_api_vision_pb.GetPaymentDetailReply.deserializeBinary
  );

  getPaymentDetail(
    request: stark_api_vision_pb.GetPaymentDetailRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_vision_pb.GetPaymentDetailReply>;

  getPaymentDetail(
    request: stark_api_vision_pb.GetPaymentDetailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_vision_pb.GetPaymentDetailReply) => void): grpcWeb.ClientReadableStream<stark_api_vision_pb.GetPaymentDetailReply>;

  getPaymentDetail(
    request: stark_api_vision_pb.GetPaymentDetailRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_vision_pb.GetPaymentDetailReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.vision.Vision/GetPaymentDetail',
        request,
        metadata || {},
        this.methodInfoGetPaymentDetail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.vision.Vision/GetPaymentDetail',
    request,
    metadata || {},
    this.methodInfoGetPaymentDetail);
  }

  methodInfoListPayments = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_vision_pb.ListPaymentsReply,
    (request: stark_api_vision_pb.ListPaymentsRequest) => {
      return request.serializeBinary();
    },
    stark_api_vision_pb.ListPaymentsReply.deserializeBinary
  );

  listPayments(
    request: stark_api_vision_pb.ListPaymentsRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_vision_pb.ListPaymentsReply>;

  listPayments(
    request: stark_api_vision_pb.ListPaymentsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_vision_pb.ListPaymentsReply) => void): grpcWeb.ClientReadableStream<stark_api_vision_pb.ListPaymentsReply>;

  listPayments(
    request: stark_api_vision_pb.ListPaymentsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_vision_pb.ListPaymentsReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.vision.Vision/ListPayments',
        request,
        metadata || {},
        this.methodInfoListPayments,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.vision.Vision/ListPayments',
    request,
    metadata || {},
    this.methodInfoListPayments);
  }

  methodInfoGetPaymentInfoByPaymentCode = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_vision_pb.GetPaymentInfoByPaymentCodeReply,
    (request: stark_api_vision_pb.GetPaymentInfoByPaymentCodeRequest) => {
      return request.serializeBinary();
    },
    stark_api_vision_pb.GetPaymentInfoByPaymentCodeReply.deserializeBinary
  );

  getPaymentInfoByPaymentCode(
    request: stark_api_vision_pb.GetPaymentInfoByPaymentCodeRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_vision_pb.GetPaymentInfoByPaymentCodeReply>;

  getPaymentInfoByPaymentCode(
    request: stark_api_vision_pb.GetPaymentInfoByPaymentCodeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_vision_pb.GetPaymentInfoByPaymentCodeReply) => void): grpcWeb.ClientReadableStream<stark_api_vision_pb.GetPaymentInfoByPaymentCodeReply>;

  getPaymentInfoByPaymentCode(
    request: stark_api_vision_pb.GetPaymentInfoByPaymentCodeRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_vision_pb.GetPaymentInfoByPaymentCodeReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.vision.Vision/GetPaymentInfoByPaymentCode',
        request,
        metadata || {},
        this.methodInfoGetPaymentInfoByPaymentCode,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.vision.Vision/GetPaymentInfoByPaymentCode',
    request,
    metadata || {},
    this.methodInfoGetPaymentInfoByPaymentCode);
  }

}

