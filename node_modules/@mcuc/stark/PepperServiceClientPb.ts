/**
 * @fileoverview gRPC-Web generated client stub for mcuc.stark.pepper
 * @enhanceable
 * @public
 */

// GENERATED CODE -- DO NOT EDIT!


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as stark_api_pepper_pb from './pepper_pb';


export class PepperClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname;
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodInfoGetBankPaymentCode = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.GetBankPaymentCodeReply,
    (request: stark_api_pepper_pb.GetBankPaymentCodeRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.GetBankPaymentCodeReply.deserializeBinary
  );

  getBankPaymentCode(
    request: stark_api_pepper_pb.GetBankPaymentCodeRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.GetBankPaymentCodeReply>;

  getBankPaymentCode(
    request: stark_api_pepper_pb.GetBankPaymentCodeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.GetBankPaymentCodeReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.GetBankPaymentCodeReply>;

  getBankPaymentCode(
    request: stark_api_pepper_pb.GetBankPaymentCodeRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.GetBankPaymentCodeReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/GetBankPaymentCode',
        request,
        metadata || {},
        this.methodInfoGetBankPaymentCode,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/GetBankPaymentCode',
    request,
    metadata || {},
    this.methodInfoGetBankPaymentCode);
  }

  methodInfoCreateBankingWithdraw = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.CreateBankingWithdrawReply,
    (request: stark_api_pepper_pb.CreateBankingWithdrawRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.CreateBankingWithdrawReply.deserializeBinary
  );

  createBankingWithdraw(
    request: stark_api_pepper_pb.CreateBankingWithdrawRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.CreateBankingWithdrawReply>;

  createBankingWithdraw(
    request: stark_api_pepper_pb.CreateBankingWithdrawRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.CreateBankingWithdrawReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.CreateBankingWithdrawReply>;

  createBankingWithdraw(
    request: stark_api_pepper_pb.CreateBankingWithdrawRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.CreateBankingWithdrawReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/CreateBankingWithdraw',
        request,
        metadata || {},
        this.methodInfoCreateBankingWithdraw,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/CreateBankingWithdraw',
    request,
    metadata || {},
    this.methodInfoCreateBankingWithdraw);
  }

  methodInfoCancelBankingWithdraw = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.CancelBankingWithdrawReply,
    (request: stark_api_pepper_pb.CancelBankingWithdrawRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.CancelBankingWithdrawReply.deserializeBinary
  );

  cancelBankingWithdraw(
    request: stark_api_pepper_pb.CancelBankingWithdrawRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.CancelBankingWithdrawReply>;

  cancelBankingWithdraw(
    request: stark_api_pepper_pb.CancelBankingWithdrawRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.CancelBankingWithdrawReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.CancelBankingWithdrawReply>;

  cancelBankingWithdraw(
    request: stark_api_pepper_pb.CancelBankingWithdrawRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.CancelBankingWithdrawReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/CancelBankingWithdraw',
        request,
        metadata || {},
        this.methodInfoCancelBankingWithdraw,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/CancelBankingWithdraw',
    request,
    metadata || {},
    this.methodInfoCancelBankingWithdraw);
  }

  methodInfoCreateBankingTopUp = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.CreateBankingTopUpReply,
    (request: stark_api_pepper_pb.CreateBankingTopUpRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.CreateBankingTopUpReply.deserializeBinary
  );

  createBankingTopUp(
    request: stark_api_pepper_pb.CreateBankingTopUpRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.CreateBankingTopUpReply>;

  createBankingTopUp(
    request: stark_api_pepper_pb.CreateBankingTopUpRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.CreateBankingTopUpReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.CreateBankingTopUpReply>;

  createBankingTopUp(
    request: stark_api_pepper_pb.CreateBankingTopUpRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.CreateBankingTopUpReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/CreateBankingTopUp',
        request,
        metadata || {},
        this.methodInfoCreateBankingTopUp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/CreateBankingTopUp',
    request,
    metadata || {},
    this.methodInfoCreateBankingTopUp);
  }

  methodInfoApproveBankingTopUp = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.ApproveBankingTopUpReply,
    (request: stark_api_pepper_pb.ApproveBankingTopUpRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.ApproveBankingTopUpReply.deserializeBinary
  );

  approveBankingTopUp(
    request: stark_api_pepper_pb.ApproveBankingTopUpRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.ApproveBankingTopUpReply>;

  approveBankingTopUp(
    request: stark_api_pepper_pb.ApproveBankingTopUpRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.ApproveBankingTopUpReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.ApproveBankingTopUpReply>;

  approveBankingTopUp(
    request: stark_api_pepper_pb.ApproveBankingTopUpRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.ApproveBankingTopUpReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/ApproveBankingTopUp',
        request,
        metadata || {},
        this.methodInfoApproveBankingTopUp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/ApproveBankingTopUp',
    request,
    metadata || {},
    this.methodInfoApproveBankingTopUp);
  }

  methodInfoRejectBankingTopUp = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.RejectBankingTopUpReply,
    (request: stark_api_pepper_pb.RejectBankingTopUpRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.RejectBankingTopUpReply.deserializeBinary
  );

  rejectBankingTopUp(
    request: stark_api_pepper_pb.RejectBankingTopUpRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.RejectBankingTopUpReply>;

  rejectBankingTopUp(
    request: stark_api_pepper_pb.RejectBankingTopUpRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.RejectBankingTopUpReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.RejectBankingTopUpReply>;

  rejectBankingTopUp(
    request: stark_api_pepper_pb.RejectBankingTopUpRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.RejectBankingTopUpReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/RejectBankingTopUp',
        request,
        metadata || {},
        this.methodInfoRejectBankingTopUp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/RejectBankingTopUp',
    request,
    metadata || {},
    this.methodInfoRejectBankingTopUp);
  }

  methodInfoListSystemBankAccountByPaymentInfo = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.ListSystemBankAccountByPaymentInfoReply,
    (request: stark_api_pepper_pb.ListSystemBankAccountByPaymentInfoRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.ListSystemBankAccountByPaymentInfoReply.deserializeBinary
  );

  listSystemBankAccountByPaymentInfo(
    request: stark_api_pepper_pb.ListSystemBankAccountByPaymentInfoRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.ListSystemBankAccountByPaymentInfoReply>;

  listSystemBankAccountByPaymentInfo(
    request: stark_api_pepper_pb.ListSystemBankAccountByPaymentInfoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.ListSystemBankAccountByPaymentInfoReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.ListSystemBankAccountByPaymentInfoReply>;

  listSystemBankAccountByPaymentInfo(
    request: stark_api_pepper_pb.ListSystemBankAccountByPaymentInfoRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.ListSystemBankAccountByPaymentInfoReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/ListSystemBankAccountByPaymentInfo',
        request,
        metadata || {},
        this.methodInfoListSystemBankAccountByPaymentInfo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/ListSystemBankAccountByPaymentInfo',
    request,
    metadata || {},
    this.methodInfoListSystemBankAccountByPaymentInfo);
  }

  methodInfoApproveBankingWithdraw = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.ApproveBankingWithdrawReply,
    (request: stark_api_pepper_pb.ApproveBankingWithdrawRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.ApproveBankingWithdrawReply.deserializeBinary
  );

  approveBankingWithdraw(
    request: stark_api_pepper_pb.ApproveBankingWithdrawRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.ApproveBankingWithdrawReply>;

  approveBankingWithdraw(
    request: stark_api_pepper_pb.ApproveBankingWithdrawRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.ApproveBankingWithdrawReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.ApproveBankingWithdrawReply>;

  approveBankingWithdraw(
    request: stark_api_pepper_pb.ApproveBankingWithdrawRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.ApproveBankingWithdrawReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/ApproveBankingWithdraw',
        request,
        metadata || {},
        this.methodInfoApproveBankingWithdraw,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/ApproveBankingWithdraw',
    request,
    metadata || {},
    this.methodInfoApproveBankingWithdraw);
  }

  methodInfoRejectBankingWithdraw = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.RejectBankingWithdrawReply,
    (request: stark_api_pepper_pb.RejectBankingWithdrawRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.RejectBankingWithdrawReply.deserializeBinary
  );

  rejectBankingWithdraw(
    request: stark_api_pepper_pb.RejectBankingWithdrawRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.RejectBankingWithdrawReply>;

  rejectBankingWithdraw(
    request: stark_api_pepper_pb.RejectBankingWithdrawRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.RejectBankingWithdrawReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.RejectBankingWithdrawReply>;

  rejectBankingWithdraw(
    request: stark_api_pepper_pb.RejectBankingWithdrawRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.RejectBankingWithdrawReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/RejectBankingWithdraw',
        request,
        metadata || {},
        this.methodInfoRejectBankingWithdraw,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/RejectBankingWithdraw',
    request,
    metadata || {},
    this.methodInfoRejectBankingWithdraw);
  }

  methodInfoSubmitBankingWithdraw = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.SubmitBankingWithdrawReply,
    (request: stark_api_pepper_pb.SubmitBankingWithdrawRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.SubmitBankingWithdrawReply.deserializeBinary
  );

  submitBankingWithdraw(
    request: stark_api_pepper_pb.SubmitBankingWithdrawRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.SubmitBankingWithdrawReply>;

  submitBankingWithdraw(
    request: stark_api_pepper_pb.SubmitBankingWithdrawRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.SubmitBankingWithdrawReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.SubmitBankingWithdrawReply>;

  submitBankingWithdraw(
    request: stark_api_pepper_pb.SubmitBankingWithdrawRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.SubmitBankingWithdrawReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/SubmitBankingWithdraw',
        request,
        metadata || {},
        this.methodInfoSubmitBankingWithdraw,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/SubmitBankingWithdraw',
    request,
    metadata || {},
    this.methodInfoSubmitBankingWithdraw);
  }

  methodInfoGetIsMerchantUserBankAccountVerified = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.GetIsMerchantUserBankAccountVerifiedReply,
    (request: stark_api_pepper_pb.GetIsMerchantUserBankAccountVerifiedRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.GetIsMerchantUserBankAccountVerifiedReply.deserializeBinary
  );

  getIsMerchantUserBankAccountVerified(
    request: stark_api_pepper_pb.GetIsMerchantUserBankAccountVerifiedRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.GetIsMerchantUserBankAccountVerifiedReply>;

  getIsMerchantUserBankAccountVerified(
    request: stark_api_pepper_pb.GetIsMerchantUserBankAccountVerifiedRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.GetIsMerchantUserBankAccountVerifiedReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.GetIsMerchantUserBankAccountVerifiedReply>;

  getIsMerchantUserBankAccountVerified(
    request: stark_api_pepper_pb.GetIsMerchantUserBankAccountVerifiedRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.GetIsMerchantUserBankAccountVerifiedReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/GetIsMerchantUserBankAccountVerified',
        request,
        metadata || {},
        this.methodInfoGetIsMerchantUserBankAccountVerified,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/GetIsMerchantUserBankAccountVerified',
    request,
    metadata || {},
    this.methodInfoGetIsMerchantUserBankAccountVerified);
  }

  methodInfoListSystemBankAccounts = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.ListSystemBankAccountsReply,
    (request: stark_api_pepper_pb.ListSystemBankAccountsRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.ListSystemBankAccountsReply.deserializeBinary
  );

  listSystemBankAccounts(
    request: stark_api_pepper_pb.ListSystemBankAccountsRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.ListSystemBankAccountsReply>;

  listSystemBankAccounts(
    request: stark_api_pepper_pb.ListSystemBankAccountsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.ListSystemBankAccountsReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.ListSystemBankAccountsReply>;

  listSystemBankAccounts(
    request: stark_api_pepper_pb.ListSystemBankAccountsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.ListSystemBankAccountsReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/ListSystemBankAccounts',
        request,
        metadata || {},
        this.methodInfoListSystemBankAccounts,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/ListSystemBankAccounts',
    request,
    metadata || {},
    this.methodInfoListSystemBankAccounts);
  }

  methodInfoCreateSystemBankAccount = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.CreateSystemBankAccountReply,
    (request: stark_api_pepper_pb.CreateSystemBankAccountRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.CreateSystemBankAccountReply.deserializeBinary
  );

  createSystemBankAccount(
    request: stark_api_pepper_pb.CreateSystemBankAccountRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.CreateSystemBankAccountReply>;

  createSystemBankAccount(
    request: stark_api_pepper_pb.CreateSystemBankAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.CreateSystemBankAccountReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.CreateSystemBankAccountReply>;

  createSystemBankAccount(
    request: stark_api_pepper_pb.CreateSystemBankAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.CreateSystemBankAccountReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/CreateSystemBankAccount',
        request,
        metadata || {},
        this.methodInfoCreateSystemBankAccount,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/CreateSystemBankAccount',
    request,
    metadata || {},
    this.methodInfoCreateSystemBankAccount);
  }

  methodInfoVerifyMerchantUserBankAccount = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.VerifyMerchantUserBankAccountReply,
    (request: stark_api_pepper_pb.VerifyMerchantUserBankAccountRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.VerifyMerchantUserBankAccountReply.deserializeBinary
  );

  verifyMerchantUserBankAccount(
    request: stark_api_pepper_pb.VerifyMerchantUserBankAccountRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.VerifyMerchantUserBankAccountReply>;

  verifyMerchantUserBankAccount(
    request: stark_api_pepper_pb.VerifyMerchantUserBankAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.VerifyMerchantUserBankAccountReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.VerifyMerchantUserBankAccountReply>;

  verifyMerchantUserBankAccount(
    request: stark_api_pepper_pb.VerifyMerchantUserBankAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.VerifyMerchantUserBankAccountReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/VerifyMerchantUserBankAccount',
        request,
        metadata || {},
        this.methodInfoVerifyMerchantUserBankAccount,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/VerifyMerchantUserBankAccount',
    request,
    metadata || {},
    this.methodInfoVerifyMerchantUserBankAccount);
  }

  methodInfoValidateImportSystemBankAccount = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.ValidateImportSystemBankAccountReply,
    (request: stark_api_pepper_pb.ValidateImportSystemBankAccountRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.ValidateImportSystemBankAccountReply.deserializeBinary
  );

  validateImportSystemBankAccount(
    request: stark_api_pepper_pb.ValidateImportSystemBankAccountRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.ValidateImportSystemBankAccountReply>;

  validateImportSystemBankAccount(
    request: stark_api_pepper_pb.ValidateImportSystemBankAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.ValidateImportSystemBankAccountReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.ValidateImportSystemBankAccountReply>;

  validateImportSystemBankAccount(
    request: stark_api_pepper_pb.ValidateImportSystemBankAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.ValidateImportSystemBankAccountReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/ValidateImportSystemBankAccount',
        request,
        metadata || {},
        this.methodInfoValidateImportSystemBankAccount,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/ValidateImportSystemBankAccount',
    request,
    metadata || {},
    this.methodInfoValidateImportSystemBankAccount);
  }

  methodInfoImportSystemBankAccount = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.ImportSystemBankAccountReply,
    (request: stark_api_pepper_pb.ImportSystemBankAccountRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.ImportSystemBankAccountReply.deserializeBinary
  );

  importSystemBankAccount(
    request: stark_api_pepper_pb.ImportSystemBankAccountRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.ImportSystemBankAccountReply>;

  importSystemBankAccount(
    request: stark_api_pepper_pb.ImportSystemBankAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.ImportSystemBankAccountReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.ImportSystemBankAccountReply>;

  importSystemBankAccount(
    request: stark_api_pepper_pb.ImportSystemBankAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.ImportSystemBankAccountReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/ImportSystemBankAccount',
        request,
        metadata || {},
        this.methodInfoImportSystemBankAccount,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/ImportSystemBankAccount',
    request,
    metadata || {},
    this.methodInfoImportSystemBankAccount);
  }

  methodInfoUpdateSystemBankAccountStatus = new grpcWeb.AbstractClientBase.MethodInfo(
    stark_api_pepper_pb.UpdateSystemBankAccountStatusReply,
    (request: stark_api_pepper_pb.UpdateSystemBankAccountStatusRequest) => {
      return request.serializeBinary();
    },
    stark_api_pepper_pb.UpdateSystemBankAccountStatusReply.deserializeBinary
  );

  updateSystemBankAccountStatus(
    request: stark_api_pepper_pb.UpdateSystemBankAccountStatusRequest,
    metadata: grpcWeb.Metadata | null): Promise<stark_api_pepper_pb.UpdateSystemBankAccountStatusReply>;

  updateSystemBankAccountStatus(
    request: stark_api_pepper_pb.UpdateSystemBankAccountStatusRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.UpdateSystemBankAccountStatusReply) => void): grpcWeb.ClientReadableStream<stark_api_pepper_pb.UpdateSystemBankAccountStatusReply>;

  updateSystemBankAccountStatus(
    request: stark_api_pepper_pb.UpdateSystemBankAccountStatusRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.Error,
               response: stark_api_pepper_pb.UpdateSystemBankAccountStatusReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mcuc.stark.pepper.Pepper/UpdateSystemBankAccountStatus',
        request,
        metadata || {},
        this.methodInfoUpdateSystemBankAccountStatus,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mcuc.stark.pepper.Pepper/UpdateSystemBankAccountStatus',
    request,
    metadata || {},
    this.methodInfoUpdateSystemBankAccountStatus);
  }

}

