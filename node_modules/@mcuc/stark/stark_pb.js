// source: stark/stark.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var stark_api_morgan_pb = require('@mcuc/stark/morgan_pb.js');
goog.object.extend(proto, stark_api_morgan_pb);
var stark_api_pepper_pb = require('@mcuc/stark/pepper_pb.js');
goog.object.extend(proto, stark_api_pepper_pb);
var stark_api_tony_pb = require('@mcuc/stark/tony_pb.js');
goog.object.extend(proto, stark_api_tony_pb);
var stark_api_ultron_pb = require('@mcuc/stark/ultron_pb.js');
goog.object.extend(proto, stark_api_ultron_pb);
goog.exportSymbol('proto.mcuc.stark.CompletePaymentReply', null, global);
goog.exportSymbol('proto.mcuc.stark.CompletePaymentRequest', null, global);
goog.exportSymbol('proto.mcuc.stark.Currency', null, global);
goog.exportSymbol('proto.mcuc.stark.MethodType', null, global);
goog.exportSymbol('proto.mcuc.stark.Payment', null, global);
goog.exportSymbol('proto.mcuc.stark.PaymentDetail', null, global);
goog.exportSymbol('proto.mcuc.stark.PaymentDetail.PayloadCase', null, global);
goog.exportSymbol('proto.mcuc.stark.PaymentType', null, global);
goog.exportSymbol('proto.mcuc.stark.PaymentWithDetail', null, global);
goog.exportSymbol('proto.mcuc.stark.Revision', null, global);
goog.exportSymbol('proto.mcuc.stark.Status', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.Payment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.Payment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.Payment.displayName = 'proto.mcuc.stark.Payment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.PaymentDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.mcuc.stark.PaymentDetail.oneofGroups_);
};
goog.inherits(proto.mcuc.stark.PaymentDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.PaymentDetail.displayName = 'proto.mcuc.stark.PaymentDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.PaymentWithDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.PaymentWithDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.PaymentWithDetail.displayName = 'proto.mcuc.stark.PaymentWithDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.Revision = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.Revision, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.Revision.displayName = 'proto.mcuc.stark.Revision';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.CompletePaymentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.CompletePaymentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.CompletePaymentRequest.displayName = 'proto.mcuc.stark.CompletePaymentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mcuc.stark.CompletePaymentReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mcuc.stark.CompletePaymentReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mcuc.stark.CompletePaymentReply.displayName = 'proto.mcuc.stark.CompletePaymentReply';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.Payment.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.Payment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.Payment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.Payment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdBy: jspb.Message.getFieldWithDefault(msg, 5, ""),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 6, ""),
    approvedBy: jspb.Message.getFieldWithDefault(msg, 7, ""),
    merchantId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    method: jspb.Message.getFieldWithDefault(msg, 9, 0),
    type: jspb.Message.getFieldWithDefault(msg, 10, 0),
    status: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.Payment}
 */
proto.mcuc.stark.Payment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.Payment;
  return proto.mcuc.stark.Payment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.Payment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.Payment}
 */
proto.mcuc.stark.Payment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setApprovedBy(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMerchantId(value);
      break;
    case 9:
      var value = /** @type {!proto.mcuc.stark.MethodType} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    case 10:
      var value = /** @type {!proto.mcuc.stark.PaymentType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 11:
      var value = /** @type {!proto.mcuc.stark.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.Payment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.Payment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.Payment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.Payment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUpdatedBy();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getApprovedBy();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMerchantId();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.mcuc.stark.Payment.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.Payment} returns this
 */
proto.mcuc.stark.Payment.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mcuc.stark.Payment.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.mcuc.stark.Payment} returns this
*/
proto.mcuc.stark.Payment.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcuc.stark.Payment} returns this
 */
proto.mcuc.stark.Payment.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcuc.stark.Payment.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mcuc.stark.Payment.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.mcuc.stark.Payment} returns this
*/
proto.mcuc.stark.Payment.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcuc.stark.Payment} returns this
 */
proto.mcuc.stark.Payment.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcuc.stark.Payment.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string created_by = 5;
 * @return {string}
 */
proto.mcuc.stark.Payment.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.Payment} returns this
 */
proto.mcuc.stark.Payment.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string updated_by = 6;
 * @return {string}
 */
proto.mcuc.stark.Payment.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.Payment} returns this
 */
proto.mcuc.stark.Payment.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string approved_by = 7;
 * @return {string}
 */
proto.mcuc.stark.Payment.prototype.getApprovedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.Payment} returns this
 */
proto.mcuc.stark.Payment.prototype.setApprovedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 merchant_id = 8;
 * @return {number}
 */
proto.mcuc.stark.Payment.prototype.getMerchantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.Payment} returns this
 */
proto.mcuc.stark.Payment.prototype.setMerchantId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional MethodType method = 9;
 * @return {!proto.mcuc.stark.MethodType}
 */
proto.mcuc.stark.Payment.prototype.getMethod = function() {
  return /** @type {!proto.mcuc.stark.MethodType} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.mcuc.stark.MethodType} value
 * @return {!proto.mcuc.stark.Payment} returns this
 */
proto.mcuc.stark.Payment.prototype.setMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional PaymentType type = 10;
 * @return {!proto.mcuc.stark.PaymentType}
 */
proto.mcuc.stark.Payment.prototype.getType = function() {
  return /** @type {!proto.mcuc.stark.PaymentType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.mcuc.stark.PaymentType} value
 * @return {!proto.mcuc.stark.Payment} returns this
 */
proto.mcuc.stark.Payment.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional Status status = 11;
 * @return {!proto.mcuc.stark.Status}
 */
proto.mcuc.stark.Payment.prototype.getStatus = function() {
  return /** @type {!proto.mcuc.stark.Status} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.mcuc.stark.Status} value
 * @return {!proto.mcuc.stark.Payment} returns this
 */
proto.mcuc.stark.Payment.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.mcuc.stark.PaymentDetail.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.mcuc.stark.PaymentDetail.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  BANKING: 1,
  E_WALLET: 2,
  TELCO: 3,
  CRYPTO: 4
};

/**
 * @return {proto.mcuc.stark.PaymentDetail.PayloadCase}
 */
proto.mcuc.stark.PaymentDetail.prototype.getPayloadCase = function() {
  return /** @type {proto.mcuc.stark.PaymentDetail.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.mcuc.stark.PaymentDetail.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.PaymentDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.PaymentDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.PaymentDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.PaymentDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    banking: (f = msg.getBanking()) && stark_api_pepper_pb.BankingPaymentDetail.toObject(includeInstance, f),
    eWallet: (f = msg.getEWallet()) && stark_api_tony_pb.EWalletPaymentDetail.toObject(includeInstance, f),
    telco: (f = msg.getTelco()) && stark_api_morgan_pb.TelcoPaymentDetail.toObject(includeInstance, f),
    crypto: (f = msg.getCrypto()) && stark_api_ultron_pb.CryptoPaymentDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.PaymentDetail}
 */
proto.mcuc.stark.PaymentDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.PaymentDetail;
  return proto.mcuc.stark.PaymentDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.PaymentDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.PaymentDetail}
 */
proto.mcuc.stark.PaymentDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new stark_api_pepper_pb.BankingPaymentDetail;
      reader.readMessage(value,stark_api_pepper_pb.BankingPaymentDetail.deserializeBinaryFromReader);
      msg.setBanking(value);
      break;
    case 2:
      var value = new stark_api_tony_pb.EWalletPaymentDetail;
      reader.readMessage(value,stark_api_tony_pb.EWalletPaymentDetail.deserializeBinaryFromReader);
      msg.setEWallet(value);
      break;
    case 3:
      var value = new stark_api_morgan_pb.TelcoPaymentDetail;
      reader.readMessage(value,stark_api_morgan_pb.TelcoPaymentDetail.deserializeBinaryFromReader);
      msg.setTelco(value);
      break;
    case 4:
      var value = new stark_api_ultron_pb.CryptoPaymentDetail;
      reader.readMessage(value,stark_api_ultron_pb.CryptoPaymentDetail.deserializeBinaryFromReader);
      msg.setCrypto(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.PaymentDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.PaymentDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.PaymentDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.PaymentDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBanking();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      stark_api_pepper_pb.BankingPaymentDetail.serializeBinaryToWriter
    );
  }
  f = message.getEWallet();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      stark_api_tony_pb.EWalletPaymentDetail.serializeBinaryToWriter
    );
  }
  f = message.getTelco();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      stark_api_morgan_pb.TelcoPaymentDetail.serializeBinaryToWriter
    );
  }
  f = message.getCrypto();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      stark_api_ultron_pb.CryptoPaymentDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional pepper.BankingPaymentDetail banking = 1;
 * @return {?proto.mcuc.stark.pepper.BankingPaymentDetail}
 */
proto.mcuc.stark.PaymentDetail.prototype.getBanking = function() {
  return /** @type{?proto.mcuc.stark.pepper.BankingPaymentDetail} */ (
    jspb.Message.getWrapperField(this, stark_api_pepper_pb.BankingPaymentDetail, 1));
};


/**
 * @param {?proto.mcuc.stark.pepper.BankingPaymentDetail|undefined} value
 * @return {!proto.mcuc.stark.PaymentDetail} returns this
*/
proto.mcuc.stark.PaymentDetail.prototype.setBanking = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.mcuc.stark.PaymentDetail.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcuc.stark.PaymentDetail} returns this
 */
proto.mcuc.stark.PaymentDetail.prototype.clearBanking = function() {
  return this.setBanking(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcuc.stark.PaymentDetail.prototype.hasBanking = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional tony.EWalletPaymentDetail e_wallet = 2;
 * @return {?proto.mcuc.stark.tony.EWalletPaymentDetail}
 */
proto.mcuc.stark.PaymentDetail.prototype.getEWallet = function() {
  return /** @type{?proto.mcuc.stark.tony.EWalletPaymentDetail} */ (
    jspb.Message.getWrapperField(this, stark_api_tony_pb.EWalletPaymentDetail, 2));
};


/**
 * @param {?proto.mcuc.stark.tony.EWalletPaymentDetail|undefined} value
 * @return {!proto.mcuc.stark.PaymentDetail} returns this
*/
proto.mcuc.stark.PaymentDetail.prototype.setEWallet = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.mcuc.stark.PaymentDetail.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcuc.stark.PaymentDetail} returns this
 */
proto.mcuc.stark.PaymentDetail.prototype.clearEWallet = function() {
  return this.setEWallet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcuc.stark.PaymentDetail.prototype.hasEWallet = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional morgan.TelcoPaymentDetail telco = 3;
 * @return {?proto.mcuc.stark.morgan.TelcoPaymentDetail}
 */
proto.mcuc.stark.PaymentDetail.prototype.getTelco = function() {
  return /** @type{?proto.mcuc.stark.morgan.TelcoPaymentDetail} */ (
    jspb.Message.getWrapperField(this, stark_api_morgan_pb.TelcoPaymentDetail, 3));
};


/**
 * @param {?proto.mcuc.stark.morgan.TelcoPaymentDetail|undefined} value
 * @return {!proto.mcuc.stark.PaymentDetail} returns this
*/
proto.mcuc.stark.PaymentDetail.prototype.setTelco = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.mcuc.stark.PaymentDetail.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcuc.stark.PaymentDetail} returns this
 */
proto.mcuc.stark.PaymentDetail.prototype.clearTelco = function() {
  return this.setTelco(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcuc.stark.PaymentDetail.prototype.hasTelco = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ultron.CryptoPaymentDetail crypto = 4;
 * @return {?proto.mcuc.stark.ultron.CryptoPaymentDetail}
 */
proto.mcuc.stark.PaymentDetail.prototype.getCrypto = function() {
  return /** @type{?proto.mcuc.stark.ultron.CryptoPaymentDetail} */ (
    jspb.Message.getWrapperField(this, stark_api_ultron_pb.CryptoPaymentDetail, 4));
};


/**
 * @param {?proto.mcuc.stark.ultron.CryptoPaymentDetail|undefined} value
 * @return {!proto.mcuc.stark.PaymentDetail} returns this
*/
proto.mcuc.stark.PaymentDetail.prototype.setCrypto = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.mcuc.stark.PaymentDetail.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcuc.stark.PaymentDetail} returns this
 */
proto.mcuc.stark.PaymentDetail.prototype.clearCrypto = function() {
  return this.setCrypto(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcuc.stark.PaymentDetail.prototype.hasCrypto = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.PaymentWithDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.PaymentWithDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.PaymentWithDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.PaymentWithDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    payment: (f = msg.getPayment()) && proto.mcuc.stark.Payment.toObject(includeInstance, f),
    paymentDetail: (f = msg.getPaymentDetail()) && proto.mcuc.stark.PaymentDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.PaymentWithDetail}
 */
proto.mcuc.stark.PaymentWithDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.PaymentWithDetail;
  return proto.mcuc.stark.PaymentWithDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.PaymentWithDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.PaymentWithDetail}
 */
proto.mcuc.stark.PaymentWithDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mcuc.stark.Payment;
      reader.readMessage(value,proto.mcuc.stark.Payment.deserializeBinaryFromReader);
      msg.setPayment(value);
      break;
    case 2:
      var value = new proto.mcuc.stark.PaymentDetail;
      reader.readMessage(value,proto.mcuc.stark.PaymentDetail.deserializeBinaryFromReader);
      msg.setPaymentDetail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.PaymentWithDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.PaymentWithDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.PaymentWithDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.PaymentWithDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mcuc.stark.Payment.serializeBinaryToWriter
    );
  }
  f = message.getPaymentDetail();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mcuc.stark.PaymentDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional Payment payment = 1;
 * @return {?proto.mcuc.stark.Payment}
 */
proto.mcuc.stark.PaymentWithDetail.prototype.getPayment = function() {
  return /** @type{?proto.mcuc.stark.Payment} */ (
    jspb.Message.getWrapperField(this, proto.mcuc.stark.Payment, 1));
};


/**
 * @param {?proto.mcuc.stark.Payment|undefined} value
 * @return {!proto.mcuc.stark.PaymentWithDetail} returns this
*/
proto.mcuc.stark.PaymentWithDetail.prototype.setPayment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcuc.stark.PaymentWithDetail} returns this
 */
proto.mcuc.stark.PaymentWithDetail.prototype.clearPayment = function() {
  return this.setPayment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcuc.stark.PaymentWithDetail.prototype.hasPayment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PaymentDetail payment_detail = 2;
 * @return {?proto.mcuc.stark.PaymentDetail}
 */
proto.mcuc.stark.PaymentWithDetail.prototype.getPaymentDetail = function() {
  return /** @type{?proto.mcuc.stark.PaymentDetail} */ (
    jspb.Message.getWrapperField(this, proto.mcuc.stark.PaymentDetail, 2));
};


/**
 * @param {?proto.mcuc.stark.PaymentDetail|undefined} value
 * @return {!proto.mcuc.stark.PaymentWithDetail} returns this
*/
proto.mcuc.stark.PaymentWithDetail.prototype.setPaymentDetail = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcuc.stark.PaymentWithDetail} returns this
 */
proto.mcuc.stark.PaymentWithDetail.prototype.clearPaymentDetail = function() {
  return this.setPaymentDetail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcuc.stark.PaymentWithDetail.prototype.hasPaymentDetail = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.Revision.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.Revision.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.Revision} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.Revision.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdBy: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paymentId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0),
    note: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.Revision}
 */
proto.mcuc.stark.Revision.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.Revision;
  return proto.mcuc.stark.Revision.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.Revision} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.Revision}
 */
proto.mcuc.stark.Revision.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPaymentId(value);
      break;
    case 5:
      var value = /** @type {!proto.mcuc.stark.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.Revision.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.Revision.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.Revision} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.Revision.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPaymentId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.mcuc.stark.Revision.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.Revision} returns this
 */
proto.mcuc.stark.Revision.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mcuc.stark.Revision.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.mcuc.stark.Revision} returns this
*/
proto.mcuc.stark.Revision.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcuc.stark.Revision} returns this
 */
proto.mcuc.stark.Revision.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcuc.stark.Revision.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string created_by = 3;
 * @return {string}
 */
proto.mcuc.stark.Revision.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.Revision} returns this
 */
proto.mcuc.stark.Revision.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 payment_id = 4;
 * @return {number}
 */
proto.mcuc.stark.Revision.prototype.getPaymentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.Revision} returns this
 */
proto.mcuc.stark.Revision.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional Status status = 5;
 * @return {!proto.mcuc.stark.Status}
 */
proto.mcuc.stark.Revision.prototype.getStatus = function() {
  return /** @type {!proto.mcuc.stark.Status} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.mcuc.stark.Status} value
 * @return {!proto.mcuc.stark.Revision} returns this
 */
proto.mcuc.stark.Revision.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional string note = 6;
 * @return {string}
 */
proto.mcuc.stark.Revision.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.mcuc.stark.Revision} returns this
 */
proto.mcuc.stark.Revision.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.CompletePaymentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.CompletePaymentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.CompletePaymentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.CompletePaymentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    paymentMethod: jspb.Message.getFieldWithDefault(msg, 2, 0),
    paymentType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    paymentStatus: jspb.Message.getFieldWithDefault(msg, 4, 0),
    paymentDetail: (f = msg.getPaymentDetail()) && proto.mcuc.stark.PaymentDetail.toObject(includeInstance, f),
    mexCurrentBalance: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.CompletePaymentRequest}
 */
proto.mcuc.stark.CompletePaymentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.CompletePaymentRequest;
  return proto.mcuc.stark.CompletePaymentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.CompletePaymentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.CompletePaymentRequest}
 */
proto.mcuc.stark.CompletePaymentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPaymentId(value);
      break;
    case 2:
      var value = /** @type {!proto.mcuc.stark.MethodType} */ (reader.readEnum());
      msg.setPaymentMethod(value);
      break;
    case 3:
      var value = /** @type {!proto.mcuc.stark.PaymentType} */ (reader.readEnum());
      msg.setPaymentType(value);
      break;
    case 4:
      var value = /** @type {!proto.mcuc.stark.Status} */ (reader.readEnum());
      msg.setPaymentStatus(value);
      break;
    case 5:
      var value = new proto.mcuc.stark.PaymentDetail;
      reader.readMessage(value,proto.mcuc.stark.PaymentDetail.deserializeBinaryFromReader);
      msg.setPaymentDetail(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMexCurrentBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.CompletePaymentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.CompletePaymentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.CompletePaymentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.CompletePaymentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPaymentMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPaymentType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getPaymentStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getPaymentDetail();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.mcuc.stark.PaymentDetail.serializeBinaryToWriter
    );
  }
  f = message.getMexCurrentBalance();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
};


/**
 * optional int64 payment_id = 1;
 * @return {number}
 */
proto.mcuc.stark.CompletePaymentRequest.prototype.getPaymentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.CompletePaymentRequest} returns this
 */
proto.mcuc.stark.CompletePaymentRequest.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional MethodType payment_method = 2;
 * @return {!proto.mcuc.stark.MethodType}
 */
proto.mcuc.stark.CompletePaymentRequest.prototype.getPaymentMethod = function() {
  return /** @type {!proto.mcuc.stark.MethodType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mcuc.stark.MethodType} value
 * @return {!proto.mcuc.stark.CompletePaymentRequest} returns this
 */
proto.mcuc.stark.CompletePaymentRequest.prototype.setPaymentMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional PaymentType payment_type = 3;
 * @return {!proto.mcuc.stark.PaymentType}
 */
proto.mcuc.stark.CompletePaymentRequest.prototype.getPaymentType = function() {
  return /** @type {!proto.mcuc.stark.PaymentType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.mcuc.stark.PaymentType} value
 * @return {!proto.mcuc.stark.CompletePaymentRequest} returns this
 */
proto.mcuc.stark.CompletePaymentRequest.prototype.setPaymentType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Status payment_status = 4;
 * @return {!proto.mcuc.stark.Status}
 */
proto.mcuc.stark.CompletePaymentRequest.prototype.getPaymentStatus = function() {
  return /** @type {!proto.mcuc.stark.Status} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.mcuc.stark.Status} value
 * @return {!proto.mcuc.stark.CompletePaymentRequest} returns this
 */
proto.mcuc.stark.CompletePaymentRequest.prototype.setPaymentStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional PaymentDetail payment_detail = 5;
 * @return {?proto.mcuc.stark.PaymentDetail}
 */
proto.mcuc.stark.CompletePaymentRequest.prototype.getPaymentDetail = function() {
  return /** @type{?proto.mcuc.stark.PaymentDetail} */ (
    jspb.Message.getWrapperField(this, proto.mcuc.stark.PaymentDetail, 5));
};


/**
 * @param {?proto.mcuc.stark.PaymentDetail|undefined} value
 * @return {!proto.mcuc.stark.CompletePaymentRequest} returns this
*/
proto.mcuc.stark.CompletePaymentRequest.prototype.setPaymentDetail = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mcuc.stark.CompletePaymentRequest} returns this
 */
proto.mcuc.stark.CompletePaymentRequest.prototype.clearPaymentDetail = function() {
  return this.setPaymentDetail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mcuc.stark.CompletePaymentRequest.prototype.hasPaymentDetail = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 mex_current_balance = 6;
 * @return {number}
 */
proto.mcuc.stark.CompletePaymentRequest.prototype.getMexCurrentBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.mcuc.stark.CompletePaymentRequest} returns this
 */
proto.mcuc.stark.CompletePaymentRequest.prototype.setMexCurrentBalance = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mcuc.stark.CompletePaymentReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mcuc.stark.CompletePaymentReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mcuc.stark.CompletePaymentReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.CompletePaymentReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mcuc.stark.CompletePaymentReply}
 */
proto.mcuc.stark.CompletePaymentReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mcuc.stark.CompletePaymentReply;
  return proto.mcuc.stark.CompletePaymentReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mcuc.stark.CompletePaymentReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mcuc.stark.CompletePaymentReply}
 */
proto.mcuc.stark.CompletePaymentReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mcuc.stark.CompletePaymentReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mcuc.stark.CompletePaymentReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mcuc.stark.CompletePaymentReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mcuc.stark.CompletePaymentReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.mcuc.stark.PaymentType = {
  PAYMENT_UNSPECIFIED: 0,
  TOPUP: 1,
  WITHDRAW: 2
};

/**
 * @enum {number}
 */
proto.mcuc.stark.MethodType = {
  METHOD_UNSPECIFIED: 0,
  T: 1,
  I: 2,
  P: 3,
  E: 4,
  C: 5
};

/**
 * @enum {number}
 */
proto.mcuc.stark.Status = {
  STATUS_UNSPECIFIED: 0,
  CREATED: 1,
  CANCELED: 2,
  REJECTING: 3,
  REJECTED: 4,
  REJECT_FAILED: 5,
  APPROVED: 6,
  APPROVE_FAILED: 7,
  SUBMITTED: 8,
  SUBMIT_FAILED: 9,
  COMPLETED: 10,
  SUBMITTING: 11
};

/**
 * @enum {number}
 */
proto.mcuc.stark.Currency = {
  CURRENCY_UNSPECIFIED: 0,
  VND: 1,
  USDT: 2
};

goog.object.extend(exports, proto.mcuc.stark);
