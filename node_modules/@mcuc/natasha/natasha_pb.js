// source: natasha/natasha.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var validate_validate_pb = require('@greyhole/validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.natasha.BankType', null, global);
goog.exportSymbol('proto.natasha.CancelVoucherReply', null, global);
goog.exportSymbol('proto.natasha.CancelVoucherRequest', null, global);
goog.exportSymbol('proto.natasha.CreateMerchantReply', null, global);
goog.exportSymbol('proto.natasha.CreateMerchantRequest', null, global);
goog.exportSymbol('proto.natasha.CreateVoucherReply', null, global);
goog.exportSymbol('proto.natasha.CreateVoucherRequest', null, global);
goog.exportSymbol('proto.natasha.GetMerchantBalanceReply', null, global);
goog.exportSymbol('proto.natasha.GetMerchantBalanceRequest', null, global);
goog.exportSymbol('proto.natasha.GetMerchantReply', null, global);
goog.exportSymbol('proto.natasha.GetMerchantRequest', null, global);
goog.exportSymbol('proto.natasha.GetVoucherReply', null, global);
goog.exportSymbol('proto.natasha.GetVoucherRequest', null, global);
goog.exportSymbol('proto.natasha.ListMerchantsReply', null, global);
goog.exportSymbol('proto.natasha.ListMerchantsRequest', null, global);
goog.exportSymbol('proto.natasha.ListPaymentsReply', null, global);
goog.exportSymbol('proto.natasha.ListPaymentsRequest', null, global);
goog.exportSymbol('proto.natasha.ListVouchersReply', null, global);
goog.exportSymbol('proto.natasha.ListVouchersRequest', null, global);
goog.exportSymbol('proto.natasha.MakePaymentReply', null, global);
goog.exportSymbol('proto.natasha.MakePaymentRequest', null, global);
goog.exportSymbol('proto.natasha.Merchant', null, global);
goog.exportSymbol('proto.natasha.NotifyRejectPaymentReply', null, global);
goog.exportSymbol('proto.natasha.NotifyRejectPaymentRequest', null, global);
goog.exportSymbol('proto.natasha.Payment', null, global);
goog.exportSymbol('proto.natasha.PaymentType', null, global);
goog.exportSymbol('proto.natasha.SubmitVoucherReply', null, global);
goog.exportSymbol('proto.natasha.SubmitVoucherRequest', null, global);
goog.exportSymbol('proto.natasha.UpdateMerchantReply', null, global);
goog.exportSymbol('proto.natasha.UpdateMerchantRequest', null, global);
goog.exportSymbol('proto.natasha.Voucher', null, global);
goog.exportSymbol('proto.natasha.VoucherStatus', null, global);
goog.exportSymbol('proto.natasha.VoucherSummary', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.CreateMerchantRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.CreateMerchantRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.CreateMerchantRequest.displayName = 'proto.natasha.CreateMerchantRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.CreateMerchantReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.CreateMerchantReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.CreateMerchantReply.displayName = 'proto.natasha.CreateMerchantReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.UpdateMerchantRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.UpdateMerchantRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.UpdateMerchantRequest.displayName = 'proto.natasha.UpdateMerchantRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.UpdateMerchantReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.UpdateMerchantReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.UpdateMerchantReply.displayName = 'proto.natasha.UpdateMerchantReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.ListMerchantsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.ListMerchantsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.ListMerchantsRequest.displayName = 'proto.natasha.ListMerchantsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.ListMerchantsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.natasha.ListMerchantsReply.repeatedFields_, null);
};
goog.inherits(proto.natasha.ListMerchantsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.ListMerchantsReply.displayName = 'proto.natasha.ListMerchantsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.GetMerchantRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.GetMerchantRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.GetMerchantRequest.displayName = 'proto.natasha.GetMerchantRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.GetMerchantReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.GetMerchantReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.GetMerchantReply.displayName = 'proto.natasha.GetMerchantReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.Merchant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.Merchant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.Merchant.displayName = 'proto.natasha.Merchant';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.MakePaymentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.MakePaymentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.MakePaymentRequest.displayName = 'proto.natasha.MakePaymentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.MakePaymentReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.MakePaymentReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.MakePaymentReply.displayName = 'proto.natasha.MakePaymentReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.GetMerchantBalanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.GetMerchantBalanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.GetMerchantBalanceRequest.displayName = 'proto.natasha.GetMerchantBalanceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.GetMerchantBalanceReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.GetMerchantBalanceReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.GetMerchantBalanceReply.displayName = 'proto.natasha.GetMerchantBalanceReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.NotifyRejectPaymentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.NotifyRejectPaymentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.NotifyRejectPaymentRequest.displayName = 'proto.natasha.NotifyRejectPaymentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.NotifyRejectPaymentReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.NotifyRejectPaymentReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.NotifyRejectPaymentReply.displayName = 'proto.natasha.NotifyRejectPaymentReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.CreateVoucherRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.CreateVoucherRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.CreateVoucherRequest.displayName = 'proto.natasha.CreateVoucherRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.CreateVoucherReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.CreateVoucherReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.CreateVoucherReply.displayName = 'proto.natasha.CreateVoucherReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.SubmitVoucherRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.SubmitVoucherRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.SubmitVoucherRequest.displayName = 'proto.natasha.SubmitVoucherRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.SubmitVoucherReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.SubmitVoucherReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.SubmitVoucherReply.displayName = 'proto.natasha.SubmitVoucherReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.CancelVoucherRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.CancelVoucherRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.CancelVoucherRequest.displayName = 'proto.natasha.CancelVoucherRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.CancelVoucherReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.CancelVoucherReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.CancelVoucherReply.displayName = 'proto.natasha.CancelVoucherReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.ListVouchersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.natasha.ListVouchersRequest.repeatedFields_, null);
};
goog.inherits(proto.natasha.ListVouchersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.ListVouchersRequest.displayName = 'proto.natasha.ListVouchersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.ListVouchersReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.natasha.ListVouchersReply.repeatedFields_, null);
};
goog.inherits(proto.natasha.ListVouchersReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.ListVouchersReply.displayName = 'proto.natasha.ListVouchersReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.GetVoucherRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.GetVoucherRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.GetVoucherRequest.displayName = 'proto.natasha.GetVoucherRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.GetVoucherReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.GetVoucherReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.GetVoucherReply.displayName = 'proto.natasha.GetVoucherReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.ListPaymentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.natasha.ListPaymentsRequest.repeatedFields_, null);
};
goog.inherits(proto.natasha.ListPaymentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.ListPaymentsRequest.displayName = 'proto.natasha.ListPaymentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.ListPaymentsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.natasha.ListPaymentsReply.repeatedFields_, null);
};
goog.inherits(proto.natasha.ListPaymentsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.ListPaymentsReply.displayName = 'proto.natasha.ListPaymentsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.Payment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.Payment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.Payment.displayName = 'proto.natasha.Payment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.VoucherSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.VoucherSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.VoucherSummary.displayName = 'proto.natasha.VoucherSummary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.natasha.Voucher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.natasha.Voucher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.natasha.Voucher.displayName = 'proto.natasha.Voucher';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.CreateMerchantRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.CreateMerchantRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.CreateMerchantRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.CreateMerchantRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    logoPath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    webhookUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    emailContact: jspb.Message.getFieldWithDefault(msg, 4, ""),
    slackWebhookUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    safetyLimit: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.CreateMerchantRequest}
 */
proto.natasha.CreateMerchantRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.CreateMerchantRequest;
  return proto.natasha.CreateMerchantRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.CreateMerchantRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.CreateMerchantRequest}
 */
proto.natasha.CreateMerchantRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogoPath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebhookUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailContact(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlackWebhookUrl(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSafetyLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.CreateMerchantRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.CreateMerchantRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.CreateMerchantRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.CreateMerchantRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLogoPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWebhookUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmailContact();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSlackWebhookUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSafetyLimit();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.natasha.CreateMerchantRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.CreateMerchantRequest} returns this
 */
proto.natasha.CreateMerchantRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string logo_path = 2;
 * @return {string}
 */
proto.natasha.CreateMerchantRequest.prototype.getLogoPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.CreateMerchantRequest} returns this
 */
proto.natasha.CreateMerchantRequest.prototype.setLogoPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string webhook_url = 3;
 * @return {string}
 */
proto.natasha.CreateMerchantRequest.prototype.getWebhookUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.CreateMerchantRequest} returns this
 */
proto.natasha.CreateMerchantRequest.prototype.setWebhookUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string email_contact = 4;
 * @return {string}
 */
proto.natasha.CreateMerchantRequest.prototype.getEmailContact = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.CreateMerchantRequest} returns this
 */
proto.natasha.CreateMerchantRequest.prototype.setEmailContact = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string slack_webhook_url = 5;
 * @return {string}
 */
proto.natasha.CreateMerchantRequest.prototype.getSlackWebhookUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.CreateMerchantRequest} returns this
 */
proto.natasha.CreateMerchantRequest.prototype.setSlackWebhookUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint64 safety_limit = 6;
 * @return {number}
 */
proto.natasha.CreateMerchantRequest.prototype.getSafetyLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.CreateMerchantRequest} returns this
 */
proto.natasha.CreateMerchantRequest.prototype.setSafetyLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.CreateMerchantReply.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.CreateMerchantReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.CreateMerchantReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.CreateMerchantReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    merchant: (f = msg.getMerchant()) && proto.natasha.Merchant.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.CreateMerchantReply}
 */
proto.natasha.CreateMerchantReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.CreateMerchantReply;
  return proto.natasha.CreateMerchantReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.CreateMerchantReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.CreateMerchantReply}
 */
proto.natasha.CreateMerchantReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.natasha.Merchant;
      reader.readMessage(value,proto.natasha.Merchant.deserializeBinaryFromReader);
      msg.setMerchant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.CreateMerchantReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.CreateMerchantReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.CreateMerchantReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.CreateMerchantReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMerchant();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.natasha.Merchant.serializeBinaryToWriter
    );
  }
};


/**
 * optional Merchant merchant = 1;
 * @return {?proto.natasha.Merchant}
 */
proto.natasha.CreateMerchantReply.prototype.getMerchant = function() {
  return /** @type{?proto.natasha.Merchant} */ (
    jspb.Message.getWrapperField(this, proto.natasha.Merchant, 1));
};


/**
 * @param {?proto.natasha.Merchant|undefined} value
 * @return {!proto.natasha.CreateMerchantReply} returns this
*/
proto.natasha.CreateMerchantReply.prototype.setMerchant = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.CreateMerchantReply} returns this
 */
proto.natasha.CreateMerchantReply.prototype.clearMerchant = function() {
  return this.setMerchant(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.CreateMerchantReply.prototype.hasMerchant = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.UpdateMerchantRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.UpdateMerchantRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.UpdateMerchantRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.UpdateMerchantRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    logoPath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    webhookUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    emailContact: jspb.Message.getFieldWithDefault(msg, 5, ""),
    slackWebhookUrl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    safetyLimit: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.UpdateMerchantRequest}
 */
proto.natasha.UpdateMerchantRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.UpdateMerchantRequest;
  return proto.natasha.UpdateMerchantRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.UpdateMerchantRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.UpdateMerchantRequest}
 */
proto.natasha.UpdateMerchantRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogoPath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebhookUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailContact(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlackWebhookUrl(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSafetyLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.UpdateMerchantRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.UpdateMerchantRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.UpdateMerchantRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.UpdateMerchantRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLogoPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWebhookUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmailContact();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSlackWebhookUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSafetyLimit();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.natasha.UpdateMerchantRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.UpdateMerchantRequest} returns this
 */
proto.natasha.UpdateMerchantRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.natasha.UpdateMerchantRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.UpdateMerchantRequest} returns this
 */
proto.natasha.UpdateMerchantRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string logo_path = 3;
 * @return {string}
 */
proto.natasha.UpdateMerchantRequest.prototype.getLogoPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.UpdateMerchantRequest} returns this
 */
proto.natasha.UpdateMerchantRequest.prototype.setLogoPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string webhook_url = 4;
 * @return {string}
 */
proto.natasha.UpdateMerchantRequest.prototype.getWebhookUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.UpdateMerchantRequest} returns this
 */
proto.natasha.UpdateMerchantRequest.prototype.setWebhookUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string email_contact = 5;
 * @return {string}
 */
proto.natasha.UpdateMerchantRequest.prototype.getEmailContact = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.UpdateMerchantRequest} returns this
 */
proto.natasha.UpdateMerchantRequest.prototype.setEmailContact = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string slack_webhook_url = 6;
 * @return {string}
 */
proto.natasha.UpdateMerchantRequest.prototype.getSlackWebhookUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.UpdateMerchantRequest} returns this
 */
proto.natasha.UpdateMerchantRequest.prototype.setSlackWebhookUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint64 safety_limit = 7;
 * @return {number}
 */
proto.natasha.UpdateMerchantRequest.prototype.getSafetyLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.UpdateMerchantRequest} returns this
 */
proto.natasha.UpdateMerchantRequest.prototype.setSafetyLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.UpdateMerchantReply.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.UpdateMerchantReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.UpdateMerchantReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.UpdateMerchantReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    merchant: (f = msg.getMerchant()) && proto.natasha.Merchant.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.UpdateMerchantReply}
 */
proto.natasha.UpdateMerchantReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.UpdateMerchantReply;
  return proto.natasha.UpdateMerchantReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.UpdateMerchantReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.UpdateMerchantReply}
 */
proto.natasha.UpdateMerchantReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.natasha.Merchant;
      reader.readMessage(value,proto.natasha.Merchant.deserializeBinaryFromReader);
      msg.setMerchant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.UpdateMerchantReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.UpdateMerchantReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.UpdateMerchantReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.UpdateMerchantReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMerchant();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.natasha.Merchant.serializeBinaryToWriter
    );
  }
};


/**
 * optional Merchant merchant = 1;
 * @return {?proto.natasha.Merchant}
 */
proto.natasha.UpdateMerchantReply.prototype.getMerchant = function() {
  return /** @type{?proto.natasha.Merchant} */ (
    jspb.Message.getWrapperField(this, proto.natasha.Merchant, 1));
};


/**
 * @param {?proto.natasha.Merchant|undefined} value
 * @return {!proto.natasha.UpdateMerchantReply} returns this
*/
proto.natasha.UpdateMerchantReply.prototype.setMerchant = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.UpdateMerchantReply} returns this
 */
proto.natasha.UpdateMerchantReply.prototype.clearMerchant = function() {
  return this.setMerchant(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.UpdateMerchantReply.prototype.hasMerchant = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.ListMerchantsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.ListMerchantsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.ListMerchantsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.ListMerchantsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    page: jspb.Message.getFieldWithDefault(msg, 1, 0),
    size: jspb.Message.getFieldWithDefault(msg, 2, 0),
    keyword: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.ListMerchantsRequest}
 */
proto.natasha.ListMerchantsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.ListMerchantsRequest;
  return proto.natasha.ListMerchantsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.ListMerchantsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.ListMerchantsRequest}
 */
proto.natasha.ListMerchantsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.ListMerchantsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.ListMerchantsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.ListMerchantsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.ListMerchantsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPage();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getKeyword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint32 page = 1;
 * @return {number}
 */
proto.natasha.ListMerchantsRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListMerchantsRequest} returns this
 */
proto.natasha.ListMerchantsRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 size = 2;
 * @return {number}
 */
proto.natasha.ListMerchantsRequest.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListMerchantsRequest} returns this
 */
proto.natasha.ListMerchantsRequest.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string keyword = 3;
 * @return {string}
 */
proto.natasha.ListMerchantsRequest.prototype.getKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.ListMerchantsRequest} returns this
 */
proto.natasha.ListMerchantsRequest.prototype.setKeyword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.natasha.ListMerchantsReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.ListMerchantsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.ListMerchantsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.ListMerchantsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.ListMerchantsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.natasha.Merchant.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    currentPage: jspb.Message.getFieldWithDefault(msg, 3, 0),
    currentSize: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.ListMerchantsReply}
 */
proto.natasha.ListMerchantsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.ListMerchantsReply;
  return proto.natasha.ListMerchantsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.ListMerchantsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.ListMerchantsReply}
 */
proto.natasha.ListMerchantsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.natasha.Merchant;
      reader.readMessage(value,proto.natasha.Merchant.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentPage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.ListMerchantsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.ListMerchantsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.ListMerchantsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.ListMerchantsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.natasha.Merchant.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCurrentPage();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getCurrentSize();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * repeated Merchant records = 1;
 * @return {!Array<!proto.natasha.Merchant>}
 */
proto.natasha.ListMerchantsReply.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.natasha.Merchant>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.natasha.Merchant, 1));
};


/**
 * @param {!Array<!proto.natasha.Merchant>} value
 * @return {!proto.natasha.ListMerchantsReply} returns this
*/
proto.natasha.ListMerchantsReply.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.natasha.Merchant=} opt_value
 * @param {number=} opt_index
 * @return {!proto.natasha.Merchant}
 */
proto.natasha.ListMerchantsReply.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.natasha.Merchant, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.natasha.ListMerchantsReply} returns this
 */
proto.natasha.ListMerchantsReply.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};


/**
 * optional uint64 total = 2;
 * @return {number}
 */
proto.natasha.ListMerchantsReply.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListMerchantsReply} returns this
 */
proto.natasha.ListMerchantsReply.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 current_page = 3;
 * @return {number}
 */
proto.natasha.ListMerchantsReply.prototype.getCurrentPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListMerchantsReply} returns this
 */
proto.natasha.ListMerchantsReply.prototype.setCurrentPage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 current_size = 4;
 * @return {number}
 */
proto.natasha.ListMerchantsReply.prototype.getCurrentSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListMerchantsReply} returns this
 */
proto.natasha.ListMerchantsReply.prototype.setCurrentSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.GetMerchantRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.GetMerchantRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.GetMerchantRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.GetMerchantRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.GetMerchantRequest}
 */
proto.natasha.GetMerchantRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.GetMerchantRequest;
  return proto.natasha.GetMerchantRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.GetMerchantRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.GetMerchantRequest}
 */
proto.natasha.GetMerchantRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.GetMerchantRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.GetMerchantRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.GetMerchantRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.GetMerchantRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.natasha.GetMerchantRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.GetMerchantRequest} returns this
 */
proto.natasha.GetMerchantRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.GetMerchantReply.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.GetMerchantReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.GetMerchantReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.GetMerchantReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    merchant: (f = msg.getMerchant()) && proto.natasha.Merchant.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.GetMerchantReply}
 */
proto.natasha.GetMerchantReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.GetMerchantReply;
  return proto.natasha.GetMerchantReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.GetMerchantReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.GetMerchantReply}
 */
proto.natasha.GetMerchantReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.natasha.Merchant;
      reader.readMessage(value,proto.natasha.Merchant.deserializeBinaryFromReader);
      msg.setMerchant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.GetMerchantReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.GetMerchantReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.GetMerchantReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.GetMerchantReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMerchant();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.natasha.Merchant.serializeBinaryToWriter
    );
  }
};


/**
 * optional Merchant merchant = 1;
 * @return {?proto.natasha.Merchant}
 */
proto.natasha.GetMerchantReply.prototype.getMerchant = function() {
  return /** @type{?proto.natasha.Merchant} */ (
    jspb.Message.getWrapperField(this, proto.natasha.Merchant, 1));
};


/**
 * @param {?proto.natasha.Merchant|undefined} value
 * @return {!proto.natasha.GetMerchantReply} returns this
*/
proto.natasha.GetMerchantReply.prototype.setMerchant = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.GetMerchantReply} returns this
 */
proto.natasha.GetMerchantReply.prototype.clearMerchant = function() {
  return this.setMerchant(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.GetMerchantReply.prototype.hasMerchant = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.Merchant.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.Merchant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.Merchant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.Merchant.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    logoPath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    emailContact: jspb.Message.getFieldWithDefault(msg, 4, ""),
    webhookUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    slackWebhookUrl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    safetyLimit: jspb.Message.getFieldWithDefault(msg, 7, 0),
    createdBy: jspb.Message.getFieldWithDefault(msg, 10, ""),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 11, ""),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.Merchant}
 */
proto.natasha.Merchant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.Merchant;
  return proto.natasha.Merchant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.Merchant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.Merchant}
 */
proto.natasha.Merchant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogoPath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailContact(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebhookUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlackWebhookUrl(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSafetyLimit(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 13:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.Merchant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.Merchant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.Merchant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.Merchant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLogoPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmailContact();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getWebhookUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSlackWebhookUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSafetyLimit();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getUpdatedBy();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.natasha.Merchant.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.Merchant} returns this
 */
proto.natasha.Merchant.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.natasha.Merchant.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Merchant} returns this
 */
proto.natasha.Merchant.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string logo_path = 3;
 * @return {string}
 */
proto.natasha.Merchant.prototype.getLogoPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Merchant} returns this
 */
proto.natasha.Merchant.prototype.setLogoPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string email_contact = 4;
 * @return {string}
 */
proto.natasha.Merchant.prototype.getEmailContact = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Merchant} returns this
 */
proto.natasha.Merchant.prototype.setEmailContact = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string webhook_url = 5;
 * @return {string}
 */
proto.natasha.Merchant.prototype.getWebhookUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Merchant} returns this
 */
proto.natasha.Merchant.prototype.setWebhookUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string slack_webhook_url = 6;
 * @return {string}
 */
proto.natasha.Merchant.prototype.getSlackWebhookUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Merchant} returns this
 */
proto.natasha.Merchant.prototype.setSlackWebhookUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint64 safety_limit = 7;
 * @return {number}
 */
proto.natasha.Merchant.prototype.getSafetyLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.Merchant} returns this
 */
proto.natasha.Merchant.prototype.setSafetyLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string created_by = 10;
 * @return {string}
 */
proto.natasha.Merchant.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Merchant} returns this
 */
proto.natasha.Merchant.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string updated_by = 11;
 * @return {string}
 */
proto.natasha.Merchant.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Merchant} returns this
 */
proto.natasha.Merchant.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.natasha.Merchant.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.natasha.Merchant} returns this
*/
proto.natasha.Merchant.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.Merchant} returns this
 */
proto.natasha.Merchant.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.Merchant.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 13;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.natasha.Merchant.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 13));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.natasha.Merchant} returns this
*/
proto.natasha.Merchant.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.Merchant} returns this
 */
proto.natasha.Merchant.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.Merchant.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.MakePaymentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.MakePaymentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.MakePaymentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.MakePaymentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    merchantId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.MakePaymentRequest}
 */
proto.natasha.MakePaymentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.MakePaymentRequest;
  return proto.natasha.MakePaymentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.MakePaymentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.MakePaymentRequest}
 */
proto.natasha.MakePaymentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMerchantId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {!proto.natasha.PaymentType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.MakePaymentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.MakePaymentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.MakePaymentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.MakePaymentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMerchantId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional int64 merchant_id = 1;
 * @return {number}
 */
proto.natasha.MakePaymentRequest.prototype.getMerchantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.MakePaymentRequest} returns this
 */
proto.natasha.MakePaymentRequest.prototype.setMerchantId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 amount = 2;
 * @return {number}
 */
proto.natasha.MakePaymentRequest.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.MakePaymentRequest} returns this
 */
proto.natasha.MakePaymentRequest.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional PaymentType type = 3;
 * @return {!proto.natasha.PaymentType}
 */
proto.natasha.MakePaymentRequest.prototype.getType = function() {
  return /** @type {!proto.natasha.PaymentType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.natasha.PaymentType} value
 * @return {!proto.natasha.MakePaymentRequest} returns this
 */
proto.natasha.MakePaymentRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.MakePaymentReply.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.MakePaymentReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.MakePaymentReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.MakePaymentReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    balance: jspb.Message.getFieldWithDefault(msg, 1, 0),
    payment: (f = msg.getPayment()) && proto.natasha.Payment.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.MakePaymentReply}
 */
proto.natasha.MakePaymentReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.MakePaymentReply;
  return proto.natasha.MakePaymentReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.MakePaymentReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.MakePaymentReply}
 */
proto.natasha.MakePaymentReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBalance(value);
      break;
    case 2:
      var value = new proto.natasha.Payment;
      reader.readMessage(value,proto.natasha.Payment.deserializeBinaryFromReader);
      msg.setPayment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.MakePaymentReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.MakePaymentReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.MakePaymentReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.MakePaymentReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBalance();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPayment();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.natasha.Payment.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 balance = 1;
 * @return {number}
 */
proto.natasha.MakePaymentReply.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.MakePaymentReply} returns this
 */
proto.natasha.MakePaymentReply.prototype.setBalance = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Payment payment = 2;
 * @return {?proto.natasha.Payment}
 */
proto.natasha.MakePaymentReply.prototype.getPayment = function() {
  return /** @type{?proto.natasha.Payment} */ (
    jspb.Message.getWrapperField(this, proto.natasha.Payment, 2));
};


/**
 * @param {?proto.natasha.Payment|undefined} value
 * @return {!proto.natasha.MakePaymentReply} returns this
*/
proto.natasha.MakePaymentReply.prototype.setPayment = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.MakePaymentReply} returns this
 */
proto.natasha.MakePaymentReply.prototype.clearPayment = function() {
  return this.setPayment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.MakePaymentReply.prototype.hasPayment = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.GetMerchantBalanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.GetMerchantBalanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.GetMerchantBalanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.GetMerchantBalanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    merchantId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fromDate: (f = msg.getFromDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    toDate: (f = msg.getToDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.GetMerchantBalanceRequest}
 */
proto.natasha.GetMerchantBalanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.GetMerchantBalanceRequest;
  return proto.natasha.GetMerchantBalanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.GetMerchantBalanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.GetMerchantBalanceRequest}
 */
proto.natasha.GetMerchantBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMerchantId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFromDate(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setToDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.GetMerchantBalanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.GetMerchantBalanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.GetMerchantBalanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.GetMerchantBalanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMerchantId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getFromDate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getToDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 merchant_id = 1;
 * @return {number}
 */
proto.natasha.GetMerchantBalanceRequest.prototype.getMerchantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.GetMerchantBalanceRequest} returns this
 */
proto.natasha.GetMerchantBalanceRequest.prototype.setMerchantId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp from_date = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.natasha.GetMerchantBalanceRequest.prototype.getFromDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.natasha.GetMerchantBalanceRequest} returns this
*/
proto.natasha.GetMerchantBalanceRequest.prototype.setFromDate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.GetMerchantBalanceRequest} returns this
 */
proto.natasha.GetMerchantBalanceRequest.prototype.clearFromDate = function() {
  return this.setFromDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.GetMerchantBalanceRequest.prototype.hasFromDate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp to_date = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.natasha.GetMerchantBalanceRequest.prototype.getToDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.natasha.GetMerchantBalanceRequest} returns this
*/
proto.natasha.GetMerchantBalanceRequest.prototype.setToDate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.GetMerchantBalanceRequest} returns this
 */
proto.natasha.GetMerchantBalanceRequest.prototype.clearToDate = function() {
  return this.setToDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.GetMerchantBalanceRequest.prototype.hasToDate = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.GetMerchantBalanceReply.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.GetMerchantBalanceReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.GetMerchantBalanceReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.GetMerchantBalanceReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    balance: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalMoneyIn: jspb.Message.getFieldWithDefault(msg, 3, 0),
    totalMoneyOut: jspb.Message.getFieldWithDefault(msg, 4, 0),
    receiptVoucher: (f = msg.getReceiptVoucher()) && proto.natasha.VoucherSummary.toObject(includeInstance, f),
    paymentVoucher: (f = msg.getPaymentVoucher()) && proto.natasha.VoucherSummary.toObject(includeInstance, f),
    balanceForMexWithdrawProfit: jspb.Message.getFieldWithDefault(msg, 7, 0),
    balanceForMexWithdrawFunds: jspb.Message.getFieldWithDefault(msg, 8, 0),
    profit: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.GetMerchantBalanceReply}
 */
proto.natasha.GetMerchantBalanceReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.GetMerchantBalanceReply;
  return proto.natasha.GetMerchantBalanceReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.GetMerchantBalanceReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.GetMerchantBalanceReply}
 */
proto.natasha.GetMerchantBalanceReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBalance(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalMoneyIn(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalMoneyOut(value);
      break;
    case 5:
      var value = new proto.natasha.VoucherSummary;
      reader.readMessage(value,proto.natasha.VoucherSummary.deserializeBinaryFromReader);
      msg.setReceiptVoucher(value);
      break;
    case 6:
      var value = new proto.natasha.VoucherSummary;
      reader.readMessage(value,proto.natasha.VoucherSummary.deserializeBinaryFromReader);
      msg.setPaymentVoucher(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBalanceForMexWithdrawProfit(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBalanceForMexWithdrawFunds(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setProfit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.GetMerchantBalanceReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.GetMerchantBalanceReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.GetMerchantBalanceReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.GetMerchantBalanceReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBalance();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTotalMoneyIn();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getTotalMoneyOut();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getReceiptVoucher();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.natasha.VoucherSummary.serializeBinaryToWriter
    );
  }
  f = message.getPaymentVoucher();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.natasha.VoucherSummary.serializeBinaryToWriter
    );
  }
  f = message.getBalanceForMexWithdrawProfit();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getBalanceForMexWithdrawFunds();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getProfit();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
};


/**
 * optional uint64 balance = 1;
 * @return {number}
 */
proto.natasha.GetMerchantBalanceReply.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.GetMerchantBalanceReply} returns this
 */
proto.natasha.GetMerchantBalanceReply.prototype.setBalance = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 total_money_in = 3;
 * @return {number}
 */
proto.natasha.GetMerchantBalanceReply.prototype.getTotalMoneyIn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.GetMerchantBalanceReply} returns this
 */
proto.natasha.GetMerchantBalanceReply.prototype.setTotalMoneyIn = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 total_money_out = 4;
 * @return {number}
 */
proto.natasha.GetMerchantBalanceReply.prototype.getTotalMoneyOut = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.GetMerchantBalanceReply} returns this
 */
proto.natasha.GetMerchantBalanceReply.prototype.setTotalMoneyOut = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional VoucherSummary receipt_voucher = 5;
 * @return {?proto.natasha.VoucherSummary}
 */
proto.natasha.GetMerchantBalanceReply.prototype.getReceiptVoucher = function() {
  return /** @type{?proto.natasha.VoucherSummary} */ (
    jspb.Message.getWrapperField(this, proto.natasha.VoucherSummary, 5));
};


/**
 * @param {?proto.natasha.VoucherSummary|undefined} value
 * @return {!proto.natasha.GetMerchantBalanceReply} returns this
*/
proto.natasha.GetMerchantBalanceReply.prototype.setReceiptVoucher = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.GetMerchantBalanceReply} returns this
 */
proto.natasha.GetMerchantBalanceReply.prototype.clearReceiptVoucher = function() {
  return this.setReceiptVoucher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.GetMerchantBalanceReply.prototype.hasReceiptVoucher = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional VoucherSummary payment_voucher = 6;
 * @return {?proto.natasha.VoucherSummary}
 */
proto.natasha.GetMerchantBalanceReply.prototype.getPaymentVoucher = function() {
  return /** @type{?proto.natasha.VoucherSummary} */ (
    jspb.Message.getWrapperField(this, proto.natasha.VoucherSummary, 6));
};


/**
 * @param {?proto.natasha.VoucherSummary|undefined} value
 * @return {!proto.natasha.GetMerchantBalanceReply} returns this
*/
proto.natasha.GetMerchantBalanceReply.prototype.setPaymentVoucher = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.GetMerchantBalanceReply} returns this
 */
proto.natasha.GetMerchantBalanceReply.prototype.clearPaymentVoucher = function() {
  return this.setPaymentVoucher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.GetMerchantBalanceReply.prototype.hasPaymentVoucher = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int64 balance_for_mex_withdraw_profit = 7;
 * @return {number}
 */
proto.natasha.GetMerchantBalanceReply.prototype.getBalanceForMexWithdrawProfit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.GetMerchantBalanceReply} returns this
 */
proto.natasha.GetMerchantBalanceReply.prototype.setBalanceForMexWithdrawProfit = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 balance_for_mex_withdraw_funds = 8;
 * @return {number}
 */
proto.natasha.GetMerchantBalanceReply.prototype.getBalanceForMexWithdrawFunds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.GetMerchantBalanceReply} returns this
 */
proto.natasha.GetMerchantBalanceReply.prototype.setBalanceForMexWithdrawFunds = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 profit = 9;
 * @return {number}
 */
proto.natasha.GetMerchantBalanceReply.prototype.getProfit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.GetMerchantBalanceReply} returns this
 */
proto.natasha.GetMerchantBalanceReply.prototype.setProfit = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.NotifyRejectPaymentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.NotifyRejectPaymentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.NotifyRejectPaymentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.NotifyRejectPaymentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    merchantId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymentId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.NotifyRejectPaymentRequest}
 */
proto.natasha.NotifyRejectPaymentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.NotifyRejectPaymentRequest;
  return proto.natasha.NotifyRejectPaymentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.NotifyRejectPaymentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.NotifyRejectPaymentRequest}
 */
proto.natasha.NotifyRejectPaymentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMerchantId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPaymentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.NotifyRejectPaymentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.NotifyRejectPaymentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.NotifyRejectPaymentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.NotifyRejectPaymentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMerchantId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymentId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 merchant_id = 1;
 * @return {number}
 */
proto.natasha.NotifyRejectPaymentRequest.prototype.getMerchantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.NotifyRejectPaymentRequest} returns this
 */
proto.natasha.NotifyRejectPaymentRequest.prototype.setMerchantId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.natasha.NotifyRejectPaymentRequest.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.NotifyRejectPaymentRequest} returns this
 */
proto.natasha.NotifyRejectPaymentRequest.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 payment_id = 3;
 * @return {number}
 */
proto.natasha.NotifyRejectPaymentRequest.prototype.getPaymentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.NotifyRejectPaymentRequest} returns this
 */
proto.natasha.NotifyRejectPaymentRequest.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.NotifyRejectPaymentReply.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.NotifyRejectPaymentReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.NotifyRejectPaymentReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.NotifyRejectPaymentReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.NotifyRejectPaymentReply}
 */
proto.natasha.NotifyRejectPaymentReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.NotifyRejectPaymentReply;
  return proto.natasha.NotifyRejectPaymentReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.NotifyRejectPaymentReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.NotifyRejectPaymentReply}
 */
proto.natasha.NotifyRejectPaymentReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.NotifyRejectPaymentReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.NotifyRejectPaymentReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.NotifyRejectPaymentReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.NotifyRejectPaymentReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.CreateVoucherRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.CreateVoucherRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.CreateVoucherRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.CreateVoucherRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    merchantId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    amount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    note: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.CreateVoucherRequest}
 */
proto.natasha.CreateVoucherRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.CreateVoucherRequest;
  return proto.natasha.CreateVoucherRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.CreateVoucherRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.CreateVoucherRequest}
 */
proto.natasha.CreateVoucherRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMerchantId(value);
      break;
    case 2:
      var value = /** @type {!proto.natasha.PaymentType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.CreateVoucherRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.CreateVoucherRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.CreateVoucherRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.CreateVoucherRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMerchantId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int64 merchant_id = 1;
 * @return {number}
 */
proto.natasha.CreateVoucherRequest.prototype.getMerchantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.CreateVoucherRequest} returns this
 */
proto.natasha.CreateVoucherRequest.prototype.setMerchantId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional PaymentType type = 2;
 * @return {!proto.natasha.PaymentType}
 */
proto.natasha.CreateVoucherRequest.prototype.getType = function() {
  return /** @type {!proto.natasha.PaymentType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.natasha.PaymentType} value
 * @return {!proto.natasha.CreateVoucherRequest} returns this
 */
proto.natasha.CreateVoucherRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional uint64 amount = 3;
 * @return {number}
 */
proto.natasha.CreateVoucherRequest.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.CreateVoucherRequest} returns this
 */
proto.natasha.CreateVoucherRequest.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string note = 4;
 * @return {string}
 */
proto.natasha.CreateVoucherRequest.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.CreateVoucherRequest} returns this
 */
proto.natasha.CreateVoucherRequest.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.CreateVoucherReply.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.CreateVoucherReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.CreateVoucherReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.CreateVoucherReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    voucher: (f = msg.getVoucher()) && proto.natasha.Voucher.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.CreateVoucherReply}
 */
proto.natasha.CreateVoucherReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.CreateVoucherReply;
  return proto.natasha.CreateVoucherReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.CreateVoucherReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.CreateVoucherReply}
 */
proto.natasha.CreateVoucherReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.natasha.Voucher;
      reader.readMessage(value,proto.natasha.Voucher.deserializeBinaryFromReader);
      msg.setVoucher(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.CreateVoucherReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.CreateVoucherReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.CreateVoucherReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.CreateVoucherReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVoucher();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.natasha.Voucher.serializeBinaryToWriter
    );
  }
};


/**
 * optional Voucher voucher = 1;
 * @return {?proto.natasha.Voucher}
 */
proto.natasha.CreateVoucherReply.prototype.getVoucher = function() {
  return /** @type{?proto.natasha.Voucher} */ (
    jspb.Message.getWrapperField(this, proto.natasha.Voucher, 1));
};


/**
 * @param {?proto.natasha.Voucher|undefined} value
 * @return {!proto.natasha.CreateVoucherReply} returns this
*/
proto.natasha.CreateVoucherReply.prototype.setVoucher = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.CreateVoucherReply} returns this
 */
proto.natasha.CreateVoucherReply.prototype.clearVoucher = function() {
  return this.setVoucher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.CreateVoucherReply.prototype.hasVoucher = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.SubmitVoucherRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.SubmitVoucherRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.SubmitVoucherRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.SubmitVoucherRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    payerProvider: jspb.Message.getFieldWithDefault(msg, 2, 0),
    payerAccount: jspb.Message.getFieldWithDefault(msg, 3, ""),
    payerName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    payeeProvider: jspb.Message.getFieldWithDefault(msg, 5, 0),
    payeeAccount: jspb.Message.getFieldWithDefault(msg, 6, ""),
    payeeName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    txId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    handlerNote: jspb.Message.getFieldWithDefault(msg, 9, ""),
    imageUrl: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.SubmitVoucherRequest}
 */
proto.natasha.SubmitVoucherRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.SubmitVoucherRequest;
  return proto.natasha.SubmitVoucherRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.SubmitVoucherRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.SubmitVoucherRequest}
 */
proto.natasha.SubmitVoucherRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPayerProvider(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayerAccount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayerName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPayeeProvider(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayeeAccount(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayeeName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setHandlerNote(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.SubmitVoucherRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.SubmitVoucherRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.SubmitVoucherRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.SubmitVoucherRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPayerProvider();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPayerAccount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPayerName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPayeeProvider();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getPayeeAccount();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPayeeName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTxId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getHandlerNote();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.natasha.SubmitVoucherRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.SubmitVoucherRequest} returns this
 */
proto.natasha.SubmitVoucherRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 payer_provider = 2;
 * @return {number}
 */
proto.natasha.SubmitVoucherRequest.prototype.getPayerProvider = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.SubmitVoucherRequest} returns this
 */
proto.natasha.SubmitVoucherRequest.prototype.setPayerProvider = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string payer_account = 3;
 * @return {string}
 */
proto.natasha.SubmitVoucherRequest.prototype.getPayerAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.SubmitVoucherRequest} returns this
 */
proto.natasha.SubmitVoucherRequest.prototype.setPayerAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string payer_name = 4;
 * @return {string}
 */
proto.natasha.SubmitVoucherRequest.prototype.getPayerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.SubmitVoucherRequest} returns this
 */
proto.natasha.SubmitVoucherRequest.prototype.setPayerName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 payee_provider = 5;
 * @return {number}
 */
proto.natasha.SubmitVoucherRequest.prototype.getPayeeProvider = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.SubmitVoucherRequest} returns this
 */
proto.natasha.SubmitVoucherRequest.prototype.setPayeeProvider = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string payee_account = 6;
 * @return {string}
 */
proto.natasha.SubmitVoucherRequest.prototype.getPayeeAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.SubmitVoucherRequest} returns this
 */
proto.natasha.SubmitVoucherRequest.prototype.setPayeeAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string payee_name = 7;
 * @return {string}
 */
proto.natasha.SubmitVoucherRequest.prototype.getPayeeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.SubmitVoucherRequest} returns this
 */
proto.natasha.SubmitVoucherRequest.prototype.setPayeeName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string tx_id = 8;
 * @return {string}
 */
proto.natasha.SubmitVoucherRequest.prototype.getTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.SubmitVoucherRequest} returns this
 */
proto.natasha.SubmitVoucherRequest.prototype.setTxId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string handler_note = 9;
 * @return {string}
 */
proto.natasha.SubmitVoucherRequest.prototype.getHandlerNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.SubmitVoucherRequest} returns this
 */
proto.natasha.SubmitVoucherRequest.prototype.setHandlerNote = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string image_url = 10;
 * @return {string}
 */
proto.natasha.SubmitVoucherRequest.prototype.getImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.SubmitVoucherRequest} returns this
 */
proto.natasha.SubmitVoucherRequest.prototype.setImageUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.SubmitVoucherReply.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.SubmitVoucherReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.SubmitVoucherReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.SubmitVoucherReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.SubmitVoucherReply}
 */
proto.natasha.SubmitVoucherReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.SubmitVoucherReply;
  return proto.natasha.SubmitVoucherReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.SubmitVoucherReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.SubmitVoucherReply}
 */
proto.natasha.SubmitVoucherReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.SubmitVoucherReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.SubmitVoucherReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.SubmitVoucherReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.SubmitVoucherReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.CancelVoucherRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.CancelVoucherRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.CancelVoucherRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.CancelVoucherRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    note: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.CancelVoucherRequest}
 */
proto.natasha.CancelVoucherRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.CancelVoucherRequest;
  return proto.natasha.CancelVoucherRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.CancelVoucherRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.CancelVoucherRequest}
 */
proto.natasha.CancelVoucherRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.CancelVoucherRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.CancelVoucherRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.CancelVoucherRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.CancelVoucherRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.natasha.CancelVoucherRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.CancelVoucherRequest} returns this
 */
proto.natasha.CancelVoucherRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string note = 2;
 * @return {string}
 */
proto.natasha.CancelVoucherRequest.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.CancelVoucherRequest} returns this
 */
proto.natasha.CancelVoucherRequest.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.CancelVoucherReply.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.CancelVoucherReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.CancelVoucherReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.CancelVoucherReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.CancelVoucherReply}
 */
proto.natasha.CancelVoucherReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.CancelVoucherReply;
  return proto.natasha.CancelVoucherReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.CancelVoucherReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.CancelVoucherReply}
 */
proto.natasha.CancelVoucherReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.CancelVoucherReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.CancelVoucherReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.CancelVoucherReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.CancelVoucherReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.natasha.ListVouchersRequest.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.ListVouchersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.ListVouchersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.ListVouchersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.ListVouchersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    merchantId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    typesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    id: jspb.Message.getFieldWithDefault(msg, 3, 0),
    statusesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    page: jspb.Message.getFieldWithDefault(msg, 10, 0),
    size: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.ListVouchersRequest}
 */
proto.natasha.ListVouchersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.ListVouchersRequest;
  return proto.natasha.ListVouchersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.ListVouchersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.ListVouchersRequest}
 */
proto.natasha.ListVouchersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMerchantId(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setTypesList(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setStatusesList(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPage(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.ListVouchersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.ListVouchersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.ListVouchersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.ListVouchersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMerchantId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getStatusesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
};


/**
 * optional int64 merchant_id = 1;
 * @return {number}
 */
proto.natasha.ListVouchersRequest.prototype.getMerchantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListVouchersRequest} returns this
 */
proto.natasha.ListVouchersRequest.prototype.setMerchantId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated int32 types = 2;
 * @return {!Array<number>}
 */
proto.natasha.ListVouchersRequest.prototype.getTypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.natasha.ListVouchersRequest} returns this
 */
proto.natasha.ListVouchersRequest.prototype.setTypesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.natasha.ListVouchersRequest} returns this
 */
proto.natasha.ListVouchersRequest.prototype.addTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.natasha.ListVouchersRequest} returns this
 */
proto.natasha.ListVouchersRequest.prototype.clearTypesList = function() {
  return this.setTypesList([]);
};


/**
 * optional int64 id = 3;
 * @return {number}
 */
proto.natasha.ListVouchersRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListVouchersRequest} returns this
 */
proto.natasha.ListVouchersRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated int32 statuses = 4;
 * @return {!Array<number>}
 */
proto.natasha.ListVouchersRequest.prototype.getStatusesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.natasha.ListVouchersRequest} returns this
 */
proto.natasha.ListVouchersRequest.prototype.setStatusesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.natasha.ListVouchersRequest} returns this
 */
proto.natasha.ListVouchersRequest.prototype.addStatuses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.natasha.ListVouchersRequest} returns this
 */
proto.natasha.ListVouchersRequest.prototype.clearStatusesList = function() {
  return this.setStatusesList([]);
};


/**
 * optional uint32 page = 10;
 * @return {number}
 */
proto.natasha.ListVouchersRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListVouchersRequest} returns this
 */
proto.natasha.ListVouchersRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint32 size = 11;
 * @return {number}
 */
proto.natasha.ListVouchersRequest.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListVouchersRequest} returns this
 */
proto.natasha.ListVouchersRequest.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.natasha.ListVouchersReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.ListVouchersReply.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.ListVouchersReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.ListVouchersReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.ListVouchersReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.natasha.Voucher.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    currentPage: jspb.Message.getFieldWithDefault(msg, 3, 0),
    currentSize: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.ListVouchersReply}
 */
proto.natasha.ListVouchersReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.ListVouchersReply;
  return proto.natasha.ListVouchersReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.ListVouchersReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.ListVouchersReply}
 */
proto.natasha.ListVouchersReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.natasha.Voucher;
      reader.readMessage(value,proto.natasha.Voucher.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentPage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.ListVouchersReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.ListVouchersReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.ListVouchersReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.ListVouchersReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.natasha.Voucher.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCurrentPage();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getCurrentSize();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * repeated Voucher records = 1;
 * @return {!Array<!proto.natasha.Voucher>}
 */
proto.natasha.ListVouchersReply.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.natasha.Voucher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.natasha.Voucher, 1));
};


/**
 * @param {!Array<!proto.natasha.Voucher>} value
 * @return {!proto.natasha.ListVouchersReply} returns this
*/
proto.natasha.ListVouchersReply.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.natasha.Voucher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.natasha.Voucher}
 */
proto.natasha.ListVouchersReply.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.natasha.Voucher, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.natasha.ListVouchersReply} returns this
 */
proto.natasha.ListVouchersReply.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};


/**
 * optional uint64 total = 2;
 * @return {number}
 */
proto.natasha.ListVouchersReply.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListVouchersReply} returns this
 */
proto.natasha.ListVouchersReply.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 current_page = 3;
 * @return {number}
 */
proto.natasha.ListVouchersReply.prototype.getCurrentPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListVouchersReply} returns this
 */
proto.natasha.ListVouchersReply.prototype.setCurrentPage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 current_size = 4;
 * @return {number}
 */
proto.natasha.ListVouchersReply.prototype.getCurrentSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListVouchersReply} returns this
 */
proto.natasha.ListVouchersReply.prototype.setCurrentSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.GetVoucherRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.GetVoucherRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.GetVoucherRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.GetVoucherRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.GetVoucherRequest}
 */
proto.natasha.GetVoucherRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.GetVoucherRequest;
  return proto.natasha.GetVoucherRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.GetVoucherRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.GetVoucherRequest}
 */
proto.natasha.GetVoucherRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.GetVoucherRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.GetVoucherRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.GetVoucherRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.GetVoucherRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.natasha.GetVoucherRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.GetVoucherRequest} returns this
 */
proto.natasha.GetVoucherRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.GetVoucherReply.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.GetVoucherReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.GetVoucherReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.GetVoucherReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    voucher: (f = msg.getVoucher()) && proto.natasha.Voucher.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.GetVoucherReply}
 */
proto.natasha.GetVoucherReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.GetVoucherReply;
  return proto.natasha.GetVoucherReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.GetVoucherReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.GetVoucherReply}
 */
proto.natasha.GetVoucherReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.natasha.Voucher;
      reader.readMessage(value,proto.natasha.Voucher.deserializeBinaryFromReader);
      msg.setVoucher(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.GetVoucherReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.GetVoucherReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.GetVoucherReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.GetVoucherReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVoucher();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.natasha.Voucher.serializeBinaryToWriter
    );
  }
};


/**
 * optional Voucher voucher = 1;
 * @return {?proto.natasha.Voucher}
 */
proto.natasha.GetVoucherReply.prototype.getVoucher = function() {
  return /** @type{?proto.natasha.Voucher} */ (
    jspb.Message.getWrapperField(this, proto.natasha.Voucher, 1));
};


/**
 * @param {?proto.natasha.Voucher|undefined} value
 * @return {!proto.natasha.GetVoucherReply} returns this
*/
proto.natasha.GetVoucherReply.prototype.setVoucher = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.GetVoucherReply} returns this
 */
proto.natasha.GetVoucherReply.prototype.clearVoucher = function() {
  return this.setVoucher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.GetVoucherReply.prototype.hasVoucher = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.natasha.ListPaymentsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.ListPaymentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.ListPaymentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.ListPaymentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.ListPaymentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    merchantId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    typesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    id: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fromDate: (f = msg.getFromDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    page: jspb.Message.getFieldWithDefault(msg, 10, 0),
    size: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.ListPaymentsRequest}
 */
proto.natasha.ListPaymentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.ListPaymentsRequest;
  return proto.natasha.ListPaymentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.ListPaymentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.ListPaymentsRequest}
 */
proto.natasha.ListPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMerchantId(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setTypesList(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFromDate(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPage(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.ListPaymentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.ListPaymentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.ListPaymentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.ListPaymentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMerchantId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getFromDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
};


/**
 * optional int64 merchant_id = 1;
 * @return {number}
 */
proto.natasha.ListPaymentsRequest.prototype.getMerchantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListPaymentsRequest} returns this
 */
proto.natasha.ListPaymentsRequest.prototype.setMerchantId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated int32 types = 2;
 * @return {!Array<number>}
 */
proto.natasha.ListPaymentsRequest.prototype.getTypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.natasha.ListPaymentsRequest} returns this
 */
proto.natasha.ListPaymentsRequest.prototype.setTypesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.natasha.ListPaymentsRequest} returns this
 */
proto.natasha.ListPaymentsRequest.prototype.addTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.natasha.ListPaymentsRequest} returns this
 */
proto.natasha.ListPaymentsRequest.prototype.clearTypesList = function() {
  return this.setTypesList([]);
};


/**
 * optional int64 id = 3;
 * @return {number}
 */
proto.natasha.ListPaymentsRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListPaymentsRequest} returns this
 */
proto.natasha.ListPaymentsRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp from_date = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.natasha.ListPaymentsRequest.prototype.getFromDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.natasha.ListPaymentsRequest} returns this
*/
proto.natasha.ListPaymentsRequest.prototype.setFromDate = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.ListPaymentsRequest} returns this
 */
proto.natasha.ListPaymentsRequest.prototype.clearFromDate = function() {
  return this.setFromDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.ListPaymentsRequest.prototype.hasFromDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 page = 10;
 * @return {number}
 */
proto.natasha.ListPaymentsRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListPaymentsRequest} returns this
 */
proto.natasha.ListPaymentsRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint32 size = 11;
 * @return {number}
 */
proto.natasha.ListPaymentsRequest.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListPaymentsRequest} returns this
 */
proto.natasha.ListPaymentsRequest.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.natasha.ListPaymentsReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.ListPaymentsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.ListPaymentsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.ListPaymentsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.ListPaymentsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.natasha.Payment.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    currentPage: jspb.Message.getFieldWithDefault(msg, 3, 0),
    currentSize: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.ListPaymentsReply}
 */
proto.natasha.ListPaymentsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.ListPaymentsReply;
  return proto.natasha.ListPaymentsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.ListPaymentsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.ListPaymentsReply}
 */
proto.natasha.ListPaymentsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.natasha.Payment;
      reader.readMessage(value,proto.natasha.Payment.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentPage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.ListPaymentsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.ListPaymentsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.ListPaymentsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.ListPaymentsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.natasha.Payment.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCurrentPage();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getCurrentSize();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * repeated Payment records = 1;
 * @return {!Array<!proto.natasha.Payment>}
 */
proto.natasha.ListPaymentsReply.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.natasha.Payment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.natasha.Payment, 1));
};


/**
 * @param {!Array<!proto.natasha.Payment>} value
 * @return {!proto.natasha.ListPaymentsReply} returns this
*/
proto.natasha.ListPaymentsReply.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.natasha.Payment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.natasha.Payment}
 */
proto.natasha.ListPaymentsReply.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.natasha.Payment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.natasha.ListPaymentsReply} returns this
 */
proto.natasha.ListPaymentsReply.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};


/**
 * optional uint64 total = 2;
 * @return {number}
 */
proto.natasha.ListPaymentsReply.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListPaymentsReply} returns this
 */
proto.natasha.ListPaymentsReply.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 current_page = 3;
 * @return {number}
 */
proto.natasha.ListPaymentsReply.prototype.getCurrentPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListPaymentsReply} returns this
 */
proto.natasha.ListPaymentsReply.prototype.setCurrentPage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 current_size = 4;
 * @return {number}
 */
proto.natasha.ListPaymentsReply.prototype.getCurrentSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.ListPaymentsReply} returns this
 */
proto.natasha.ListPaymentsReply.prototype.setCurrentSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.Payment.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.Payment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.Payment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.Payment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    merchantId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    paymentType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    amount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    createdBy: jspb.Message.getFieldWithDefault(msg, 10, ""),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 11, ""),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.Payment}
 */
proto.natasha.Payment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.Payment;
  return proto.natasha.Payment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.Payment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.Payment}
 */
proto.natasha.Payment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMerchantId(value);
      break;
    case 3:
      var value = /** @type {!proto.natasha.PaymentType} */ (reader.readEnum());
      msg.setPaymentType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 13:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.Payment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.Payment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.Payment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.Payment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMerchantId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPaymentType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getUpdatedBy();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.natasha.Payment.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.Payment} returns this
 */
proto.natasha.Payment.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 merchant_id = 2;
 * @return {number}
 */
proto.natasha.Payment.prototype.getMerchantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.Payment} returns this
 */
proto.natasha.Payment.prototype.setMerchantId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional PaymentType payment_type = 3;
 * @return {!proto.natasha.PaymentType}
 */
proto.natasha.Payment.prototype.getPaymentType = function() {
  return /** @type {!proto.natasha.PaymentType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.natasha.PaymentType} value
 * @return {!proto.natasha.Payment} returns this
 */
proto.natasha.Payment.prototype.setPaymentType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int64 amount = 4;
 * @return {number}
 */
proto.natasha.Payment.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.Payment} returns this
 */
proto.natasha.Payment.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string created_by = 10;
 * @return {string}
 */
proto.natasha.Payment.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Payment} returns this
 */
proto.natasha.Payment.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string updated_by = 11;
 * @return {string}
 */
proto.natasha.Payment.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Payment} returns this
 */
proto.natasha.Payment.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.natasha.Payment.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.natasha.Payment} returns this
*/
proto.natasha.Payment.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.Payment} returns this
 */
proto.natasha.Payment.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.Payment.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 13;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.natasha.Payment.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 13));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.natasha.Payment} returns this
*/
proto.natasha.Payment.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.Payment} returns this
 */
proto.natasha.Payment.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.Payment.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.VoucherSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.VoucherSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.VoucherSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.VoucherSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalIn30days: jspb.Message.getFieldWithDefault(msg, 2, 0),
    percent: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.VoucherSummary}
 */
proto.natasha.VoucherSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.VoucherSummary;
  return proto.natasha.VoucherSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.VoucherSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.VoucherSummary}
 */
proto.natasha.VoucherSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotal(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalIn30days(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPercent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.VoucherSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.VoucherSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.VoucherSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.VoucherSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTotalIn30days();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPercent();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional uint64 total = 1;
 * @return {number}
 */
proto.natasha.VoucherSummary.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.VoucherSummary} returns this
 */
proto.natasha.VoucherSummary.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 total_in_30days = 2;
 * @return {number}
 */
proto.natasha.VoucherSummary.prototype.getTotalIn30days = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.VoucherSummary} returns this
 */
proto.natasha.VoucherSummary.prototype.setTotalIn30days = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double percent = 3;
 * @return {number}
 */
proto.natasha.VoucherSummary.prototype.getPercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.VoucherSummary} returns this
 */
proto.natasha.VoucherSummary.prototype.setPercent = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.natasha.Voucher.prototype.toObject = function(opt_includeInstance) {
  return proto.natasha.Voucher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.natasha.Voucher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.Voucher.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    merchantId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    paymentId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    amount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    type: jspb.Message.getFieldWithDefault(msg, 5, 0),
    status: jspb.Message.getFieldWithDefault(msg, 6, 0),
    imageUrl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    note: jspb.Message.getFieldWithDefault(msg, 8, ""),
    payeeProvider: jspb.Message.getFieldWithDefault(msg, 9, 0),
    payeeAccount: jspb.Message.getFieldWithDefault(msg, 10, ""),
    payeeName: jspb.Message.getFieldWithDefault(msg, 11, ""),
    payerProvider: jspb.Message.getFieldWithDefault(msg, 12, 0),
    payerAccount: jspb.Message.getFieldWithDefault(msg, 13, ""),
    payerName: jspb.Message.getFieldWithDefault(msg, 14, ""),
    txId: jspb.Message.getFieldWithDefault(msg, 15, ""),
    handledBy: jspb.Message.getFieldWithDefault(msg, 16, ""),
    handlerNote: jspb.Message.getFieldWithDefault(msg, 17, ""),
    createdBy: jspb.Message.getFieldWithDefault(msg, 20, ""),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 21, ""),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.natasha.Voucher}
 */
proto.natasha.Voucher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.natasha.Voucher;
  return proto.natasha.Voucher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.natasha.Voucher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.natasha.Voucher}
 */
proto.natasha.Voucher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMerchantId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPaymentId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    case 5:
      var value = /** @type {!proto.natasha.PaymentType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {!proto.natasha.VoucherStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPayeeProvider(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayeeAccount(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayeeName(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPayerProvider(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayerAccount(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayerName(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setHandledBy(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setHandlerNote(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    case 22:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 23:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.natasha.Voucher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.natasha.Voucher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.natasha.Voucher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.natasha.Voucher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMerchantId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPaymentId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPayeeProvider();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getPayeeAccount();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPayeeName();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPayerProvider();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getPayerAccount();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getPayerName();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getTxId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getHandledBy();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getHandlerNote();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getUpdatedBy();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.natasha.Voucher.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 merchant_id = 2;
 * @return {number}
 */
proto.natasha.Voucher.prototype.getMerchantId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setMerchantId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 payment_id = 3;
 * @return {number}
 */
proto.natasha.Voucher.prototype.getPaymentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setPaymentId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 amount = 4;
 * @return {number}
 */
proto.natasha.Voucher.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional PaymentType type = 5;
 * @return {!proto.natasha.PaymentType}
 */
proto.natasha.Voucher.prototype.getType = function() {
  return /** @type {!proto.natasha.PaymentType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.natasha.PaymentType} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional VoucherStatus status = 6;
 * @return {!proto.natasha.VoucherStatus}
 */
proto.natasha.Voucher.prototype.getStatus = function() {
  return /** @type {!proto.natasha.VoucherStatus} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.natasha.VoucherStatus} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string image_url = 7;
 * @return {string}
 */
proto.natasha.Voucher.prototype.getImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setImageUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string note = 8;
 * @return {string}
 */
proto.natasha.Voucher.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint64 payee_provider = 9;
 * @return {number}
 */
proto.natasha.Voucher.prototype.getPayeeProvider = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setPayeeProvider = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string payee_account = 10;
 * @return {string}
 */
proto.natasha.Voucher.prototype.getPayeeAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setPayeeAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string payee_name = 11;
 * @return {string}
 */
proto.natasha.Voucher.prototype.getPayeeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setPayeeName = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional uint64 payer_provider = 12;
 * @return {number}
 */
proto.natasha.Voucher.prototype.getPayerProvider = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setPayerProvider = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string payer_account = 13;
 * @return {string}
 */
proto.natasha.Voucher.prototype.getPayerAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setPayerAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string payer_name = 14;
 * @return {string}
 */
proto.natasha.Voucher.prototype.getPayerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setPayerName = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string tx_id = 15;
 * @return {string}
 */
proto.natasha.Voucher.prototype.getTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setTxId = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string handled_by = 16;
 * @return {string}
 */
proto.natasha.Voucher.prototype.getHandledBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setHandledBy = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string handler_note = 17;
 * @return {string}
 */
proto.natasha.Voucher.prototype.getHandlerNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setHandlerNote = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string created_by = 20;
 * @return {string}
 */
proto.natasha.Voucher.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string updated_by = 21;
 * @return {string}
 */
proto.natasha.Voucher.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 22;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.natasha.Voucher.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 22));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.natasha.Voucher} returns this
*/
proto.natasha.Voucher.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.Voucher.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 23;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.natasha.Voucher.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 23));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.natasha.Voucher} returns this
*/
proto.natasha.Voucher.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.natasha.Voucher} returns this
 */
proto.natasha.Voucher.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.natasha.Voucher.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * @enum {number}
 */
proto.natasha.PaymentType = {
  DEPOSIT_UNSPECIFIED: 0,
  USER_TOP_UP: 1,
  USER_WITHDRAW: 2,
  MERCHANT_DEPOSIT_ADDITIONAL: 3,
  MERCHANT_DEPOSIT_COMPENSATION: 4,
  MERCHANT_WITHDRAW_PROFIT: 5,
  MERCHANT_WITHDRAW_FUNDS: 6
};

/**
 * @enum {number}
 */
proto.natasha.VoucherStatus = {
  STATUS_UNSPECIFIED: 0,
  PROCESSING: 1,
  COMPLETED: 2,
  CANCELED: 3
};

/**
 * @enum {number}
 */
proto.natasha.BankType = {
  BANK_UNSPECIFIED: 0,
  V: 1,
  S: 2,
  A: 3,
  N: 4,
  B: 5
};

goog.object.extend(exports, proto.natasha);
