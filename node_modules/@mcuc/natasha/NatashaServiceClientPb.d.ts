/**
 * @fileoverview gRPC-Web generated client stub for natasha
 * @enhanceable
 * @public
 */
import * as grpcWeb from 'grpc-web';
import * as natasha_api_natasha_pb from './natasha_pb';
export declare class NatashaClient {
    client_: grpcWeb.AbstractClientBase;
    hostname_: string;
    credentials_: null | {
        [index: string]: string;
    };
    options_: null | {
        [index: string]: any;
    };
    constructor(hostname: string, credentials?: null | {
        [index: string]: string;
    }, options?: null | {
        [index: string]: any;
    });
    methodInfoCreateMerchant: any;
    createMerchant(request: natasha_api_natasha_pb.CreateMerchantRequest, metadata: grpcWeb.Metadata | null): Promise<natasha_api_natasha_pb.CreateMerchantReply>;
    createMerchant(request: natasha_api_natasha_pb.CreateMerchantRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: natasha_api_natasha_pb.CreateMerchantReply) => void): grpcWeb.ClientReadableStream<natasha_api_natasha_pb.CreateMerchantReply>;
    methodInfoUpdateMerchant: any;
    updateMerchant(request: natasha_api_natasha_pb.UpdateMerchantRequest, metadata: grpcWeb.Metadata | null): Promise<natasha_api_natasha_pb.UpdateMerchantReply>;
    updateMerchant(request: natasha_api_natasha_pb.UpdateMerchantRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: natasha_api_natasha_pb.UpdateMerchantReply) => void): grpcWeb.ClientReadableStream<natasha_api_natasha_pb.UpdateMerchantReply>;
    methodInfoListMerchants: any;
    listMerchants(request: natasha_api_natasha_pb.ListMerchantsRequest, metadata: grpcWeb.Metadata | null): Promise<natasha_api_natasha_pb.ListMerchantsReply>;
    listMerchants(request: natasha_api_natasha_pb.ListMerchantsRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: natasha_api_natasha_pb.ListMerchantsReply) => void): grpcWeb.ClientReadableStream<natasha_api_natasha_pb.ListMerchantsReply>;
    methodInfoGetMerchant: any;
    getMerchant(request: natasha_api_natasha_pb.GetMerchantRequest, metadata: grpcWeb.Metadata | null): Promise<natasha_api_natasha_pb.GetMerchantReply>;
    getMerchant(request: natasha_api_natasha_pb.GetMerchantRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: natasha_api_natasha_pb.GetMerchantReply) => void): grpcWeb.ClientReadableStream<natasha_api_natasha_pb.GetMerchantReply>;
}
export declare class BlackWidowClient {
    client_: grpcWeb.AbstractClientBase;
    hostname_: string;
    credentials_: null | {
        [index: string]: string;
    };
    options_: null | {
        [index: string]: any;
    };
    constructor(hostname: string, credentials?: null | {
        [index: string]: string;
    }, options?: null | {
        [index: string]: any;
    });
    methodInfoMakePayment: any;
    makePayment(request: natasha_api_natasha_pb.MakePaymentRequest, metadata: grpcWeb.Metadata | null): Promise<natasha_api_natasha_pb.MakePaymentReply>;
    makePayment(request: natasha_api_natasha_pb.MakePaymentRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: natasha_api_natasha_pb.MakePaymentReply) => void): grpcWeb.ClientReadableStream<natasha_api_natasha_pb.MakePaymentReply>;
    methodInfoGetMerchantBalance: any;
    getMerchantBalance(request: natasha_api_natasha_pb.GetMerchantBalanceRequest, metadata: grpcWeb.Metadata | null): Promise<natasha_api_natasha_pb.GetMerchantBalanceReply>;
    getMerchantBalance(request: natasha_api_natasha_pb.GetMerchantBalanceRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: natasha_api_natasha_pb.GetMerchantBalanceReply) => void): grpcWeb.ClientReadableStream<natasha_api_natasha_pb.GetMerchantBalanceReply>;
    methodInfoListPayments: any;
    listPayments(request: natasha_api_natasha_pb.ListPaymentsRequest, metadata: grpcWeb.Metadata | null): Promise<natasha_api_natasha_pb.ListPaymentsReply>;
    listPayments(request: natasha_api_natasha_pb.ListPaymentsRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: natasha_api_natasha_pb.ListPaymentsReply) => void): grpcWeb.ClientReadableStream<natasha_api_natasha_pb.ListPaymentsReply>;
    methodInfoNotifyRejectPayment: any;
    notifyRejectPayment(request: natasha_api_natasha_pb.NotifyRejectPaymentRequest, metadata: grpcWeb.Metadata | null): Promise<natasha_api_natasha_pb.NotifyRejectPaymentReply>;
    notifyRejectPayment(request: natasha_api_natasha_pb.NotifyRejectPaymentRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: natasha_api_natasha_pb.NotifyRejectPaymentReply) => void): grpcWeb.ClientReadableStream<natasha_api_natasha_pb.NotifyRejectPaymentReply>;
}
export declare class RomanoffClient {
    client_: grpcWeb.AbstractClientBase;
    hostname_: string;
    credentials_: null | {
        [index: string]: string;
    };
    options_: null | {
        [index: string]: any;
    };
    constructor(hostname: string, credentials?: null | {
        [index: string]: string;
    }, options?: null | {
        [index: string]: any;
    });
    methodInfoListVouchers: any;
    listVouchers(request: natasha_api_natasha_pb.ListVouchersRequest, metadata: grpcWeb.Metadata | null): Promise<natasha_api_natasha_pb.ListVouchersReply>;
    listVouchers(request: natasha_api_natasha_pb.ListVouchersRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: natasha_api_natasha_pb.ListVouchersReply) => void): grpcWeb.ClientReadableStream<natasha_api_natasha_pb.ListVouchersReply>;
    methodInfoGetVoucher: any;
    getVoucher(request: natasha_api_natasha_pb.GetVoucherRequest, metadata: grpcWeb.Metadata | null): Promise<natasha_api_natasha_pb.GetVoucherReply>;
    getVoucher(request: natasha_api_natasha_pb.GetVoucherRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: natasha_api_natasha_pb.GetVoucherReply) => void): grpcWeb.ClientReadableStream<natasha_api_natasha_pb.GetVoucherReply>;
    methodInfoCreateVoucher: any;
    createVoucher(request: natasha_api_natasha_pb.CreateVoucherRequest, metadata: grpcWeb.Metadata | null): Promise<natasha_api_natasha_pb.CreateVoucherReply>;
    createVoucher(request: natasha_api_natasha_pb.CreateVoucherRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: natasha_api_natasha_pb.CreateVoucherReply) => void): grpcWeb.ClientReadableStream<natasha_api_natasha_pb.CreateVoucherReply>;
    methodInfoSubmitVoucher: any;
    submitVoucher(request: natasha_api_natasha_pb.SubmitVoucherRequest, metadata: grpcWeb.Metadata | null): Promise<natasha_api_natasha_pb.SubmitVoucherReply>;
    submitVoucher(request: natasha_api_natasha_pb.SubmitVoucherRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: natasha_api_natasha_pb.SubmitVoucherReply) => void): grpcWeb.ClientReadableStream<natasha_api_natasha_pb.SubmitVoucherReply>;
    methodInfoCancelVoucher: any;
    cancelVoucher(request: natasha_api_natasha_pb.CancelVoucherRequest, metadata: grpcWeb.Metadata | null): Promise<natasha_api_natasha_pb.CancelVoucherReply>;
    cancelVoucher(request: natasha_api_natasha_pb.CancelVoucherRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: natasha_api_natasha_pb.CancelVoucherReply) => void): grpcWeb.ClientReadableStream<natasha_api_natasha_pb.CancelVoucherReply>;
}
