"use strict";
/**
 * @fileoverview gRPC-Web generated client stub for natasha
 * @enhanceable
 * @public
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RomanoffClient = exports.BlackWidowClient = exports.NatashaClient = void 0;
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
var grpcWeb = __importStar(require("grpc-web"));
var natasha_api_natasha_pb = __importStar(require("./natasha_pb"));
var NatashaClient = /** @class */ (function () {
    function NatashaClient(hostname, credentials, options) {
        this.methodInfoCreateMerchant = new grpcWeb.AbstractClientBase.MethodInfo(natasha_api_natasha_pb.CreateMerchantReply, function (request) {
            return request.serializeBinary();
        }, natasha_api_natasha_pb.CreateMerchantReply.deserializeBinary);
        this.methodInfoUpdateMerchant = new grpcWeb.AbstractClientBase.MethodInfo(natasha_api_natasha_pb.UpdateMerchantReply, function (request) {
            return request.serializeBinary();
        }, natasha_api_natasha_pb.UpdateMerchantReply.deserializeBinary);
        this.methodInfoListMerchants = new grpcWeb.AbstractClientBase.MethodInfo(natasha_api_natasha_pb.ListMerchantsReply, function (request) {
            return request.serializeBinary();
        }, natasha_api_natasha_pb.ListMerchantsReply.deserializeBinary);
        this.methodInfoGetMerchant = new grpcWeb.AbstractClientBase.MethodInfo(natasha_api_natasha_pb.GetMerchantReply, function (request) {
            return request.serializeBinary();
        }, natasha_api_natasha_pb.GetMerchantReply.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'text';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname;
        this.credentials_ = credentials;
        this.options_ = options;
    }
    NatashaClient.prototype.createMerchant = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/natasha.Natasha/CreateMerchant', request, metadata || {}, this.methodInfoCreateMerchant, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/natasha.Natasha/CreateMerchant', request, metadata || {}, this.methodInfoCreateMerchant);
    };
    NatashaClient.prototype.updateMerchant = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/natasha.Natasha/UpdateMerchant', request, metadata || {}, this.methodInfoUpdateMerchant, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/natasha.Natasha/UpdateMerchant', request, metadata || {}, this.methodInfoUpdateMerchant);
    };
    NatashaClient.prototype.listMerchants = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/natasha.Natasha/ListMerchants', request, metadata || {}, this.methodInfoListMerchants, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/natasha.Natasha/ListMerchants', request, metadata || {}, this.methodInfoListMerchants);
    };
    NatashaClient.prototype.getMerchant = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/natasha.Natasha/GetMerchant', request, metadata || {}, this.methodInfoGetMerchant, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/natasha.Natasha/GetMerchant', request, metadata || {}, this.methodInfoGetMerchant);
    };
    return NatashaClient;
}());
exports.NatashaClient = NatashaClient;
var BlackWidowClient = /** @class */ (function () {
    function BlackWidowClient(hostname, credentials, options) {
        this.methodInfoMakePayment = new grpcWeb.AbstractClientBase.MethodInfo(natasha_api_natasha_pb.MakePaymentReply, function (request) {
            return request.serializeBinary();
        }, natasha_api_natasha_pb.MakePaymentReply.deserializeBinary);
        this.methodInfoGetMerchantBalance = new grpcWeb.AbstractClientBase.MethodInfo(natasha_api_natasha_pb.GetMerchantBalanceReply, function (request) {
            return request.serializeBinary();
        }, natasha_api_natasha_pb.GetMerchantBalanceReply.deserializeBinary);
        this.methodInfoListPayments = new grpcWeb.AbstractClientBase.MethodInfo(natasha_api_natasha_pb.ListPaymentsReply, function (request) {
            return request.serializeBinary();
        }, natasha_api_natasha_pb.ListPaymentsReply.deserializeBinary);
        this.methodInfoNotifyRejectPayment = new grpcWeb.AbstractClientBase.MethodInfo(natasha_api_natasha_pb.NotifyRejectPaymentReply, function (request) {
            return request.serializeBinary();
        }, natasha_api_natasha_pb.NotifyRejectPaymentReply.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'text';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname;
        this.credentials_ = credentials;
        this.options_ = options;
    }
    BlackWidowClient.prototype.makePayment = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/natasha.BlackWidow/MakePayment', request, metadata || {}, this.methodInfoMakePayment, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/natasha.BlackWidow/MakePayment', request, metadata || {}, this.methodInfoMakePayment);
    };
    BlackWidowClient.prototype.getMerchantBalance = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/natasha.BlackWidow/GetMerchantBalance', request, metadata || {}, this.methodInfoGetMerchantBalance, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/natasha.BlackWidow/GetMerchantBalance', request, metadata || {}, this.methodInfoGetMerchantBalance);
    };
    BlackWidowClient.prototype.listPayments = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/natasha.BlackWidow/ListPayments', request, metadata || {}, this.methodInfoListPayments, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/natasha.BlackWidow/ListPayments', request, metadata || {}, this.methodInfoListPayments);
    };
    BlackWidowClient.prototype.notifyRejectPayment = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/natasha.BlackWidow/NotifyRejectPayment', request, metadata || {}, this.methodInfoNotifyRejectPayment, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/natasha.BlackWidow/NotifyRejectPayment', request, metadata || {}, this.methodInfoNotifyRejectPayment);
    };
    return BlackWidowClient;
}());
exports.BlackWidowClient = BlackWidowClient;
var RomanoffClient = /** @class */ (function () {
    function RomanoffClient(hostname, credentials, options) {
        this.methodInfoListVouchers = new grpcWeb.AbstractClientBase.MethodInfo(natasha_api_natasha_pb.ListVouchersReply, function (request) {
            return request.serializeBinary();
        }, natasha_api_natasha_pb.ListVouchersReply.deserializeBinary);
        this.methodInfoGetVoucher = new grpcWeb.AbstractClientBase.MethodInfo(natasha_api_natasha_pb.GetVoucherReply, function (request) {
            return request.serializeBinary();
        }, natasha_api_natasha_pb.GetVoucherReply.deserializeBinary);
        this.methodInfoCreateVoucher = new grpcWeb.AbstractClientBase.MethodInfo(natasha_api_natasha_pb.CreateVoucherReply, function (request) {
            return request.serializeBinary();
        }, natasha_api_natasha_pb.CreateVoucherReply.deserializeBinary);
        this.methodInfoSubmitVoucher = new grpcWeb.AbstractClientBase.MethodInfo(natasha_api_natasha_pb.SubmitVoucherReply, function (request) {
            return request.serializeBinary();
        }, natasha_api_natasha_pb.SubmitVoucherReply.deserializeBinary);
        this.methodInfoCancelVoucher = new grpcWeb.AbstractClientBase.MethodInfo(natasha_api_natasha_pb.CancelVoucherReply, function (request) {
            return request.serializeBinary();
        }, natasha_api_natasha_pb.CancelVoucherReply.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'text';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname;
        this.credentials_ = credentials;
        this.options_ = options;
    }
    RomanoffClient.prototype.listVouchers = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/natasha.Romanoff/ListVouchers', request, metadata || {}, this.methodInfoListVouchers, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/natasha.Romanoff/ListVouchers', request, metadata || {}, this.methodInfoListVouchers);
    };
    RomanoffClient.prototype.getVoucher = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/natasha.Romanoff/GetVoucher', request, metadata || {}, this.methodInfoGetVoucher, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/natasha.Romanoff/GetVoucher', request, metadata || {}, this.methodInfoGetVoucher);
    };
    RomanoffClient.prototype.createVoucher = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/natasha.Romanoff/CreateVoucher', request, metadata || {}, this.methodInfoCreateVoucher, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/natasha.Romanoff/CreateVoucher', request, metadata || {}, this.methodInfoCreateVoucher);
    };
    RomanoffClient.prototype.submitVoucher = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/natasha.Romanoff/SubmitVoucher', request, metadata || {}, this.methodInfoSubmitVoucher, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/natasha.Romanoff/SubmitVoucher', request, metadata || {}, this.methodInfoSubmitVoucher);
    };
    RomanoffClient.prototype.cancelVoucher = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/natasha.Romanoff/CancelVoucher', request, metadata || {}, this.methodInfoCancelVoucher, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/natasha.Romanoff/CancelVoucher', request, metadata || {}, this.methodInfoCancelVoucher);
    };
    return RomanoffClient;
}());
exports.RomanoffClient = RomanoffClient;
