/**
 * @fileoverview gRPC-Web generated client stub for alopay.vision
 * @enhanceable
 * @public
 */
import * as grpcWeb from 'grpc-web';
import * as vision_api_vision_pb from './vision_pb';
export declare class VisionClient {
    client_: grpcWeb.AbstractClientBase;
    hostname_: string;
    credentials_: null | {
        [index: string]: string;
    };
    options_: null | {
        [index: string]: any;
    };
    constructor(hostname: string, credentials?: null | {
        [index: string]: string;
    }, options?: null | {
        [index: string]: any;
    });
    methodInfoGetIncomeStatement: any;
    getIncomeStatement(request: vision_api_vision_pb.GetReportRequest, metadata: grpcWeb.Metadata | null): Promise<vision_api_vision_pb.GetIncomeStatementReply>;
    getIncomeStatement(request: vision_api_vision_pb.GetReportRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: vision_api_vision_pb.GetIncomeStatementReply) => void): grpcWeb.ClientReadableStream<vision_api_vision_pb.GetIncomeStatementReply>;
    methodInfoGetPaymentToday: any;
    getPaymentToday(request: vision_api_vision_pb.GetReportRequest, metadata: grpcWeb.Metadata | null): Promise<vision_api_vision_pb.GetPaymentTodayReply>;
    getPaymentToday(request: vision_api_vision_pb.GetReportRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: vision_api_vision_pb.GetPaymentTodayReply) => void): grpcWeb.ClientReadableStream<vision_api_vision_pb.GetPaymentTodayReply>;
    methodInfoGetProfitRate: any;
    getProfitRate(request: vision_api_vision_pb.GetReportRequest, metadata: grpcWeb.Metadata | null): Promise<vision_api_vision_pb.GetProfitRateReply>;
    getProfitRate(request: vision_api_vision_pb.GetReportRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: vision_api_vision_pb.GetProfitRateReply) => void): grpcWeb.ClientReadableStream<vision_api_vision_pb.GetProfitRateReply>;
    methodInfoGetAllocationTopUpRate: any;
    getAllocationTopUpRate(request: vision_api_vision_pb.GetReportRequest, metadata: grpcWeb.Metadata | null): Promise<vision_api_vision_pb.GetAllocationTopUpRateReply>;
    getAllocationTopUpRate(request: vision_api_vision_pb.GetReportRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: vision_api_vision_pb.GetAllocationTopUpRateReply) => void): grpcWeb.ClientReadableStream<vision_api_vision_pb.GetAllocationTopUpRateReply>;
    methodInfoGetAllocationWithdrawRate: any;
    getAllocationWithdrawRate(request: vision_api_vision_pb.GetReportRequest, metadata: grpcWeb.Metadata | null): Promise<vision_api_vision_pb.GetAllocationWithdrawRateReply>;
    getAllocationWithdrawRate(request: vision_api_vision_pb.GetReportRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: vision_api_vision_pb.GetAllocationWithdrawRateReply) => void): grpcWeb.ClientReadableStream<vision_api_vision_pb.GetAllocationWithdrawRateReply>;
    methodInfoGetTopPaymentMethod: any;
    getTopPaymentMethod(request: vision_api_vision_pb.GetReportRequest, metadata: grpcWeb.Metadata | null): Promise<vision_api_vision_pb.GetTopPaymentMethodReply>;
    getTopPaymentMethod(request: vision_api_vision_pb.GetReportRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: vision_api_vision_pb.GetTopPaymentMethodReply) => void): grpcWeb.ClientReadableStream<vision_api_vision_pb.GetTopPaymentMethodReply>;
    methodInfoGetTopTeller: any;
    getTopTeller(request: vision_api_vision_pb.GetReportRequest, metadata: grpcWeb.Metadata | null): Promise<vision_api_vision_pb.GetTopTellerReply>;
    getTopTeller(request: vision_api_vision_pb.GetReportRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: vision_api_vision_pb.GetTopTellerReply) => void): grpcWeb.ClientReadableStream<vision_api_vision_pb.GetTopTellerReply>;
}
