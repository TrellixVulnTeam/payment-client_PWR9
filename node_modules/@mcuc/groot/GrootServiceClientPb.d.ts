/**
 * @fileoverview gRPC-Web generated client stub for mcuc.groot
 * @enhanceable
 * @public
 */
import * as grpcWeb from 'grpc-web';
import * as groot_api_groot_pb from './groot_pb';
export declare class GrootClient {
    client_: grpcWeb.AbstractClientBase;
    hostname_: string;
    credentials_: null | {
        [index: string]: string;
    };
    options_: null | {
        [index: string]: any;
    };
    constructor(hostname: string, credentials?: null | {
        [index: string]: string;
    }, options?: null | {
        [index: string]: any;
    });
    methodInfoGetCard: any;
    getCard(request: groot_api_groot_pb.GetCardRequest, metadata: grpcWeb.Metadata | null): Promise<groot_api_groot_pb.Card>;
    getCard(request: groot_api_groot_pb.GetCardRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: groot_api_groot_pb.Card) => void): grpcWeb.ClientReadableStream<groot_api_groot_pb.Card>;
    methodInfoChargeCard: any;
    chargeCard(request: groot_api_groot_pb.ChargeCardRequest, metadata: grpcWeb.Metadata | null): Promise<groot_api_groot_pb.ChargeCardReply>;
    chargeCard(request: groot_api_groot_pb.ChargeCardRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: groot_api_groot_pb.ChargeCardReply) => void): grpcWeb.ClientReadableStream<groot_api_groot_pb.ChargeCardReply>;
    methodInfoGetTxIDByCard: any;
    getTxIDByCard(request: groot_api_groot_pb.GetTxIDByCardRequest, metadata: grpcWeb.Metadata | null): Promise<groot_api_groot_pb.GetTxIDByCardReply>;
    getTxIDByCard(request: groot_api_groot_pb.GetTxIDByCardRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: groot_api_groot_pb.GetTxIDByCardReply) => void): grpcWeb.ClientReadableStream<groot_api_groot_pb.GetTxIDByCardReply>;
}
