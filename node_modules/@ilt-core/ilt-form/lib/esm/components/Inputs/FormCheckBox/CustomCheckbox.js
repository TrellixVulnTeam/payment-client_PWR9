var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React from 'react';
import clsx from 'clsx';
import { makeStyles } from '@material-ui/core/styles';
import { Checkbox } from '@material-ui/core';
import IndeterminateCheckboxIcon from '../../icons/CheckboxIcon/IndeterminateCheckboxIcon';
export var CustomCheckbox = React.memo(function (props) {
    var classes = useStyles();
    return (React.createElement(Checkbox, __assign({ indeterminate: (props === null || props === void 0 ? void 0 : props.checked) === null, indeterminateIcon: React.createElement(IndeterminateCheckboxIcon, { width: "18px", height: "18px" }), icon: React.createElement("span", { className: classes.icon }), checkedIcon: React.createElement("span", { className: clsx(classes.icon, classes.checkedIcon) }) }, props, { checked: !!props.checked, className: classes.muiCheckboxRoot })));
}, function (prevProps, nextProps) {
    return (prevProps.checked === nextProps.checked &&
        prevProps.key === nextProps.key &&
        prevProps.onChange === nextProps.onChange &&
        prevProps.indeterminate === nextProps.indeterminate);
});
var useStyles = makeStyles({
    root: {
        zIndex: 2,
    },
    muiCheckboxRoot: {
        padding: 4,
        marginRight: 4,
    },
    icon: {
        borderRadius: 4,
        width: 18,
        height: 18,
        boxShadow: "inset 0 0 0 2px #c1c9d5",
        backgroundColor: '#ffffff',
        'input:hover ~ &': {
            backgroundColor: '#ebf1f5',
        },
        'input:disabled ~ &': {
            boxShadow: 'none',
            background: '#EBEBEB',
        },
    },
    checkedIcon: {
        boxShadow: 'inset 0 0 0 0px #DBDBDB',
        backgroundColor: '#F9930B',
        '&:before': {
            display: 'block',
            width: 18,
            height: 18,
            backgroundImage: "url(\"data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M6.2 10.8C6.3 10.9 6.4 11 6.5 11C6.7 11 6.8 11 6.9 11C7 11 7.2 11 7.3 10.9C7.4 10.8 7.5 10.8 7.6 10.7L11.7 6.6C11.9 6.5 12 6.2 12 6C12 5.8 11.9 5.5 11.7 5.3C11.5 5.1 11.3 5 11 5C10.7 5 10.5 5.1 10.3 5.3L6.9 8.7L5.7 7.4C5.5 7.2 5.3 7.1 5 7.1C4.7 7.1 4.5 7.2 4.3 7.4C4.1 7.6 4 7.9 4 8.1C4 8.3 4.1 8.6 4.3 8.8L6.2 10.8Z' fill='white'/%3E%3C/svg%3E%0A\")",
            content: '""',
        },
        'input:hover ~ &': {
            backgroundColor: '#F9930B',
        },
    },
});
