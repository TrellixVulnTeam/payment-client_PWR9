"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
function SvgComponent(props) {
    return (React.createElement("svg", __assign({ width: 20, height: 16, viewBox: "0 0 20 16", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, props),
        React.createElement("path", { d: "M19.916 7.6C17.898 2.91 14.1 0 10 0S2.103 2.91.083 7.6a1 1 0 000 .8C2.103 13.09 5.901 16 10 16s7.897-2.91 9.916-7.6a1 1 0 000-.8zM10 14c-3.169 0-6.168-2.29-7.897-6C3.833 4.29 6.83 2 10 2c3.169 0 6.168 2.29 7.897 6-1.73 3.71-4.728 6-7.897 6zm0-10a3.998 3.998 0 00-3.922 4.78 4 4 0 005.452 2.915 3.998 3.998 0 001.297-6.523A3.998 3.998 0 0010 4zm0 6a1.999 1.999 0 110-3.998A1.999 1.999 0 0110 10z", fill: "currentColor" })));
}
exports.default = SvgComponent;
