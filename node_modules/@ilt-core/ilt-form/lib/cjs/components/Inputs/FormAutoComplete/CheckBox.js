"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormAutoCompleteCheckBox = void 0;
var react_1 = __importStar(require("react"));
var core_1 = require("@material-ui/core");
var react_hook_form_1 = require("react-hook-form");
var lab_1 = require("@material-ui/lab");
var icons_1 = require("../../icons");
var FormHelperText_1 = __importDefault(require("../../helper/FormHelperText"));
var useStyles = core_1.makeStyles({
    option: {
        height: 40,
        paddingLeft: 8,
        marginBottom: 8,
        backgroundColor: '#FFFFFF',
        '&:first-child': {
            marginTop: 8,
        },
        '&[aria-selected="true"] ': {
            backgroundColor: 'white',
        },
        '&[data-focus="true"]': {
            backgroundColor: '#EDF0F3',
        },
    },
    inputRoot: {
        paddingRight: '1px !important',
        paddingBottom: '0px !important',
        '& $input': {
            padding: '12px 24px !important',
        },
    },
    endAdornment: {
        top: 0,
        position: 'unset',
    },
    clearIndicator: {
        padding: '11px',
        margin: '0px',
    },
    popupIndicator: {
        padding: '11px',
        margin: '0px',
    },
    popupIndicatorOpen: {
        transform: 'rotate(0deg)',
    },
    listbox: {
        padding: 0,
    },
});
exports.FormAutoCompleteCheckBox = react_1.default.forwardRef(function (props, ref) {
    var classes = useStyles();
    var _a = react_hook_form_1.useFormContext(), setValue = _a.setValue, errors = _a.formState.errors;
    var name = props.name, label = props.label, placeholder = props.placeholder, value = props.value, options = props.options, disabled = props.disabled, popupIcon = props.popupIcon, onBlur = props.onBlur, onSync = props.onSync, renderOption = props.renderOption, renderTags = props.renderTags, renderGroup = props.renderGroup, renderReset = props.renderReset;
    var _b = react_1.useState(react_1.useMemo(function () { return value || []; }, [])), val = _b[0], setVal = _b[1];
    react_1.useEffect(function () {
        if (value !== val)
            setVal(value || []);
    }, [value]);
    var resetSelection = function () {
        setValue(name, []);
        setVal([]);
        onSync();
    };
    return (react_1.default.createElement(lab_1.Autocomplete, { multiple: true, disableCloseOnSelect: true, fullWidth: true, autoComplete: true, autoHighlight: true, value: val, classes: classes, options: options || [], groupBy: function (_a) {
            var category = _a.category;
            return category || '';
        }, getOptionLabel: function (option) { return option.label; }, getOptionDisabled: function (_a) {
            var disabled = _a.disabled;
            return !!disabled;
        }, disabled: !!disabled, onChange: function (e, options) {
            e.preventDefault();
            setValue(name, options);
            setVal(options);
            onSync();
        }, onBlur: onBlur, popupIcon: popupIcon || react_1.default.createElement(icons_1.Search, null), closeIcon: react_1.default.createElement(icons_1.Close, null), renderOption: renderOption, renderGroup: function (params) {
            return (react_1.default.createElement(react_1.default.Fragment, null,
                !params.key && (react_1.default.createElement(core_1.Box, { padding: 2, paddingBottom: 0, onClick: resetSelection }, val.length > 0 && renderReset ? renderReset() : '')),
                renderGroup && renderGroup(params)));
        }, renderTags: renderTags, renderInput: function (params) {
            var _a;
            return (react_1.default.createElement(core_1.TextField, __assign({}, params, { label: label, placeholder: placeholder, inputRef: ref, InputLabelProps: {
                    shrink: true,
                }, error: !!errors[name], helperText: react_1.default.createElement(FormHelperText_1.default, { message: (_a = errors[name]) === null || _a === void 0 ? void 0 : _a.message }) })));
        } }));
});
exports.default = exports.FormAutoCompleteCheckBox;
