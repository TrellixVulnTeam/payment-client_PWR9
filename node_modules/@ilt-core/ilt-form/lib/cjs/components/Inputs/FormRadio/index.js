"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormRadio = void 0;
var react_1 = __importDefault(require("react"));
var core_1 = require("@material-ui/core");
var react_hook_form_1 = require("react-hook-form");
var FormHelperText_1 = __importDefault(require("../../helper/FormHelperText"));
exports.FormRadio = react_1.default.forwardRef(function (props, ref) {
    var _a;
    var errors = react_hook_form_1.useFormContext().formState.errors;
    var name = props.name, label = props.label, _b = props.value, value = _b === void 0 ? '' : _b, options = props.options, 
    // helperText,
    disabled = props.disabled, onChange = props.onChange, onSync = props.onSync, _c = props.customWidth, customWidth = _c === void 0 ? false : _c, _d = props.colNum, colNum = _d === void 0 ? 1 : _d;
    var handleChange = function (event) {
        onChange(event);
        onSync();
    };
    return (react_1.default.createElement(core_1.FormControl, { component: "div", fullWidth: true, error: !!errors[name], disabled: disabled },
        react_1.default.createElement(core_1.FormLabel, null, label),
        react_1.default.createElement(core_1.RadioGroup, { row: true, "aria-label": name, name: name, value: "" + value, onChange: handleChange, ref: ref }, options === null || options === void 0 ? void 0 : options.map(function (option, index) {
            return !customWidth ? (react_1.default.createElement(core_1.FormControlLabel, { value: "" + option.value, control: react_1.default.createElement(core_1.Radio, { color: "primary" }), label: option.label, key: index })) : (react_1.default.createElement(core_1.FormControlLabel, { value: "" + option.value, control: react_1.default.createElement(core_1.Radio, { color: "primary" }), label: option.label, key: index, style: {
                    maxWidth: "calc(" + 100 / colNum + "%)",
                    flex: "0 0 calc(" + 100 / colNum + "% )",
                } }));
        })),
        react_1.default.createElement(core_1.FormHelperText, null,
            react_1.default.createElement(FormHelperText_1.default, { message: (_a = errors[name]) === null || _a === void 0 ? void 0 : _a.message }))));
});
