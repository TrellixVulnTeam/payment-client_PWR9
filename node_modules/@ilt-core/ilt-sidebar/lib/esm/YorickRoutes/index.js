import React from 'react';
import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';
import { makeStyles } from '@material-ui/core';
import CustomRoute from './CustomRoute';
import AdminLayout from '../components/Layout/Default';
import { LoadingProgressBar } from '../components/LoadingProgressBar';
export var TemplateContext = React.createContext({
    routes: [],
    sidebar: [],
    subSidebar: [],
    config: {},
    userPermissions: [],
});
var useStyles = makeStyles({
    mainComponent: {
        zIndex: 10,
        width: '100%',
        height: '100%',
    },
});
export var YorickTemplate = function (props) {
    var routes = props.routes;
    var classes = useStyles();
    var NestedRoute = function (routes, firstLayer) { return (React.createElement(Switch, null, routes === null || routes === void 0 ? void 0 : routes.map(function (route, i) {
        var _a;
        var LayoutComponent = route.layout || AdminLayout;
        return ((_a = route.routes) === null || _a === void 0 ? void 0 : _a.length) ? (React.createElement(Route, { path: route.path, exact: route.exact, key: i }, firstLayer ? (React.createElement(LayoutComponent, null, NestedRoute(route.routes))) : (NestedRoute(route.routes)))) : firstLayer ? (React.createElement(Route, { path: route.path, exact: route.exact, key: i },
            React.createElement(LayoutComponent, null,
                React.createElement(Route, { path: route.path, exact: !!route.exact, render: function (routeProps) { return (React.createElement(CustomRoute, { route: route, routeProps: routeProps })); } })))) : (React.createElement(Route, { key: i, path: route.path, exact: !!route.exact, render: function (routeProps) { return (React.createElement(CustomRoute, { route: route, routeProps: routeProps })); } }));
    }))); };
    return (React.createElement(Router, null,
        React.createElement(TemplateContext.Provider, { value: props },
            React.createElement(LoadingProgressBar, null),
            React.createElement("div", { className: classes.mainComponent }, NestedRoute(routes, true)))));
};
