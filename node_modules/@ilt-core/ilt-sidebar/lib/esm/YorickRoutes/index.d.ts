import React from 'react';
export interface YorickRoute {
    path: string | string[];
    component: any;
    exact?: boolean;
    routes?: YorickRoute[];
    layout?: any;
    guards?: any;
}
export interface YorickMenuOption {
    path: string;
    icon?: any;
    title: string;
    onClick?: () => void;
    permissions?: string[];
}
export interface YorickSidebar extends YorickMenuOption {
    children?: YorickSidebar[];
}
export interface YorickTemplateConfig {
    appBar?: {
        avatar?: string;
        background?: string;
        border?: string;
        className?: string;
        dropdown?: YorickMenuOption[];
        height?: number;
        iconExpandLess?: React.ReactNode;
        iconExpandMore?: React.ReactNode;
        renderAvatar?: React.ReactNode;
        renderAfterLogo?: React.ReactNode;
        renderBeforeAvatar?: React.ReactNode;
        renderAfterAvatar?: React.ReactNode;
        userName?: string;
    };
    breadcrumbs?: {
        homeText?: string;
        padding?: string | number;
    };
    color?: {
        primary?: string;
        secondary?: string;
        hover?: string;
        loading?: string;
    };
    drawer?: {
        background?: string;
        border?: string;
        className?: string;
        iconExpandLess?: React.ReactNode;
        iconExpandMore?: React.ReactNode;
        spaceSidebar?: number;
        spaceExpandMenu?: number;
        spaceSubSidebar?: number;
        spaceDivider?: number;
        width?: number;
    };
    logo?: React.ReactNode;
    logoPosition?: 'AppBar' | 'Drawer';
    loadingComponent?: React.ReactNode;
    menu?: {
        show?: boolean;
        collapsed?: boolean;
    };
    renderBreadcrumbs?: boolean;
}
export interface YorickTemplateProps {
    routes: YorickRoute[];
    sidebar: YorickSidebar[];
    subSidebar: YorickSidebar[];
    config: YorickTemplateConfig;
    userPermissions: string[];
}
export declare const TemplateContext: React.Context<YorickTemplateProps>;
export declare const YorickTemplate: React.FC<YorickTemplateProps>;
