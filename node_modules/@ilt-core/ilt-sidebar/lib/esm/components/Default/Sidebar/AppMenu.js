import React, { useContext } from 'react';
import { Divider, List, createStyles, makeStyles } from '@material-ui/core';
import AppMenuItem from './AppMenuItem';
import { TemplateContext } from '../../../YorickRoutes';
import AllowedTo from '../../../helper/AllowedTo';
var useStyles = makeStyles(function () {
    var drawer = useContext(TemplateContext).config.drawer;
    return createStyles({
        menu: {
            marginTop: 16,
            '& > a': {
                margin: "0px 0px " + ((drawer === null || drawer === void 0 ? void 0 : drawer.spaceSidebar) || 16) + "px",
                '&:last-child': {
                    margin: '0px 0px 0px',
                },
            },
        },
        subMenu: {
            '& > a': {
                margin: "0px 0px " + ((drawer === null || drawer === void 0 ? void 0 : drawer.spaceSubSidebar) || 12) + "px",
            },
        },
        divider: {
            borderTop: (drawer === null || drawer === void 0 ? void 0 : drawer.border) || '1px solid #ebebeb',
            margin: ((drawer === null || drawer === void 0 ? void 0 : drawer.spaceDivider) || 20) + "px 0px",
        },
    });
});
var AppMenu = function (props) {
    var sidebar = props.sidebar, subSidebar = props.subSidebar;
    var classes = useStyles();
    return (React.createElement(React.Fragment, null,
        React.createElement(List, { component: "nav", disablePadding: true, className: classes.menu }, sidebar === null || sidebar === void 0 ? void 0 : sidebar.map(function (item) { return (React.createElement(AllowedTo, { perform: (item === null || item === void 0 ? void 0 : item.permissions) || [], logic: "or" },
            React.createElement(AppMenuItem, { item: item, key: item.path }))); })),
        React.createElement(List, { component: "nav", disablePadding: true, className: classes.subMenu },
            (subSidebar === null || subSidebar === void 0 ? void 0 : subSidebar.length) ? React.createElement(Divider, { className: classes.divider }) : React.createElement(React.Fragment, null), subSidebar === null || subSidebar === void 0 ? void 0 :
            subSidebar.map(function (item) { return (React.createElement(AllowedTo, { perform: (item === null || item === void 0 ? void 0 : item.permissions) || [], logic: "or" },
                React.createElement(AppMenuItem, { item: item, key: item.path, useSub: true }))); }))));
};
export default AppMenu;
