var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React, { useContext } from 'react';
import { Avatar, Box, Button, ClickAwayListener, createStyles, Grow, ListItemIcon, ListItemText, makeStyles, MenuItem, MenuList, Paper, Popper, } from '@material-ui/core';
import IconExpandLess from '@material-ui/icons/ExpandLess';
import IconExpandMore from '@material-ui/icons/ExpandMore';
import { TemplateContext } from '../../../YorickRoutes';
import MenuItemWrapper from './MenuItemWrapper';
export var ProfileConfig = React.createContext({
    avatar: 'https://material-ui.com/static/images/avatar/1.jpg',
    name: 'User Name',
});
var MenuListComposition = function () {
    var classes = useStyles();
    var appBar = useContext(TemplateContext).config.appBar;
    var name = useContext(ProfileConfig).name;
    var _a = React.useState(false), open = _a[0], setOpen = _a[1];
    var anchorRef = React.useRef(null);
    var handleToggle = function () {
        setOpen(function (prevOpen) { return !prevOpen; });
    };
    var handleClose = function (event) {
        if (anchorRef.current &&
            anchorRef.current.contains(event.target)) {
            return;
        }
        setOpen(false);
    };
    function handleListKeyDown(event) {
        if (event.key === 'Tab') {
            event.preventDefault();
            setOpen(false);
        }
    }
    // return focus to the button when we transitioned from !open -> open
    var prevOpen = React.useRef(open);
    React.useEffect(function () {
        if (prevOpen.current === true && open === false) {
            anchorRef.current.focus();
        }
        prevOpen.current = open;
    }, [open]);
    var iconExpandLess = (appBar === null || appBar === void 0 ? void 0 : appBar.iconExpandLess) || React.createElement(IconExpandLess, null);
    var iconExpandMore = (appBar === null || appBar === void 0 ? void 0 : appBar.iconExpandMore) || React.createElement(IconExpandMore, null);
    return (React.createElement("div", { className: classes.root },
        React.createElement(Button, { ref: anchorRef, "aria-controls": open ? 'menu-list-grow' : undefined, "aria-haspopup": "true", onClick: handleToggle, className: classes.dropdownButton + " " + (open ? 'active' : '') },
            React.createElement(ProfileConfig.Consumer, null, function (_a) {
                var avatar = _a.avatar;
                {
                    return typeof avatar === 'string' ? (React.createElement(Avatar, { alt: avatar, src: avatar, className: classes.avatar })) : (avatar);
                }
            }),
            React.createElement(Box, { className: classes.userName }, name),
            open && iconExpandLess,
            !open && iconExpandMore),
        React.createElement(Popper, { open: open, anchorEl: anchorRef.current, role: '', transition: true, 
            // disablePortal
            // keepMounted
            placement: "top-end", modifiers: {
                offset: {
                    enabled: true,
                    offset: '0, 8', // https://popper.js.org/docs/v1/#modifiersoffset
                },
            }, style: { zIndex: 9999 } }, function (_a) {
            var _b, _c;
            var TransitionProps = _a.TransitionProps, placement = _a.placement;
            return (React.createElement(Grow, __assign({}, TransitionProps, { style: {
                    transformOrigin: placement === 'bottom' ? 'top-end' : 'bottom-end',
                    minWidth: (_b = anchorRef.current) === null || _b === void 0 ? void 0 : _b.offsetWidth,
                } }),
                React.createElement(Paper, { className: classes.paper },
                    React.createElement(ClickAwayListener, { onClickAway: handleClose },
                        React.createElement(MenuList, { id: "menu-list-grow", variant: "selectedMenu", autoFocusItem: open, onKeyDown: handleListKeyDown }, (_c = appBar === null || appBar === void 0 ? void 0 : appBar.dropdown) === null || _c === void 0 ? void 0 : _c.map(function (item, index) {
                            var _a, _b;
                            return (React.createElement("div", { key: index, className: classes.linkItem },
                                ((_a = appBar === null || appBar === void 0 ? void 0 : appBar.dropdown) === null || _a === void 0 ? void 0 : _a.length) &&
                                    appBar.dropdown.length >= 2 &&
                                    index == ((_b = appBar.dropdown) === null || _b === void 0 ? void 0 : _b.length) - 1 && (React.createElement("hr", { className: classes.divider })),
                                React.createElement(MenuItemWrapper, { item: item },
                                    React.createElement(MenuItem, { onClick: handleClose, className: classes.listItem },
                                        !!item.icon && (React.createElement(ListItemIcon, { className: classes.listIconItem },
                                            React.createElement(item.icon, null))),
                                        React.createElement(ListItemText, { primary: item.title, className: classes.listText })))));
                        }))))));
        })));
};
export default MenuListComposition;
var useStyles = makeStyles(function (theme) {
    return createStyles({
        root: {
            display: 'flex',
        },
        dropdownButton: {
            fontWeight: 600,
            fontSize: 16,
            lineHeight: '150%',
            letterSpacing: 0.5,
            color: theme.palette.secondary.main,
            borderRadius: 4,
            border: '1px solid #fff',
            padding: '3px 5px 3px 11px',
            maxWidth: 350,
            '&:hover , &.active': {
                backgroundColor: '#fff',
                border: "1px solid " + theme.palette.primary.main,
            },
        },
        userName: {
            flexGrow: 1,
            justifyContent: 'flex-start',
            textTransform: 'capitalize',
            margin: '0px 8px',
            overflow: 'hidden',
            display: 'inline-block',
            textAlign: 'start',
            textOverflow: 'ellipsis',
            whiteSpace: 'nowrap',
        },
        avatar: {
            width: 24,
            height: 24,
        },
        paper: {
            border: '1px solid #DBDBDB',
            boxShadow: '0px 8px 16px rgba(37, 37, 51, 0.24)',
        },
        linkItem: {
            '&:last-child': {
                '& $listItem': {
                    color: '#FF4322',
                },
            },
            '&:not(:last-child)': {
                '& $listItem': {
                    marginBottom: 4,
                },
            },
        },
        listItem: {
            color: theme.palette.secondary.main,
            '&:hover': {
                backgroundColor: '#F5F5F5',
            },
        },
        listIconItem: {
            minWidth: 28,
            color: 'inherit',
        },
        listText: {
            fontWeight: 600,
            fontSize: 14,
            lineHeight: '145%',
            letterSpacing: 0.75,
            margin: 0,
        },
        divider: {
            border: '1px solid #F5F5F5',
            marginBottom: 4,
        },
    });
});
