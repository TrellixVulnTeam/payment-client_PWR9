"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProfileConfig = void 0;
var react_1 = __importStar(require("react"));
var core_1 = require("@material-ui/core");
var ExpandLess_1 = __importDefault(require("@material-ui/icons/ExpandLess"));
var ExpandMore_1 = __importDefault(require("@material-ui/icons/ExpandMore"));
var YorickRoutes_1 = require("../../../YorickRoutes");
var MenuItemWrapper_1 = __importDefault(require("./MenuItemWrapper"));
exports.ProfileConfig = react_1.default.createContext({
    avatar: 'https://material-ui.com/static/images/avatar/1.jpg',
    name: 'User Name',
});
var MenuListComposition = function () {
    var classes = useStyles();
    var appBar = react_1.useContext(YorickRoutes_1.TemplateContext).config.appBar;
    var name = react_1.useContext(exports.ProfileConfig).name;
    var _a = react_1.default.useState(false), open = _a[0], setOpen = _a[1];
    var anchorRef = react_1.default.useRef(null);
    var handleToggle = function () {
        setOpen(function (prevOpen) { return !prevOpen; });
    };
    var handleClose = function (event) {
        if (anchorRef.current &&
            anchorRef.current.contains(event.target)) {
            return;
        }
        setOpen(false);
    };
    function handleListKeyDown(event) {
        if (event.key === 'Tab') {
            event.preventDefault();
            setOpen(false);
        }
    }
    // return focus to the button when we transitioned from !open -> open
    var prevOpen = react_1.default.useRef(open);
    react_1.default.useEffect(function () {
        if (prevOpen.current === true && open === false) {
            anchorRef.current.focus();
        }
        prevOpen.current = open;
    }, [open]);
    var iconExpandLess = (appBar === null || appBar === void 0 ? void 0 : appBar.iconExpandLess) || react_1.default.createElement(ExpandLess_1.default, null);
    var iconExpandMore = (appBar === null || appBar === void 0 ? void 0 : appBar.iconExpandMore) || react_1.default.createElement(ExpandMore_1.default, null);
    return (react_1.default.createElement("div", { className: classes.root },
        react_1.default.createElement(core_1.Button, { ref: anchorRef, "aria-controls": open ? 'menu-list-grow' : undefined, "aria-haspopup": "true", onClick: handleToggle, className: classes.dropdownButton + " " + (open ? 'active' : '') },
            react_1.default.createElement(exports.ProfileConfig.Consumer, null, function (_a) {
                var avatar = _a.avatar;
                {
                    return typeof avatar === 'string' ? (react_1.default.createElement(core_1.Avatar, { alt: avatar, src: avatar, className: classes.avatar })) : (avatar);
                }
            }),
            react_1.default.createElement(core_1.Box, { className: classes.userName }, name),
            open && iconExpandLess,
            !open && iconExpandMore),
        react_1.default.createElement(core_1.Popper, { open: open, anchorEl: anchorRef.current, role: '', transition: true, 
            // disablePortal
            // keepMounted
            placement: "top-end", modifiers: {
                offset: {
                    enabled: true,
                    offset: '0, 8', // https://popper.js.org/docs/v1/#modifiersoffset
                },
            }, style: { zIndex: 9999 } }, function (_a) {
            var _b, _c;
            var TransitionProps = _a.TransitionProps, placement = _a.placement;
            return (react_1.default.createElement(core_1.Grow, __assign({}, TransitionProps, { style: {
                    transformOrigin: placement === 'bottom' ? 'top-end' : 'bottom-end',
                    minWidth: (_b = anchorRef.current) === null || _b === void 0 ? void 0 : _b.offsetWidth,
                } }),
                react_1.default.createElement(core_1.Paper, { className: classes.paper },
                    react_1.default.createElement(core_1.ClickAwayListener, { onClickAway: handleClose },
                        react_1.default.createElement(core_1.MenuList, { id: "menu-list-grow", variant: "selectedMenu", autoFocusItem: open, onKeyDown: handleListKeyDown }, (_c = appBar === null || appBar === void 0 ? void 0 : appBar.dropdown) === null || _c === void 0 ? void 0 : _c.map(function (item, index) {
                            var _a, _b;
                            return (react_1.default.createElement("div", { key: index, className: classes.linkItem },
                                ((_a = appBar === null || appBar === void 0 ? void 0 : appBar.dropdown) === null || _a === void 0 ? void 0 : _a.length) &&
                                    appBar.dropdown.length >= 2 &&
                                    index == ((_b = appBar.dropdown) === null || _b === void 0 ? void 0 : _b.length) - 1 && (react_1.default.createElement("hr", { className: classes.divider })),
                                react_1.default.createElement(MenuItemWrapper_1.default, { item: item },
                                    react_1.default.createElement(core_1.MenuItem, { onClick: handleClose, className: classes.listItem },
                                        !!item.icon && (react_1.default.createElement(core_1.ListItemIcon, { className: classes.listIconItem },
                                            react_1.default.createElement(item.icon, null))),
                                        react_1.default.createElement(core_1.ListItemText, { primary: item.title, className: classes.listText })))));
                        }))))));
        })));
};
exports.default = MenuListComposition;
var useStyles = core_1.makeStyles(function (theme) {
    return core_1.createStyles({
        root: {
            display: 'flex',
        },
        dropdownButton: {
            fontWeight: 600,
            fontSize: 16,
            lineHeight: '150%',
            letterSpacing: 0.5,
            color: theme.palette.secondary.main,
            borderRadius: 4,
            border: '1px solid #fff',
            padding: '3px 5px 3px 11px',
            maxWidth: 350,
            '&:hover , &.active': {
                backgroundColor: '#fff',
                border: "1px solid " + theme.palette.primary.main,
            },
        },
        userName: {
            flexGrow: 1,
            justifyContent: 'flex-start',
            textTransform: 'capitalize',
            margin: '0px 8px',
            overflow: 'hidden',
            display: 'inline-block',
            textAlign: 'start',
            textOverflow: 'ellipsis',
            whiteSpace: 'nowrap',
        },
        avatar: {
            width: 24,
            height: 24,
        },
        paper: {
            border: '1px solid #DBDBDB',
            boxShadow: '0px 8px 16px rgba(37, 37, 51, 0.24)',
        },
        linkItem: {
            '&:last-child': {
                '& $listItem': {
                    color: '#FF4322',
                },
            },
            '&:not(:last-child)': {
                '& $listItem': {
                    marginBottom: 4,
                },
            },
        },
        listItem: {
            color: theme.palette.secondary.main,
            '&:hover': {
                backgroundColor: '#F5F5F5',
            },
        },
        listIconItem: {
            minWidth: 28,
            color: 'inherit',
        },
        listText: {
            fontWeight: 600,
            fontSize: 14,
            lineHeight: '145%',
            letterSpacing: 0.75,
            margin: 0,
        },
        divider: {
            border: '1px solid #F5F5F5',
            marginBottom: 4,
        },
    });
});
