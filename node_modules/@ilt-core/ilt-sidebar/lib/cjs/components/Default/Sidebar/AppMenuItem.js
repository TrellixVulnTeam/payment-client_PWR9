"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var core_1 = require("@material-ui/core");
var react_router_1 = require("react-router");
var ExpandLess_1 = __importDefault(require("@material-ui/icons/ExpandLess"));
var ExpandMore_1 = __importDefault(require("@material-ui/icons/ExpandMore"));
var AppMenuItemComponent_1 = __importDefault(require("./AppMenuItemComponent"));
var YorickRoutes_1 = require("../../../YorickRoutes");
var AllowedTo_1 = __importDefault(require("../../../helper/AllowedTo"));
var useStyles = core_1.makeStyles(function (theme) {
    var drawer = react_1.useContext(YorickRoutes_1.TemplateContext).config.drawer;
    return core_1.createStyles({
        menuItem: {
            width: '100%',
            height: 36,
            borderRadius: 8,
            fontSize: 14,
            fontWeight: 600,
            color: theme.palette.secondary.main,
            '&.active': {
                backgroundColor: theme.palette.warning.main,
                color: theme.palette.primary.main,
                '&::before': {
                    height: '100%',
                    width: '4px',
                    display: 'block',
                    backgroundColor: theme.palette.primary.main,
                    content: '""',
                    borderRadius: '0px 4px 4px 0px',
                    left: '-24px',
                    position: 'absolute',
                },
            },
            '&:hover': {
                background: theme.palette.warning.main,
            },
        },
        menuItemIcon: {
            width: '20px',
            height: '20px',
        },
        // Sub Items
        MuiListRoot: {
            marginTop: 0,
            marginBottom: (drawer === null || drawer === void 0 ? void 0 : drawer.spaceSidebar) || 16,
            '& > a': {
                margin: "0px 0px " + ((drawer === null || drawer === void 0 ? void 0 : drawer.spaceExpandMenu) || 8) + "px",
                fontWeight: 400,
                color: theme.palette.secondary.light,
            },
        },
    });
});
var AppMenuItem = function (props) {
    var classes = useStyles();
    var drawer = react_1.useContext(YorickRoutes_1.TemplateContext).config.drawer;
    var item = props.item, useSub = props.useSub;
    var title = item.title, path = item.path, icon = item.icon, _a = item.children, children = _a === void 0 ? [] : _a;
    var isExpandable = children && children.length > 0;
    var theme = core_1.useTheme();
    var pathname = react_router_1.useLocation().pathname;
    if (pathname.endsWith('/')) {
        pathname = pathname.slice(0, -1);
    }
    var checkCollapseOpen = function (item) {
        var path = item.path, children = item.children;
        if (path.endsWith('/')) {
            path = path.slice(0, -1);
        }
        if (pathname.includes(path))
            return true;
        if (children === null || children === void 0 ? void 0 : children.length) {
            for (var i = 0; i < children.length; i++) {
                if (checkCollapseOpen(children[i]))
                    return true;
            }
        }
        return false;
    };
    var matched = react_1.useMemo(function () {
        return checkCollapseOpen(item);
    }, [pathname]);
    var _b = react_1.useState(matched), open = _b[0], setOpen = _b[1];
    function handleClick() {
        setOpen(!open);
    }
    var iconStyle = matched
        ? { color: "" + (matched && theme.palette.primary.main) }
        : {};
    var iconExpandLess = (drawer === null || drawer === void 0 ? void 0 : drawer.iconExpandLess) || (react_1.default.createElement(ExpandLess_1.default, { className: classes.menuItemIcon }));
    var iconExpandMore = (drawer === null || drawer === void 0 ? void 0 : drawer.iconExpandMore) || (react_1.default.createElement(ExpandMore_1.default, { className: classes.menuItemIcon }));
    var MenuItemRoot = (react_1.default.createElement(AppMenuItemComponent_1.default, { className: classes.menuItem + " ilt-custom-item", link: children.length ? null : path, onClick: handleClick, isActive: pathname.includes(path) },
        !!icon && (react_1.default.createElement(core_1.ListItemIcon, { style: iconStyle },
            react_1.default.createElement(item.icon, null))),
        react_1.default.createElement(core_1.ListItemText, { primary: title, inset: useSub ? false : !icon }),
        isExpandable && open && iconExpandLess,
        isExpandable && !open && iconExpandMore));
    var MenuItemChildren = isExpandable ? (react_1.default.createElement(core_1.Collapse, { in: open, timeout: "auto" },
        react_1.default.createElement(core_1.List, { component: "div", disablePadding: true, className: classes.MuiListRoot }, children === null || children === void 0 ? void 0 : children.map(function (item, index) { return (react_1.default.createElement(AllowedTo_1.default, { perform: (item === null || item === void 0 ? void 0 : item.permissions) || [], logic: "or" },
            react_1.default.createElement(AppMenuItem, { item: item, key: index }))); })))) : null;
    return (react_1.default.createElement(react_1.default.Fragment, null,
        MenuItemRoot,
        MenuItemChildren));
};
exports.default = AppMenuItem;
