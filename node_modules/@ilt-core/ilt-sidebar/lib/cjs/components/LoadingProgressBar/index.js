"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadingProgressBar = exports.LoadingBarContext = void 0;
var react_1 = __importStar(require("react"));
var styles_1 = require("@material-ui/core/styles");
var core_1 = require("@material-ui/core");
var YorickRoutes_1 = require("../../YorickRoutes");
var useStyles = styles_1.makeStyles({
    loadingBar: {
        position: 'absolute',
        zIndex: 9999,
        top: 0,
        width: '100vw',
        backgroundColor: '#fff',
    },
    fullHeight: {
        height: '100vh',
    },
});
var getTheme = function () {
    var color = react_1.useContext(YorickRoutes_1.TemplateContext).config.color;
    return styles_1.createMuiTheme({
        palette: {
            primary: {
                main: (color === null || color === void 0 ? void 0 : color.loading) || (color === null || color === void 0 ? void 0 : color.primary) || '#F9930B', // ILT orange
            },
        },
    });
};
exports.LoadingBarContext = react_1.createContext({
    firstLoad: true,
});
var LoadingProgressBar = function () {
    var classes = useStyles();
    var theme = getTheme();
    var _a = react_1.useState(false), active = _a[0], setActive = _a[1];
    var loadingBarContext = react_1.useContext(exports.LoadingBarContext);
    react_1.useEffect(function () {
        loadingBarContext.onChange = function (val) {
            setActive(val);
        };
    }, []);
    return (react_1.default.createElement(styles_1.MuiThemeProvider, { theme: theme }, active && (react_1.default.createElement("div", { className: classes.loadingBar + " " + (loadingBarContext.firstLoad && classes.fullHeight) },
        react_1.default.createElement(core_1.LinearProgress, { color: "primary" })))));
};
exports.LoadingProgressBar = LoadingProgressBar;
