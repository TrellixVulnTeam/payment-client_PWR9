var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React from 'react';
import { CloseIcon, InfoIcon, SuccessIcon, DangerIcon, WarningIcon, } from '../components/icons';
import { ToastType } from '../types';
import styles from '../styles/styles.module.scss';
var iconsByType = new Map();
[
    {
        type: ToastType.INFO,
        component: InfoIcon,
        title: 'Info',
    },
    {
        type: ToastType.SUCCESS,
        component: SuccessIcon,
        title: 'Success',
    },
    {
        type: ToastType.ERROR,
        component: DangerIcon,
        title: 'Error',
    },
    {
        type: ToastType.WARNING,
        component: WarningIcon,
        title: 'Warning',
    },
].map(function (item) { return iconsByType.set(item.type, item); });
var getIconByType = function (type) {
    if (iconsByType.has(type))
        return iconsByType.get(type);
    return iconsByType.get(ToastType.INFO);
};
var withLayout = function (MainComponent, type) {
    return function (props) {
        var icon = getIconByType(type);
        return (React.createElement(React.Fragment, null,
            React.createElement("div", { className: styles.message_icon }, icon && React.createElement(icon.component, null)),
            React.createElement(MainComponent, __assign({}, props)),
            React.createElement("div", { className: styles.close_icon },
                React.createElement(CloseIcon, null))));
    };
};
export default withLayout;
