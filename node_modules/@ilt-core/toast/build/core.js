var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React from 'react';
import { toast } from 'react-toastify';
import { Success, Danger, Warning, Info } from './components';
export var iToast = {
    success: function (config) {
        toast.success(React.createElement(Success, __assign({}, config)));
    },
    error: function (config) {
        toast.error(React.createElement(Danger, __assign({}, config)));
    },
    warning: function (config) {
        toast.warning(React.createElement(Warning, __assign({}, config)));
    },
    info: function (config) {
        toast.info(React.createElement(Info, __assign({}, config)));
    },
};
